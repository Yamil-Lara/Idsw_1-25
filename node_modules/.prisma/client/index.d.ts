
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * Vista rápida del funcionamiento y contenido de esta carpeta
 * 
 *     Archivos de configuración del proyecto
 *         - Conexión a la base de datos
 *         - Configuración de variables de entorno, servicios externos y/o opciones del servidor
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Renter
 * 
 */
export type Renter = $Result.DefaultSelection<Prisma.$RenterPayload>
/**
 * Model Ubicacion
 * 
 */
export type Ubicacion = $Result.DefaultSelection<Prisma.$UbicacionPayload>
/**
 * Model Vehiculo
 * 
 */
export type Vehiculo = $Result.DefaultSelection<Prisma.$VehiculoPayload>
/**
 * Model Reserva
 * 
 */
export type Reserva = $Result.DefaultSelection<Prisma.$ReservaPayload>
/**
 * Model Calificacion
 * 
 */
export type Calificacion = $Result.DefaultSelection<Prisma.$CalificacionPayload>
/**
 * Model HistorialBusqueda
 * 
 */
export type HistorialBusqueda = $Result.DefaultSelection<Prisma.$HistorialBusquedaPayload>
/**
 * Model Pago
 * 
 */
export type Pago = $Result.DefaultSelection<Prisma.$PagoPayload>
/**
 * Model DetallePago
 * 
 */
export type DetallePago = $Result.DefaultSelection<Prisma.$DetallePagoPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const MetodoPago: {
  QR: 'QR',
  TARJETA_DEBITO: 'TARJETA_DEBITO'
};

export type MetodoPago = (typeof MetodoPago)[keyof typeof MetodoPago]

}

export type MetodoPago = $Enums.MetodoPago

export const MetodoPago: typeof $Enums.MetodoPago

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.renter`: Exposes CRUD operations for the **Renter** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Renters
    * const renters = await prisma.renter.findMany()
    * ```
    */
  get renter(): Prisma.RenterDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ubicacion`: Exposes CRUD operations for the **Ubicacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ubicacions
    * const ubicacions = await prisma.ubicacion.findMany()
    * ```
    */
  get ubicacion(): Prisma.UbicacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.vehiculo`: Exposes CRUD operations for the **Vehiculo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vehiculos
    * const vehiculos = await prisma.vehiculo.findMany()
    * ```
    */
  get vehiculo(): Prisma.VehiculoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reserva`: Exposes CRUD operations for the **Reserva** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservas
    * const reservas = await prisma.reserva.findMany()
    * ```
    */
  get reserva(): Prisma.ReservaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.calificacion`: Exposes CRUD operations for the **Calificacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Calificacions
    * const calificacions = await prisma.calificacion.findMany()
    * ```
    */
  get calificacion(): Prisma.CalificacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.historialBusqueda`: Exposes CRUD operations for the **HistorialBusqueda** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialBusquedas
    * const historialBusquedas = await prisma.historialBusqueda.findMany()
    * ```
    */
  get historialBusqueda(): Prisma.HistorialBusquedaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pago`: Exposes CRUD operations for the **Pago** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pagos
    * const pagos = await prisma.pago.findMany()
    * ```
    */
  get pago(): Prisma.PagoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detallePago`: Exposes CRUD operations for the **DetallePago** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DetallePagos
    * const detallePagos = await prisma.detallePago.findMany()
    * ```
    */
  get detallePago(): Prisma.DetallePagoDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Renter: 'Renter',
    Ubicacion: 'Ubicacion',
    Vehiculo: 'Vehiculo',
    Reserva: 'Reserva',
    Calificacion: 'Calificacion',
    HistorialBusqueda: 'HistorialBusqueda',
    Pago: 'Pago',
    DetallePago: 'DetallePago'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "usuario" | "renter" | "ubicacion" | "vehiculo" | "reserva" | "calificacion" | "historialBusqueda" | "pago" | "detallePago"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Renter: {
        payload: Prisma.$RenterPayload<ExtArgs>
        fields: Prisma.RenterFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RenterFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RenterFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>
          }
          findFirst: {
            args: Prisma.RenterFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RenterFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>
          }
          findMany: {
            args: Prisma.RenterFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>[]
          }
          create: {
            args: Prisma.RenterCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>
          }
          createMany: {
            args: Prisma.RenterCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RenterCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>[]
          }
          delete: {
            args: Prisma.RenterDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>
          }
          update: {
            args: Prisma.RenterUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>
          }
          deleteMany: {
            args: Prisma.RenterDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RenterUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RenterUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>[]
          }
          upsert: {
            args: Prisma.RenterUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RenterPayload>
          }
          aggregate: {
            args: Prisma.RenterAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRenter>
          }
          groupBy: {
            args: Prisma.RenterGroupByArgs<ExtArgs>
            result: $Utils.Optional<RenterGroupByOutputType>[]
          }
          count: {
            args: Prisma.RenterCountArgs<ExtArgs>
            result: $Utils.Optional<RenterCountAggregateOutputType> | number
          }
        }
      }
      Ubicacion: {
        payload: Prisma.$UbicacionPayload<ExtArgs>
        fields: Prisma.UbicacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UbicacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UbicacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>
          }
          findFirst: {
            args: Prisma.UbicacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UbicacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>
          }
          findMany: {
            args: Prisma.UbicacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>[]
          }
          create: {
            args: Prisma.UbicacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>
          }
          createMany: {
            args: Prisma.UbicacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UbicacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>[]
          }
          delete: {
            args: Prisma.UbicacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>
          }
          update: {
            args: Prisma.UbicacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>
          }
          deleteMany: {
            args: Prisma.UbicacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UbicacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UbicacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>[]
          }
          upsert: {
            args: Prisma.UbicacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionPayload>
          }
          aggregate: {
            args: Prisma.UbicacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUbicacion>
          }
          groupBy: {
            args: Prisma.UbicacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<UbicacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.UbicacionCountArgs<ExtArgs>
            result: $Utils.Optional<UbicacionCountAggregateOutputType> | number
          }
        }
      }
      Vehiculo: {
        payload: Prisma.$VehiculoPayload<ExtArgs>
        fields: Prisma.VehiculoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VehiculoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehiculoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VehiculoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehiculoPayload>
          }
          findFirst: {
            args: Prisma.VehiculoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehiculoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VehiculoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehiculoPayload>
          }
          findMany: {
            args: Prisma.VehiculoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehiculoPayload>[]
          }
          create: {
            args: Prisma.VehiculoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehiculoPayload>
          }
          createMany: {
            args: Prisma.VehiculoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VehiculoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehiculoPayload>[]
          }
          delete: {
            args: Prisma.VehiculoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehiculoPayload>
          }
          update: {
            args: Prisma.VehiculoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehiculoPayload>
          }
          deleteMany: {
            args: Prisma.VehiculoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VehiculoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VehiculoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehiculoPayload>[]
          }
          upsert: {
            args: Prisma.VehiculoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VehiculoPayload>
          }
          aggregate: {
            args: Prisma.VehiculoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVehiculo>
          }
          groupBy: {
            args: Prisma.VehiculoGroupByArgs<ExtArgs>
            result: $Utils.Optional<VehiculoGroupByOutputType>[]
          }
          count: {
            args: Prisma.VehiculoCountArgs<ExtArgs>
            result: $Utils.Optional<VehiculoCountAggregateOutputType> | number
          }
        }
      }
      Reserva: {
        payload: Prisma.$ReservaPayload<ExtArgs>
        fields: Prisma.ReservaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          findFirst: {
            args: Prisma.ReservaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          findMany: {
            args: Prisma.ReservaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>[]
          }
          create: {
            args: Prisma.ReservaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          createMany: {
            args: Prisma.ReservaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>[]
          }
          delete: {
            args: Prisma.ReservaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          update: {
            args: Prisma.ReservaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          deleteMany: {
            args: Prisma.ReservaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>[]
          }
          upsert: {
            args: Prisma.ReservaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservaPayload>
          }
          aggregate: {
            args: Prisma.ReservaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReserva>
          }
          groupBy: {
            args: Prisma.ReservaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservaCountArgs<ExtArgs>
            result: $Utils.Optional<ReservaCountAggregateOutputType> | number
          }
        }
      }
      Calificacion: {
        payload: Prisma.$CalificacionPayload<ExtArgs>
        fields: Prisma.CalificacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CalificacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CalificacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>
          }
          findFirst: {
            args: Prisma.CalificacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CalificacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>
          }
          findMany: {
            args: Prisma.CalificacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>[]
          }
          create: {
            args: Prisma.CalificacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>
          }
          createMany: {
            args: Prisma.CalificacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CalificacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>[]
          }
          delete: {
            args: Prisma.CalificacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>
          }
          update: {
            args: Prisma.CalificacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>
          }
          deleteMany: {
            args: Prisma.CalificacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CalificacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CalificacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>[]
          }
          upsert: {
            args: Prisma.CalificacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>
          }
          aggregate: {
            args: Prisma.CalificacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCalificacion>
          }
          groupBy: {
            args: Prisma.CalificacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<CalificacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.CalificacionCountArgs<ExtArgs>
            result: $Utils.Optional<CalificacionCountAggregateOutputType> | number
          }
        }
      }
      HistorialBusqueda: {
        payload: Prisma.$HistorialBusquedaPayload<ExtArgs>
        fields: Prisma.HistorialBusquedaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HistorialBusquedaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialBusquedaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HistorialBusquedaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialBusquedaPayload>
          }
          findFirst: {
            args: Prisma.HistorialBusquedaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialBusquedaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HistorialBusquedaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialBusquedaPayload>
          }
          findMany: {
            args: Prisma.HistorialBusquedaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialBusquedaPayload>[]
          }
          create: {
            args: Prisma.HistorialBusquedaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialBusquedaPayload>
          }
          createMany: {
            args: Prisma.HistorialBusquedaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HistorialBusquedaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialBusquedaPayload>[]
          }
          delete: {
            args: Prisma.HistorialBusquedaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialBusquedaPayload>
          }
          update: {
            args: Prisma.HistorialBusquedaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialBusquedaPayload>
          }
          deleteMany: {
            args: Prisma.HistorialBusquedaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HistorialBusquedaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HistorialBusquedaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialBusquedaPayload>[]
          }
          upsert: {
            args: Prisma.HistorialBusquedaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialBusquedaPayload>
          }
          aggregate: {
            args: Prisma.HistorialBusquedaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorialBusqueda>
          }
          groupBy: {
            args: Prisma.HistorialBusquedaGroupByArgs<ExtArgs>
            result: $Utils.Optional<HistorialBusquedaGroupByOutputType>[]
          }
          count: {
            args: Prisma.HistorialBusquedaCountArgs<ExtArgs>
            result: $Utils.Optional<HistorialBusquedaCountAggregateOutputType> | number
          }
        }
      }
      Pago: {
        payload: Prisma.$PagoPayload<ExtArgs>
        fields: Prisma.PagoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PagoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PagoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          findFirst: {
            args: Prisma.PagoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PagoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          findMany: {
            args: Prisma.PagoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>[]
          }
          create: {
            args: Prisma.PagoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          createMany: {
            args: Prisma.PagoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PagoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>[]
          }
          delete: {
            args: Prisma.PagoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          update: {
            args: Prisma.PagoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          deleteMany: {
            args: Prisma.PagoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PagoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PagoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>[]
          }
          upsert: {
            args: Prisma.PagoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          aggregate: {
            args: Prisma.PagoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePago>
          }
          groupBy: {
            args: Prisma.PagoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PagoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PagoCountArgs<ExtArgs>
            result: $Utils.Optional<PagoCountAggregateOutputType> | number
          }
        }
      }
      DetallePago: {
        payload: Prisma.$DetallePagoPayload<ExtArgs>
        fields: Prisma.DetallePagoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DetallePagoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePagoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DetallePagoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePagoPayload>
          }
          findFirst: {
            args: Prisma.DetallePagoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePagoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DetallePagoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePagoPayload>
          }
          findMany: {
            args: Prisma.DetallePagoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePagoPayload>[]
          }
          create: {
            args: Prisma.DetallePagoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePagoPayload>
          }
          createMany: {
            args: Prisma.DetallePagoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DetallePagoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePagoPayload>[]
          }
          delete: {
            args: Prisma.DetallePagoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePagoPayload>
          }
          update: {
            args: Prisma.DetallePagoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePagoPayload>
          }
          deleteMany: {
            args: Prisma.DetallePagoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DetallePagoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DetallePagoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePagoPayload>[]
          }
          upsert: {
            args: Prisma.DetallePagoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DetallePagoPayload>
          }
          aggregate: {
            args: Prisma.DetallePagoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetallePago>
          }
          groupBy: {
            args: Prisma.DetallePagoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DetallePagoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DetallePagoCountArgs<ExtArgs>
            result: $Utils.Optional<DetallePagoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    usuario?: UsuarioOmit
    renter?: RenterOmit
    ubicacion?: UbicacionOmit
    vehiculo?: VehiculoOmit
    reserva?: ReservaOmit
    calificacion?: CalificacionOmit
    historialBusqueda?: HistorialBusquedaOmit
    pago?: PagoOmit
    detallePago?: DetallePagoOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    historialBusqueda: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historialBusqueda?: boolean | UsuarioCountOutputTypeCountHistorialBusquedaArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountHistorialBusquedaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialBusquedaWhereInput
  }


  /**
   * Count Type RenterCountOutputType
   */

  export type RenterCountOutputType = {
    reservas: number
    calificaciones: number
    vehiculos: number
  }

  export type RenterCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservas?: boolean | RenterCountOutputTypeCountReservasArgs
    calificaciones?: boolean | RenterCountOutputTypeCountCalificacionesArgs
    vehiculos?: boolean | RenterCountOutputTypeCountVehiculosArgs
  }

  // Custom InputTypes
  /**
   * RenterCountOutputType without action
   */
  export type RenterCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RenterCountOutputType
     */
    select?: RenterCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RenterCountOutputType without action
   */
  export type RenterCountOutputTypeCountReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
  }

  /**
   * RenterCountOutputType without action
   */
  export type RenterCountOutputTypeCountCalificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionWhereInput
  }

  /**
   * RenterCountOutputType without action
   */
  export type RenterCountOutputTypeCountVehiculosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VehiculoWhereInput
  }


  /**
   * Count Type UbicacionCountOutputType
   */

  export type UbicacionCountOutputType = {
    vehiculos: number
  }

  export type UbicacionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehiculos?: boolean | UbicacionCountOutputTypeCountVehiculosArgs
  }

  // Custom InputTypes
  /**
   * UbicacionCountOutputType without action
   */
  export type UbicacionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UbicacionCountOutputType
     */
    select?: UbicacionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UbicacionCountOutputType without action
   */
  export type UbicacionCountOutputTypeCountVehiculosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VehiculoWhereInput
  }


  /**
   * Count Type VehiculoCountOutputType
   */

  export type VehiculoCountOutputType = {
    reservas: number
    calificaciones: number
  }

  export type VehiculoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservas?: boolean | VehiculoCountOutputTypeCountReservasArgs
    calificaciones?: boolean | VehiculoCountOutputTypeCountCalificacionesArgs
  }

  // Custom InputTypes
  /**
   * VehiculoCountOutputType without action
   */
  export type VehiculoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VehiculoCountOutputType
     */
    select?: VehiculoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VehiculoCountOutputType without action
   */
  export type VehiculoCountOutputTypeCountReservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
  }

  /**
   * VehiculoCountOutputType without action
   */
  export type VehiculoCountOutputTypeCountCalificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionWhereInput
  }


  /**
   * Count Type ReservaCountOutputType
   */

  export type ReservaCountOutputType = {
    pagos: number
  }

  export type ReservaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pagos?: boolean | ReservaCountOutputTypeCountPagosArgs
  }

  // Custom InputTypes
  /**
   * ReservaCountOutputType without action
   */
  export type ReservaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReservaCountOutputType
     */
    select?: ReservaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReservaCountOutputType without action
   */
  export type ReservaCountOutputTypeCountPagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoWhereInput
  }


  /**
   * Count Type PagoCountOutputType
   */

  export type PagoCountOutputType = {
    detalles: number
  }

  export type PagoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles?: boolean | PagoCountOutputTypeCountDetallesArgs
  }

  // Custom InputTypes
  /**
   * PagoCountOutputType without action
   */
  export type PagoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PagoCountOutputType
     */
    select?: PagoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PagoCountOutputType without action
   */
  export type PagoCountOutputTypeCountDetallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetallePagoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    idusuario: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    idusuario: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    idusuario: number | null
    nombre_completo: string | null
    correo: string | null
    contrasena: string | null
    telefono: string | null
    genero: string | null
    foto_perfil: string | null
    estado: string | null
    fecha_registro: Date | null
    ultima_modificacion: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    idusuario: number | null
    nombre_completo: string | null
    correo: string | null
    contrasena: string | null
    telefono: string | null
    genero: string | null
    foto_perfil: string | null
    estado: string | null
    fecha_registro: Date | null
    ultima_modificacion: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    idusuario: number
    nombre_completo: number
    correo: number
    contrasena: number
    telefono: number
    genero: number
    foto_perfil: number
    estado: number
    fecha_registro: number
    ultima_modificacion: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    idusuario?: true
  }

  export type UsuarioSumAggregateInputType = {
    idusuario?: true
  }

  export type UsuarioMinAggregateInputType = {
    idusuario?: true
    nombre_completo?: true
    correo?: true
    contrasena?: true
    telefono?: true
    genero?: true
    foto_perfil?: true
    estado?: true
    fecha_registro?: true
    ultima_modificacion?: true
  }

  export type UsuarioMaxAggregateInputType = {
    idusuario?: true
    nombre_completo?: true
    correo?: true
    contrasena?: true
    telefono?: true
    genero?: true
    foto_perfil?: true
    estado?: true
    fecha_registro?: true
    ultima_modificacion?: true
  }

  export type UsuarioCountAggregateInputType = {
    idusuario?: true
    nombre_completo?: true
    correo?: true
    contrasena?: true
    telefono?: true
    genero?: true
    foto_perfil?: true
    estado?: true
    fecha_registro?: true
    ultima_modificacion?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    idusuario: number
    nombre_completo: string
    correo: string
    contrasena: string
    telefono: string | null
    genero: string | null
    foto_perfil: string | null
    estado: string
    fecha_registro: Date
    ultima_modificacion: Date
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idusuario?: boolean
    nombre_completo?: boolean
    correo?: boolean
    contrasena?: boolean
    telefono?: boolean
    genero?: boolean
    foto_perfil?: boolean
    estado?: boolean
    fecha_registro?: boolean
    ultima_modificacion?: boolean
    historialBusqueda?: boolean | Usuario$historialBusquedaArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idusuario?: boolean
    nombre_completo?: boolean
    correo?: boolean
    contrasena?: boolean
    telefono?: boolean
    genero?: boolean
    foto_perfil?: boolean
    estado?: boolean
    fecha_registro?: boolean
    ultima_modificacion?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idusuario?: boolean
    nombre_completo?: boolean
    correo?: boolean
    contrasena?: boolean
    telefono?: boolean
    genero?: boolean
    foto_perfil?: boolean
    estado?: boolean
    fecha_registro?: boolean
    ultima_modificacion?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    idusuario?: boolean
    nombre_completo?: boolean
    correo?: boolean
    contrasena?: boolean
    telefono?: boolean
    genero?: boolean
    foto_perfil?: boolean
    estado?: boolean
    fecha_registro?: boolean
    ultima_modificacion?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"idusuario" | "nombre_completo" | "correo" | "contrasena" | "telefono" | "genero" | "foto_perfil" | "estado" | "fecha_registro" | "ultima_modificacion", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historialBusqueda?: boolean | Usuario$historialBusquedaArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      historialBusqueda: Prisma.$HistorialBusquedaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      idusuario: number
      nombre_completo: string
      correo: string
      contrasena: string
      telefono: string | null
      genero: string | null
      foto_perfil: string | null
      estado: string
      fecha_registro: Date
      ultima_modificacion: Date
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `idusuario`
     * const usuarioWithIdusuarioOnly = await prisma.usuario.findMany({ select: { idusuario: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `idusuario`
     * const usuarioWithIdusuarioOnly = await prisma.usuario.createManyAndReturn({
     *   select: { idusuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `idusuario`
     * const usuarioWithIdusuarioOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { idusuario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    historialBusqueda<T extends Usuario$historialBusquedaArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$historialBusquedaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialBusquedaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly idusuario: FieldRef<"Usuario", 'Int'>
    readonly nombre_completo: FieldRef<"Usuario", 'String'>
    readonly correo: FieldRef<"Usuario", 'String'>
    readonly contrasena: FieldRef<"Usuario", 'String'>
    readonly telefono: FieldRef<"Usuario", 'String'>
    readonly genero: FieldRef<"Usuario", 'String'>
    readonly foto_perfil: FieldRef<"Usuario", 'String'>
    readonly estado: FieldRef<"Usuario", 'String'>
    readonly fecha_registro: FieldRef<"Usuario", 'DateTime'>
    readonly ultima_modificacion: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.historialBusqueda
   */
  export type Usuario$historialBusquedaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaInclude<ExtArgs> | null
    where?: HistorialBusquedaWhereInput
    orderBy?: HistorialBusquedaOrderByWithRelationInput | HistorialBusquedaOrderByWithRelationInput[]
    cursor?: HistorialBusquedaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialBusquedaScalarFieldEnum | HistorialBusquedaScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Renter
   */

  export type AggregateRenter = {
    _count: RenterCountAggregateOutputType | null
    _avg: RenterAvgAggregateOutputType | null
    _sum: RenterSumAggregateOutputType | null
    _min: RenterMinAggregateOutputType | null
    _max: RenterMaxAggregateOutputType | null
  }

  export type RenterAvgAggregateOutputType = {
    idrenter: number | null
  }

  export type RenterSumAggregateOutputType = {
    idrenter: number | null
  }

  export type RenterMinAggregateOutputType = {
    idrenter: number | null
    nombre_completo: string | null
    correo: string | null
    contrasena: string | null
    telefono: string | null
    genero: string | null
    foto_perfil: string | null
    estado: string | null
    fecha_registro: Date | null
    ultima_modificacion: Date | null
  }

  export type RenterMaxAggregateOutputType = {
    idrenter: number | null
    nombre_completo: string | null
    correo: string | null
    contrasena: string | null
    telefono: string | null
    genero: string | null
    foto_perfil: string | null
    estado: string | null
    fecha_registro: Date | null
    ultima_modificacion: Date | null
  }

  export type RenterCountAggregateOutputType = {
    idrenter: number
    nombre_completo: number
    correo: number
    contrasena: number
    telefono: number
    genero: number
    foto_perfil: number
    estado: number
    fecha_registro: number
    ultima_modificacion: number
    _all: number
  }


  export type RenterAvgAggregateInputType = {
    idrenter?: true
  }

  export type RenterSumAggregateInputType = {
    idrenter?: true
  }

  export type RenterMinAggregateInputType = {
    idrenter?: true
    nombre_completo?: true
    correo?: true
    contrasena?: true
    telefono?: true
    genero?: true
    foto_perfil?: true
    estado?: true
    fecha_registro?: true
    ultima_modificacion?: true
  }

  export type RenterMaxAggregateInputType = {
    idrenter?: true
    nombre_completo?: true
    correo?: true
    contrasena?: true
    telefono?: true
    genero?: true
    foto_perfil?: true
    estado?: true
    fecha_registro?: true
    ultima_modificacion?: true
  }

  export type RenterCountAggregateInputType = {
    idrenter?: true
    nombre_completo?: true
    correo?: true
    contrasena?: true
    telefono?: true
    genero?: true
    foto_perfil?: true
    estado?: true
    fecha_registro?: true
    ultima_modificacion?: true
    _all?: true
  }

  export type RenterAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Renter to aggregate.
     */
    where?: RenterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Renters to fetch.
     */
    orderBy?: RenterOrderByWithRelationInput | RenterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RenterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Renters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Renters.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Renters
    **/
    _count?: true | RenterCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RenterAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RenterSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RenterMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RenterMaxAggregateInputType
  }

  export type GetRenterAggregateType<T extends RenterAggregateArgs> = {
        [P in keyof T & keyof AggregateRenter]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRenter[P]>
      : GetScalarType<T[P], AggregateRenter[P]>
  }




  export type RenterGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RenterWhereInput
    orderBy?: RenterOrderByWithAggregationInput | RenterOrderByWithAggregationInput[]
    by: RenterScalarFieldEnum[] | RenterScalarFieldEnum
    having?: RenterScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RenterCountAggregateInputType | true
    _avg?: RenterAvgAggregateInputType
    _sum?: RenterSumAggregateInputType
    _min?: RenterMinAggregateInputType
    _max?: RenterMaxAggregateInputType
  }

  export type RenterGroupByOutputType = {
    idrenter: number
    nombre_completo: string
    correo: string
    contrasena: string
    telefono: string | null
    genero: string | null
    foto_perfil: string | null
    estado: string
    fecha_registro: Date
    ultima_modificacion: Date
    _count: RenterCountAggregateOutputType | null
    _avg: RenterAvgAggregateOutputType | null
    _sum: RenterSumAggregateOutputType | null
    _min: RenterMinAggregateOutputType | null
    _max: RenterMaxAggregateOutputType | null
  }

  type GetRenterGroupByPayload<T extends RenterGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RenterGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RenterGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RenterGroupByOutputType[P]>
            : GetScalarType<T[P], RenterGroupByOutputType[P]>
        }
      >
    >


  export type RenterSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idrenter?: boolean
    nombre_completo?: boolean
    correo?: boolean
    contrasena?: boolean
    telefono?: boolean
    genero?: boolean
    foto_perfil?: boolean
    estado?: boolean
    fecha_registro?: boolean
    ultima_modificacion?: boolean
    reservas?: boolean | Renter$reservasArgs<ExtArgs>
    calificaciones?: boolean | Renter$calificacionesArgs<ExtArgs>
    vehiculos?: boolean | Renter$vehiculosArgs<ExtArgs>
    _count?: boolean | RenterCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["renter"]>

  export type RenterSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idrenter?: boolean
    nombre_completo?: boolean
    correo?: boolean
    contrasena?: boolean
    telefono?: boolean
    genero?: boolean
    foto_perfil?: boolean
    estado?: boolean
    fecha_registro?: boolean
    ultima_modificacion?: boolean
  }, ExtArgs["result"]["renter"]>

  export type RenterSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idrenter?: boolean
    nombre_completo?: boolean
    correo?: boolean
    contrasena?: boolean
    telefono?: boolean
    genero?: boolean
    foto_perfil?: boolean
    estado?: boolean
    fecha_registro?: boolean
    ultima_modificacion?: boolean
  }, ExtArgs["result"]["renter"]>

  export type RenterSelectScalar = {
    idrenter?: boolean
    nombre_completo?: boolean
    correo?: boolean
    contrasena?: boolean
    telefono?: boolean
    genero?: boolean
    foto_perfil?: boolean
    estado?: boolean
    fecha_registro?: boolean
    ultima_modificacion?: boolean
  }

  export type RenterOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"idrenter" | "nombre_completo" | "correo" | "contrasena" | "telefono" | "genero" | "foto_perfil" | "estado" | "fecha_registro" | "ultima_modificacion", ExtArgs["result"]["renter"]>
  export type RenterInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reservas?: boolean | Renter$reservasArgs<ExtArgs>
    calificaciones?: boolean | Renter$calificacionesArgs<ExtArgs>
    vehiculos?: boolean | Renter$vehiculosArgs<ExtArgs>
    _count?: boolean | RenterCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RenterIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RenterIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RenterPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Renter"
    objects: {
      reservas: Prisma.$ReservaPayload<ExtArgs>[]
      calificaciones: Prisma.$CalificacionPayload<ExtArgs>[]
      vehiculos: Prisma.$VehiculoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      idrenter: number
      nombre_completo: string
      correo: string
      contrasena: string
      telefono: string | null
      genero: string | null
      foto_perfil: string | null
      estado: string
      fecha_registro: Date
      ultima_modificacion: Date
    }, ExtArgs["result"]["renter"]>
    composites: {}
  }

  type RenterGetPayload<S extends boolean | null | undefined | RenterDefaultArgs> = $Result.GetResult<Prisma.$RenterPayload, S>

  type RenterCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RenterFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RenterCountAggregateInputType | true
    }

  export interface RenterDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Renter'], meta: { name: 'Renter' } }
    /**
     * Find zero or one Renter that matches the filter.
     * @param {RenterFindUniqueArgs} args - Arguments to find a Renter
     * @example
     * // Get one Renter
     * const renter = await prisma.renter.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RenterFindUniqueArgs>(args: SelectSubset<T, RenterFindUniqueArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Renter that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RenterFindUniqueOrThrowArgs} args - Arguments to find a Renter
     * @example
     * // Get one Renter
     * const renter = await prisma.renter.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RenterFindUniqueOrThrowArgs>(args: SelectSubset<T, RenterFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Renter that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterFindFirstArgs} args - Arguments to find a Renter
     * @example
     * // Get one Renter
     * const renter = await prisma.renter.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RenterFindFirstArgs>(args?: SelectSubset<T, RenterFindFirstArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Renter that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterFindFirstOrThrowArgs} args - Arguments to find a Renter
     * @example
     * // Get one Renter
     * const renter = await prisma.renter.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RenterFindFirstOrThrowArgs>(args?: SelectSubset<T, RenterFindFirstOrThrowArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Renters that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Renters
     * const renters = await prisma.renter.findMany()
     * 
     * // Get first 10 Renters
     * const renters = await prisma.renter.findMany({ take: 10 })
     * 
     * // Only select the `idrenter`
     * const renterWithIdrenterOnly = await prisma.renter.findMany({ select: { idrenter: true } })
     * 
     */
    findMany<T extends RenterFindManyArgs>(args?: SelectSubset<T, RenterFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Renter.
     * @param {RenterCreateArgs} args - Arguments to create a Renter.
     * @example
     * // Create one Renter
     * const Renter = await prisma.renter.create({
     *   data: {
     *     // ... data to create a Renter
     *   }
     * })
     * 
     */
    create<T extends RenterCreateArgs>(args: SelectSubset<T, RenterCreateArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Renters.
     * @param {RenterCreateManyArgs} args - Arguments to create many Renters.
     * @example
     * // Create many Renters
     * const renter = await prisma.renter.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RenterCreateManyArgs>(args?: SelectSubset<T, RenterCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Renters and returns the data saved in the database.
     * @param {RenterCreateManyAndReturnArgs} args - Arguments to create many Renters.
     * @example
     * // Create many Renters
     * const renter = await prisma.renter.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Renters and only return the `idrenter`
     * const renterWithIdrenterOnly = await prisma.renter.createManyAndReturn({
     *   select: { idrenter: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RenterCreateManyAndReturnArgs>(args?: SelectSubset<T, RenterCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Renter.
     * @param {RenterDeleteArgs} args - Arguments to delete one Renter.
     * @example
     * // Delete one Renter
     * const Renter = await prisma.renter.delete({
     *   where: {
     *     // ... filter to delete one Renter
     *   }
     * })
     * 
     */
    delete<T extends RenterDeleteArgs>(args: SelectSubset<T, RenterDeleteArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Renter.
     * @param {RenterUpdateArgs} args - Arguments to update one Renter.
     * @example
     * // Update one Renter
     * const renter = await prisma.renter.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RenterUpdateArgs>(args: SelectSubset<T, RenterUpdateArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Renters.
     * @param {RenterDeleteManyArgs} args - Arguments to filter Renters to delete.
     * @example
     * // Delete a few Renters
     * const { count } = await prisma.renter.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RenterDeleteManyArgs>(args?: SelectSubset<T, RenterDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Renters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Renters
     * const renter = await prisma.renter.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RenterUpdateManyArgs>(args: SelectSubset<T, RenterUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Renters and returns the data updated in the database.
     * @param {RenterUpdateManyAndReturnArgs} args - Arguments to update many Renters.
     * @example
     * // Update many Renters
     * const renter = await prisma.renter.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Renters and only return the `idrenter`
     * const renterWithIdrenterOnly = await prisma.renter.updateManyAndReturn({
     *   select: { idrenter: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RenterUpdateManyAndReturnArgs>(args: SelectSubset<T, RenterUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Renter.
     * @param {RenterUpsertArgs} args - Arguments to update or create a Renter.
     * @example
     * // Update or create a Renter
     * const renter = await prisma.renter.upsert({
     *   create: {
     *     // ... data to create a Renter
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Renter we want to update
     *   }
     * })
     */
    upsert<T extends RenterUpsertArgs>(args: SelectSubset<T, RenterUpsertArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Renters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterCountArgs} args - Arguments to filter Renters to count.
     * @example
     * // Count the number of Renters
     * const count = await prisma.renter.count({
     *   where: {
     *     // ... the filter for the Renters we want to count
     *   }
     * })
    **/
    count<T extends RenterCountArgs>(
      args?: Subset<T, RenterCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RenterCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Renter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RenterAggregateArgs>(args: Subset<T, RenterAggregateArgs>): Prisma.PrismaPromise<GetRenterAggregateType<T>>

    /**
     * Group by Renter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RenterGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RenterGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RenterGroupByArgs['orderBy'] }
        : { orderBy?: RenterGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RenterGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRenterGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Renter model
   */
  readonly fields: RenterFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Renter.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RenterClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reservas<T extends Renter$reservasArgs<ExtArgs> = {}>(args?: Subset<T, Renter$reservasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calificaciones<T extends Renter$calificacionesArgs<ExtArgs> = {}>(args?: Subset<T, Renter$calificacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    vehiculos<T extends Renter$vehiculosArgs<ExtArgs> = {}>(args?: Subset<T, Renter$vehiculosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Renter model
   */
  interface RenterFieldRefs {
    readonly idrenter: FieldRef<"Renter", 'Int'>
    readonly nombre_completo: FieldRef<"Renter", 'String'>
    readonly correo: FieldRef<"Renter", 'String'>
    readonly contrasena: FieldRef<"Renter", 'String'>
    readonly telefono: FieldRef<"Renter", 'String'>
    readonly genero: FieldRef<"Renter", 'String'>
    readonly foto_perfil: FieldRef<"Renter", 'String'>
    readonly estado: FieldRef<"Renter", 'String'>
    readonly fecha_registro: FieldRef<"Renter", 'DateTime'>
    readonly ultima_modificacion: FieldRef<"Renter", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Renter findUnique
   */
  export type RenterFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * Filter, which Renter to fetch.
     */
    where: RenterWhereUniqueInput
  }

  /**
   * Renter findUniqueOrThrow
   */
  export type RenterFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * Filter, which Renter to fetch.
     */
    where: RenterWhereUniqueInput
  }

  /**
   * Renter findFirst
   */
  export type RenterFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * Filter, which Renter to fetch.
     */
    where?: RenterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Renters to fetch.
     */
    orderBy?: RenterOrderByWithRelationInput | RenterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Renters.
     */
    cursor?: RenterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Renters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Renters.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Renters.
     */
    distinct?: RenterScalarFieldEnum | RenterScalarFieldEnum[]
  }

  /**
   * Renter findFirstOrThrow
   */
  export type RenterFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * Filter, which Renter to fetch.
     */
    where?: RenterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Renters to fetch.
     */
    orderBy?: RenterOrderByWithRelationInput | RenterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Renters.
     */
    cursor?: RenterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Renters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Renters.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Renters.
     */
    distinct?: RenterScalarFieldEnum | RenterScalarFieldEnum[]
  }

  /**
   * Renter findMany
   */
  export type RenterFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * Filter, which Renters to fetch.
     */
    where?: RenterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Renters to fetch.
     */
    orderBy?: RenterOrderByWithRelationInput | RenterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Renters.
     */
    cursor?: RenterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Renters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Renters.
     */
    skip?: number
    distinct?: RenterScalarFieldEnum | RenterScalarFieldEnum[]
  }

  /**
   * Renter create
   */
  export type RenterCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * The data needed to create a Renter.
     */
    data: XOR<RenterCreateInput, RenterUncheckedCreateInput>
  }

  /**
   * Renter createMany
   */
  export type RenterCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Renters.
     */
    data: RenterCreateManyInput | RenterCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Renter createManyAndReturn
   */
  export type RenterCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * The data used to create many Renters.
     */
    data: RenterCreateManyInput | RenterCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Renter update
   */
  export type RenterUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * The data needed to update a Renter.
     */
    data: XOR<RenterUpdateInput, RenterUncheckedUpdateInput>
    /**
     * Choose, which Renter to update.
     */
    where: RenterWhereUniqueInput
  }

  /**
   * Renter updateMany
   */
  export type RenterUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Renters.
     */
    data: XOR<RenterUpdateManyMutationInput, RenterUncheckedUpdateManyInput>
    /**
     * Filter which Renters to update
     */
    where?: RenterWhereInput
    /**
     * Limit how many Renters to update.
     */
    limit?: number
  }

  /**
   * Renter updateManyAndReturn
   */
  export type RenterUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * The data used to update Renters.
     */
    data: XOR<RenterUpdateManyMutationInput, RenterUncheckedUpdateManyInput>
    /**
     * Filter which Renters to update
     */
    where?: RenterWhereInput
    /**
     * Limit how many Renters to update.
     */
    limit?: number
  }

  /**
   * Renter upsert
   */
  export type RenterUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * The filter to search for the Renter to update in case it exists.
     */
    where: RenterWhereUniqueInput
    /**
     * In case the Renter found by the `where` argument doesn't exist, create a new Renter with this data.
     */
    create: XOR<RenterCreateInput, RenterUncheckedCreateInput>
    /**
     * In case the Renter was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RenterUpdateInput, RenterUncheckedUpdateInput>
  }

  /**
   * Renter delete
   */
  export type RenterDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    /**
     * Filter which Renter to delete.
     */
    where: RenterWhereUniqueInput
  }

  /**
   * Renter deleteMany
   */
  export type RenterDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Renters to delete
     */
    where?: RenterWhereInput
    /**
     * Limit how many Renters to delete.
     */
    limit?: number
  }

  /**
   * Renter.reservas
   */
  export type Renter$reservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    cursor?: ReservaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Renter.calificaciones
   */
  export type Renter$calificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    where?: CalificacionWhereInput
    orderBy?: CalificacionOrderByWithRelationInput | CalificacionOrderByWithRelationInput[]
    cursor?: CalificacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalificacionScalarFieldEnum | CalificacionScalarFieldEnum[]
  }

  /**
   * Renter.vehiculos
   */
  export type Renter$vehiculosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoInclude<ExtArgs> | null
    where?: VehiculoWhereInput
    orderBy?: VehiculoOrderByWithRelationInput | VehiculoOrderByWithRelationInput[]
    cursor?: VehiculoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VehiculoScalarFieldEnum | VehiculoScalarFieldEnum[]
  }

  /**
   * Renter without action
   */
  export type RenterDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
  }


  /**
   * Model Ubicacion
   */

  export type AggregateUbicacion = {
    _count: UbicacionCountAggregateOutputType | null
    _avg: UbicacionAvgAggregateOutputType | null
    _sum: UbicacionSumAggregateOutputType | null
    _min: UbicacionMinAggregateOutputType | null
    _max: UbicacionMaxAggregateOutputType | null
  }

  export type UbicacionAvgAggregateOutputType = {
    idubicacion: number | null
    latitud: number | null
    amplitud: number | null
  }

  export type UbicacionSumAggregateOutputType = {
    idubicacion: number | null
    latitud: number | null
    amplitud: number | null
  }

  export type UbicacionMinAggregateOutputType = {
    idubicacion: number | null
    pais: string | null
    ciudad: string | null
    latitud: number | null
    amplitud: number | null
  }

  export type UbicacionMaxAggregateOutputType = {
    idubicacion: number | null
    pais: string | null
    ciudad: string | null
    latitud: number | null
    amplitud: number | null
  }

  export type UbicacionCountAggregateOutputType = {
    idubicacion: number
    pais: number
    ciudad: number
    latitud: number
    amplitud: number
    _all: number
  }


  export type UbicacionAvgAggregateInputType = {
    idubicacion?: true
    latitud?: true
    amplitud?: true
  }

  export type UbicacionSumAggregateInputType = {
    idubicacion?: true
    latitud?: true
    amplitud?: true
  }

  export type UbicacionMinAggregateInputType = {
    idubicacion?: true
    pais?: true
    ciudad?: true
    latitud?: true
    amplitud?: true
  }

  export type UbicacionMaxAggregateInputType = {
    idubicacion?: true
    pais?: true
    ciudad?: true
    latitud?: true
    amplitud?: true
  }

  export type UbicacionCountAggregateInputType = {
    idubicacion?: true
    pais?: true
    ciudad?: true
    latitud?: true
    amplitud?: true
    _all?: true
  }

  export type UbicacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ubicacion to aggregate.
     */
    where?: UbicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ubicacions to fetch.
     */
    orderBy?: UbicacionOrderByWithRelationInput | UbicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UbicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ubicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ubicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ubicacions
    **/
    _count?: true | UbicacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UbicacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UbicacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UbicacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UbicacionMaxAggregateInputType
  }

  export type GetUbicacionAggregateType<T extends UbicacionAggregateArgs> = {
        [P in keyof T & keyof AggregateUbicacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUbicacion[P]>
      : GetScalarType<T[P], AggregateUbicacion[P]>
  }




  export type UbicacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UbicacionWhereInput
    orderBy?: UbicacionOrderByWithAggregationInput | UbicacionOrderByWithAggregationInput[]
    by: UbicacionScalarFieldEnum[] | UbicacionScalarFieldEnum
    having?: UbicacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UbicacionCountAggregateInputType | true
    _avg?: UbicacionAvgAggregateInputType
    _sum?: UbicacionSumAggregateInputType
    _min?: UbicacionMinAggregateInputType
    _max?: UbicacionMaxAggregateInputType
  }

  export type UbicacionGroupByOutputType = {
    idubicacion: number
    pais: string
    ciudad: string
    latitud: number | null
    amplitud: number | null
    _count: UbicacionCountAggregateOutputType | null
    _avg: UbicacionAvgAggregateOutputType | null
    _sum: UbicacionSumAggregateOutputType | null
    _min: UbicacionMinAggregateOutputType | null
    _max: UbicacionMaxAggregateOutputType | null
  }

  type GetUbicacionGroupByPayload<T extends UbicacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UbicacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UbicacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UbicacionGroupByOutputType[P]>
            : GetScalarType<T[P], UbicacionGroupByOutputType[P]>
        }
      >
    >


  export type UbicacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idubicacion?: boolean
    pais?: boolean
    ciudad?: boolean
    latitud?: boolean
    amplitud?: boolean
    vehiculos?: boolean | Ubicacion$vehiculosArgs<ExtArgs>
    _count?: boolean | UbicacionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ubicacion"]>

  export type UbicacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idubicacion?: boolean
    pais?: boolean
    ciudad?: boolean
    latitud?: boolean
    amplitud?: boolean
  }, ExtArgs["result"]["ubicacion"]>

  export type UbicacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idubicacion?: boolean
    pais?: boolean
    ciudad?: boolean
    latitud?: boolean
    amplitud?: boolean
  }, ExtArgs["result"]["ubicacion"]>

  export type UbicacionSelectScalar = {
    idubicacion?: boolean
    pais?: boolean
    ciudad?: boolean
    latitud?: boolean
    amplitud?: boolean
  }

  export type UbicacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"idubicacion" | "pais" | "ciudad" | "latitud" | "amplitud", ExtArgs["result"]["ubicacion"]>
  export type UbicacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vehiculos?: boolean | Ubicacion$vehiculosArgs<ExtArgs>
    _count?: boolean | UbicacionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UbicacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UbicacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UbicacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ubicacion"
    objects: {
      vehiculos: Prisma.$VehiculoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      idubicacion: number
      pais: string
      ciudad: string
      latitud: number | null
      amplitud: number | null
    }, ExtArgs["result"]["ubicacion"]>
    composites: {}
  }

  type UbicacionGetPayload<S extends boolean | null | undefined | UbicacionDefaultArgs> = $Result.GetResult<Prisma.$UbicacionPayload, S>

  type UbicacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UbicacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UbicacionCountAggregateInputType | true
    }

  export interface UbicacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ubicacion'], meta: { name: 'Ubicacion' } }
    /**
     * Find zero or one Ubicacion that matches the filter.
     * @param {UbicacionFindUniqueArgs} args - Arguments to find a Ubicacion
     * @example
     * // Get one Ubicacion
     * const ubicacion = await prisma.ubicacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UbicacionFindUniqueArgs>(args: SelectSubset<T, UbicacionFindUniqueArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ubicacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UbicacionFindUniqueOrThrowArgs} args - Arguments to find a Ubicacion
     * @example
     * // Get one Ubicacion
     * const ubicacion = await prisma.ubicacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UbicacionFindUniqueOrThrowArgs>(args: SelectSubset<T, UbicacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ubicacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionFindFirstArgs} args - Arguments to find a Ubicacion
     * @example
     * // Get one Ubicacion
     * const ubicacion = await prisma.ubicacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UbicacionFindFirstArgs>(args?: SelectSubset<T, UbicacionFindFirstArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ubicacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionFindFirstOrThrowArgs} args - Arguments to find a Ubicacion
     * @example
     * // Get one Ubicacion
     * const ubicacion = await prisma.ubicacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UbicacionFindFirstOrThrowArgs>(args?: SelectSubset<T, UbicacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ubicacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ubicacions
     * const ubicacions = await prisma.ubicacion.findMany()
     * 
     * // Get first 10 Ubicacions
     * const ubicacions = await prisma.ubicacion.findMany({ take: 10 })
     * 
     * // Only select the `idubicacion`
     * const ubicacionWithIdubicacionOnly = await prisma.ubicacion.findMany({ select: { idubicacion: true } })
     * 
     */
    findMany<T extends UbicacionFindManyArgs>(args?: SelectSubset<T, UbicacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ubicacion.
     * @param {UbicacionCreateArgs} args - Arguments to create a Ubicacion.
     * @example
     * // Create one Ubicacion
     * const Ubicacion = await prisma.ubicacion.create({
     *   data: {
     *     // ... data to create a Ubicacion
     *   }
     * })
     * 
     */
    create<T extends UbicacionCreateArgs>(args: SelectSubset<T, UbicacionCreateArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ubicacions.
     * @param {UbicacionCreateManyArgs} args - Arguments to create many Ubicacions.
     * @example
     * // Create many Ubicacions
     * const ubicacion = await prisma.ubicacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UbicacionCreateManyArgs>(args?: SelectSubset<T, UbicacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ubicacions and returns the data saved in the database.
     * @param {UbicacionCreateManyAndReturnArgs} args - Arguments to create many Ubicacions.
     * @example
     * // Create many Ubicacions
     * const ubicacion = await prisma.ubicacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ubicacions and only return the `idubicacion`
     * const ubicacionWithIdubicacionOnly = await prisma.ubicacion.createManyAndReturn({
     *   select: { idubicacion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UbicacionCreateManyAndReturnArgs>(args?: SelectSubset<T, UbicacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ubicacion.
     * @param {UbicacionDeleteArgs} args - Arguments to delete one Ubicacion.
     * @example
     * // Delete one Ubicacion
     * const Ubicacion = await prisma.ubicacion.delete({
     *   where: {
     *     // ... filter to delete one Ubicacion
     *   }
     * })
     * 
     */
    delete<T extends UbicacionDeleteArgs>(args: SelectSubset<T, UbicacionDeleteArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ubicacion.
     * @param {UbicacionUpdateArgs} args - Arguments to update one Ubicacion.
     * @example
     * // Update one Ubicacion
     * const ubicacion = await prisma.ubicacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UbicacionUpdateArgs>(args: SelectSubset<T, UbicacionUpdateArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ubicacions.
     * @param {UbicacionDeleteManyArgs} args - Arguments to filter Ubicacions to delete.
     * @example
     * // Delete a few Ubicacions
     * const { count } = await prisma.ubicacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UbicacionDeleteManyArgs>(args?: SelectSubset<T, UbicacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ubicacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ubicacions
     * const ubicacion = await prisma.ubicacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UbicacionUpdateManyArgs>(args: SelectSubset<T, UbicacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ubicacions and returns the data updated in the database.
     * @param {UbicacionUpdateManyAndReturnArgs} args - Arguments to update many Ubicacions.
     * @example
     * // Update many Ubicacions
     * const ubicacion = await prisma.ubicacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ubicacions and only return the `idubicacion`
     * const ubicacionWithIdubicacionOnly = await prisma.ubicacion.updateManyAndReturn({
     *   select: { idubicacion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UbicacionUpdateManyAndReturnArgs>(args: SelectSubset<T, UbicacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ubicacion.
     * @param {UbicacionUpsertArgs} args - Arguments to update or create a Ubicacion.
     * @example
     * // Update or create a Ubicacion
     * const ubicacion = await prisma.ubicacion.upsert({
     *   create: {
     *     // ... data to create a Ubicacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ubicacion we want to update
     *   }
     * })
     */
    upsert<T extends UbicacionUpsertArgs>(args: SelectSubset<T, UbicacionUpsertArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ubicacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionCountArgs} args - Arguments to filter Ubicacions to count.
     * @example
     * // Count the number of Ubicacions
     * const count = await prisma.ubicacion.count({
     *   where: {
     *     // ... the filter for the Ubicacions we want to count
     *   }
     * })
    **/
    count<T extends UbicacionCountArgs>(
      args?: Subset<T, UbicacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UbicacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ubicacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UbicacionAggregateArgs>(args: Subset<T, UbicacionAggregateArgs>): Prisma.PrismaPromise<GetUbicacionAggregateType<T>>

    /**
     * Group by Ubicacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UbicacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UbicacionGroupByArgs['orderBy'] }
        : { orderBy?: UbicacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UbicacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUbicacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ubicacion model
   */
  readonly fields: UbicacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ubicacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UbicacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    vehiculos<T extends Ubicacion$vehiculosArgs<ExtArgs> = {}>(args?: Subset<T, Ubicacion$vehiculosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ubicacion model
   */
  interface UbicacionFieldRefs {
    readonly idubicacion: FieldRef<"Ubicacion", 'Int'>
    readonly pais: FieldRef<"Ubicacion", 'String'>
    readonly ciudad: FieldRef<"Ubicacion", 'String'>
    readonly latitud: FieldRef<"Ubicacion", 'Float'>
    readonly amplitud: FieldRef<"Ubicacion", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Ubicacion findUnique
   */
  export type UbicacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * Filter, which Ubicacion to fetch.
     */
    where: UbicacionWhereUniqueInput
  }

  /**
   * Ubicacion findUniqueOrThrow
   */
  export type UbicacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * Filter, which Ubicacion to fetch.
     */
    where: UbicacionWhereUniqueInput
  }

  /**
   * Ubicacion findFirst
   */
  export type UbicacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * Filter, which Ubicacion to fetch.
     */
    where?: UbicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ubicacions to fetch.
     */
    orderBy?: UbicacionOrderByWithRelationInput | UbicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ubicacions.
     */
    cursor?: UbicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ubicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ubicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ubicacions.
     */
    distinct?: UbicacionScalarFieldEnum | UbicacionScalarFieldEnum[]
  }

  /**
   * Ubicacion findFirstOrThrow
   */
  export type UbicacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * Filter, which Ubicacion to fetch.
     */
    where?: UbicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ubicacions to fetch.
     */
    orderBy?: UbicacionOrderByWithRelationInput | UbicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ubicacions.
     */
    cursor?: UbicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ubicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ubicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ubicacions.
     */
    distinct?: UbicacionScalarFieldEnum | UbicacionScalarFieldEnum[]
  }

  /**
   * Ubicacion findMany
   */
  export type UbicacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * Filter, which Ubicacions to fetch.
     */
    where?: UbicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ubicacions to fetch.
     */
    orderBy?: UbicacionOrderByWithRelationInput | UbicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ubicacions.
     */
    cursor?: UbicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ubicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ubicacions.
     */
    skip?: number
    distinct?: UbicacionScalarFieldEnum | UbicacionScalarFieldEnum[]
  }

  /**
   * Ubicacion create
   */
  export type UbicacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * The data needed to create a Ubicacion.
     */
    data: XOR<UbicacionCreateInput, UbicacionUncheckedCreateInput>
  }

  /**
   * Ubicacion createMany
   */
  export type UbicacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ubicacions.
     */
    data: UbicacionCreateManyInput | UbicacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ubicacion createManyAndReturn
   */
  export type UbicacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * The data used to create many Ubicacions.
     */
    data: UbicacionCreateManyInput | UbicacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ubicacion update
   */
  export type UbicacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * The data needed to update a Ubicacion.
     */
    data: XOR<UbicacionUpdateInput, UbicacionUncheckedUpdateInput>
    /**
     * Choose, which Ubicacion to update.
     */
    where: UbicacionWhereUniqueInput
  }

  /**
   * Ubicacion updateMany
   */
  export type UbicacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ubicacions.
     */
    data: XOR<UbicacionUpdateManyMutationInput, UbicacionUncheckedUpdateManyInput>
    /**
     * Filter which Ubicacions to update
     */
    where?: UbicacionWhereInput
    /**
     * Limit how many Ubicacions to update.
     */
    limit?: number
  }

  /**
   * Ubicacion updateManyAndReturn
   */
  export type UbicacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * The data used to update Ubicacions.
     */
    data: XOR<UbicacionUpdateManyMutationInput, UbicacionUncheckedUpdateManyInput>
    /**
     * Filter which Ubicacions to update
     */
    where?: UbicacionWhereInput
    /**
     * Limit how many Ubicacions to update.
     */
    limit?: number
  }

  /**
   * Ubicacion upsert
   */
  export type UbicacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * The filter to search for the Ubicacion to update in case it exists.
     */
    where: UbicacionWhereUniqueInput
    /**
     * In case the Ubicacion found by the `where` argument doesn't exist, create a new Ubicacion with this data.
     */
    create: XOR<UbicacionCreateInput, UbicacionUncheckedCreateInput>
    /**
     * In case the Ubicacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UbicacionUpdateInput, UbicacionUncheckedUpdateInput>
  }

  /**
   * Ubicacion delete
   */
  export type UbicacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
    /**
     * Filter which Ubicacion to delete.
     */
    where: UbicacionWhereUniqueInput
  }

  /**
   * Ubicacion deleteMany
   */
  export type UbicacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ubicacions to delete
     */
    where?: UbicacionWhereInput
    /**
     * Limit how many Ubicacions to delete.
     */
    limit?: number
  }

  /**
   * Ubicacion.vehiculos
   */
  export type Ubicacion$vehiculosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoInclude<ExtArgs> | null
    where?: VehiculoWhereInput
    orderBy?: VehiculoOrderByWithRelationInput | VehiculoOrderByWithRelationInput[]
    cursor?: VehiculoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VehiculoScalarFieldEnum | VehiculoScalarFieldEnum[]
  }

  /**
   * Ubicacion without action
   */
  export type UbicacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionInclude<ExtArgs> | null
  }


  /**
   * Model Vehiculo
   */

  export type AggregateVehiculo = {
    _count: VehiculoCountAggregateOutputType | null
    _avg: VehiculoAvgAggregateOutputType | null
    _sum: VehiculoSumAggregateOutputType | null
    _min: VehiculoMinAggregateOutputType | null
    _max: VehiculoMaxAggregateOutputType | null
  }

  export type VehiculoAvgAggregateOutputType = {
    idvehiculo: number | null
    tarifa: number | null
    anio: number | null
    kilometraje: number | null
    host_idanfitrion: number | null
    ubicacion_idubicacion: number | null
  }

  export type VehiculoSumAggregateOutputType = {
    idvehiculo: number | null
    tarifa: number | null
    anio: number | null
    kilometraje: number | null
    host_idanfitrion: number | null
    ubicacion_idubicacion: number | null
  }

  export type VehiculoMinAggregateOutputType = {
    idvehiculo: number | null
    imagen: string | null
    marca: string | null
    modelo: string | null
    tarifa: number | null
    transmision: string | null
    consumo: string | null
    tipo_auto: string | null
    color: string | null
    anio: number | null
    kilometraje: number | null
    placa: string | null
    descripcion: string | null
    disponible: string | null
    estado: string | null
    fecha_creacion: Date | null
    ultima_modificacion: Date | null
    host_idanfitrion: number | null
    ubicacion_idubicacion: number | null
  }

  export type VehiculoMaxAggregateOutputType = {
    idvehiculo: number | null
    imagen: string | null
    marca: string | null
    modelo: string | null
    tarifa: number | null
    transmision: string | null
    consumo: string | null
    tipo_auto: string | null
    color: string | null
    anio: number | null
    kilometraje: number | null
    placa: string | null
    descripcion: string | null
    disponible: string | null
    estado: string | null
    fecha_creacion: Date | null
    ultima_modificacion: Date | null
    host_idanfitrion: number | null
    ubicacion_idubicacion: number | null
  }

  export type VehiculoCountAggregateOutputType = {
    idvehiculo: number
    imagen: number
    marca: number
    modelo: number
    tarifa: number
    transmision: number
    consumo: number
    tipo_auto: number
    color: number
    anio: number
    kilometraje: number
    placa: number
    descripcion: number
    disponible: number
    estado: number
    fecha_creacion: number
    ultima_modificacion: number
    host_idanfitrion: number
    ubicacion_idubicacion: number
    _all: number
  }


  export type VehiculoAvgAggregateInputType = {
    idvehiculo?: true
    tarifa?: true
    anio?: true
    kilometraje?: true
    host_idanfitrion?: true
    ubicacion_idubicacion?: true
  }

  export type VehiculoSumAggregateInputType = {
    idvehiculo?: true
    tarifa?: true
    anio?: true
    kilometraje?: true
    host_idanfitrion?: true
    ubicacion_idubicacion?: true
  }

  export type VehiculoMinAggregateInputType = {
    idvehiculo?: true
    imagen?: true
    marca?: true
    modelo?: true
    tarifa?: true
    transmision?: true
    consumo?: true
    tipo_auto?: true
    color?: true
    anio?: true
    kilometraje?: true
    placa?: true
    descripcion?: true
    disponible?: true
    estado?: true
    fecha_creacion?: true
    ultima_modificacion?: true
    host_idanfitrion?: true
    ubicacion_idubicacion?: true
  }

  export type VehiculoMaxAggregateInputType = {
    idvehiculo?: true
    imagen?: true
    marca?: true
    modelo?: true
    tarifa?: true
    transmision?: true
    consumo?: true
    tipo_auto?: true
    color?: true
    anio?: true
    kilometraje?: true
    placa?: true
    descripcion?: true
    disponible?: true
    estado?: true
    fecha_creacion?: true
    ultima_modificacion?: true
    host_idanfitrion?: true
    ubicacion_idubicacion?: true
  }

  export type VehiculoCountAggregateInputType = {
    idvehiculo?: true
    imagen?: true
    marca?: true
    modelo?: true
    tarifa?: true
    transmision?: true
    consumo?: true
    tipo_auto?: true
    color?: true
    anio?: true
    kilometraje?: true
    placa?: true
    descripcion?: true
    disponible?: true
    estado?: true
    fecha_creacion?: true
    ultima_modificacion?: true
    host_idanfitrion?: true
    ubicacion_idubicacion?: true
    _all?: true
  }

  export type VehiculoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vehiculo to aggregate.
     */
    where?: VehiculoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vehiculos to fetch.
     */
    orderBy?: VehiculoOrderByWithRelationInput | VehiculoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VehiculoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vehiculos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vehiculos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Vehiculos
    **/
    _count?: true | VehiculoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VehiculoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VehiculoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VehiculoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VehiculoMaxAggregateInputType
  }

  export type GetVehiculoAggregateType<T extends VehiculoAggregateArgs> = {
        [P in keyof T & keyof AggregateVehiculo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVehiculo[P]>
      : GetScalarType<T[P], AggregateVehiculo[P]>
  }




  export type VehiculoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VehiculoWhereInput
    orderBy?: VehiculoOrderByWithAggregationInput | VehiculoOrderByWithAggregationInput[]
    by: VehiculoScalarFieldEnum[] | VehiculoScalarFieldEnum
    having?: VehiculoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VehiculoCountAggregateInputType | true
    _avg?: VehiculoAvgAggregateInputType
    _sum?: VehiculoSumAggregateInputType
    _min?: VehiculoMinAggregateInputType
    _max?: VehiculoMaxAggregateInputType
  }

  export type VehiculoGroupByOutputType = {
    idvehiculo: number
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion: string | null
    disponible: string
    estado: string
    fecha_creacion: Date
    ultima_modificacion: Date
    host_idanfitrion: number
    ubicacion_idubicacion: number
    _count: VehiculoCountAggregateOutputType | null
    _avg: VehiculoAvgAggregateOutputType | null
    _sum: VehiculoSumAggregateOutputType | null
    _min: VehiculoMinAggregateOutputType | null
    _max: VehiculoMaxAggregateOutputType | null
  }

  type GetVehiculoGroupByPayload<T extends VehiculoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VehiculoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VehiculoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VehiculoGroupByOutputType[P]>
            : GetScalarType<T[P], VehiculoGroupByOutputType[P]>
        }
      >
    >


  export type VehiculoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idvehiculo?: boolean
    imagen?: boolean
    marca?: boolean
    modelo?: boolean
    tarifa?: boolean
    transmision?: boolean
    consumo?: boolean
    tipo_auto?: boolean
    color?: boolean
    anio?: boolean
    kilometraje?: boolean
    placa?: boolean
    descripcion?: boolean
    disponible?: boolean
    estado?: boolean
    fecha_creacion?: boolean
    ultima_modificacion?: boolean
    host_idanfitrion?: boolean
    ubicacion_idubicacion?: boolean
    renter?: boolean | Vehiculo$renterArgs<ExtArgs>
    ubicacion?: boolean | UbicacionDefaultArgs<ExtArgs>
    reservas?: boolean | Vehiculo$reservasArgs<ExtArgs>
    calificaciones?: boolean | Vehiculo$calificacionesArgs<ExtArgs>
    _count?: boolean | VehiculoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vehiculo"]>

  export type VehiculoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idvehiculo?: boolean
    imagen?: boolean
    marca?: boolean
    modelo?: boolean
    tarifa?: boolean
    transmision?: boolean
    consumo?: boolean
    tipo_auto?: boolean
    color?: boolean
    anio?: boolean
    kilometraje?: boolean
    placa?: boolean
    descripcion?: boolean
    disponible?: boolean
    estado?: boolean
    fecha_creacion?: boolean
    ultima_modificacion?: boolean
    host_idanfitrion?: boolean
    ubicacion_idubicacion?: boolean
    renter?: boolean | Vehiculo$renterArgs<ExtArgs>
    ubicacion?: boolean | UbicacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vehiculo"]>

  export type VehiculoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idvehiculo?: boolean
    imagen?: boolean
    marca?: boolean
    modelo?: boolean
    tarifa?: boolean
    transmision?: boolean
    consumo?: boolean
    tipo_auto?: boolean
    color?: boolean
    anio?: boolean
    kilometraje?: boolean
    placa?: boolean
    descripcion?: boolean
    disponible?: boolean
    estado?: boolean
    fecha_creacion?: boolean
    ultima_modificacion?: boolean
    host_idanfitrion?: boolean
    ubicacion_idubicacion?: boolean
    renter?: boolean | Vehiculo$renterArgs<ExtArgs>
    ubicacion?: boolean | UbicacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vehiculo"]>

  export type VehiculoSelectScalar = {
    idvehiculo?: boolean
    imagen?: boolean
    marca?: boolean
    modelo?: boolean
    tarifa?: boolean
    transmision?: boolean
    consumo?: boolean
    tipo_auto?: boolean
    color?: boolean
    anio?: boolean
    kilometraje?: boolean
    placa?: boolean
    descripcion?: boolean
    disponible?: boolean
    estado?: boolean
    fecha_creacion?: boolean
    ultima_modificacion?: boolean
    host_idanfitrion?: boolean
    ubicacion_idubicacion?: boolean
  }

  export type VehiculoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"idvehiculo" | "imagen" | "marca" | "modelo" | "tarifa" | "transmision" | "consumo" | "tipo_auto" | "color" | "anio" | "kilometraje" | "placa" | "descripcion" | "disponible" | "estado" | "fecha_creacion" | "ultima_modificacion" | "host_idanfitrion" | "ubicacion_idubicacion", ExtArgs["result"]["vehiculo"]>
  export type VehiculoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | Vehiculo$renterArgs<ExtArgs>
    ubicacion?: boolean | UbicacionDefaultArgs<ExtArgs>
    reservas?: boolean | Vehiculo$reservasArgs<ExtArgs>
    calificaciones?: boolean | Vehiculo$calificacionesArgs<ExtArgs>
    _count?: boolean | VehiculoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VehiculoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | Vehiculo$renterArgs<ExtArgs>
    ubicacion?: boolean | UbicacionDefaultArgs<ExtArgs>
  }
  export type VehiculoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | Vehiculo$renterArgs<ExtArgs>
    ubicacion?: boolean | UbicacionDefaultArgs<ExtArgs>
  }

  export type $VehiculoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Vehiculo"
    objects: {
      renter: Prisma.$RenterPayload<ExtArgs> | null
      ubicacion: Prisma.$UbicacionPayload<ExtArgs>
      reservas: Prisma.$ReservaPayload<ExtArgs>[]
      calificaciones: Prisma.$CalificacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      idvehiculo: number
      imagen: string
      marca: string
      modelo: string
      tarifa: number
      transmision: string
      consumo: string
      tipo_auto: string
      color: string
      anio: number
      kilometraje: number
      placa: string
      descripcion: string | null
      disponible: string
      estado: string
      fecha_creacion: Date
      ultima_modificacion: Date
      host_idanfitrion: number
      ubicacion_idubicacion: number
    }, ExtArgs["result"]["vehiculo"]>
    composites: {}
  }

  type VehiculoGetPayload<S extends boolean | null | undefined | VehiculoDefaultArgs> = $Result.GetResult<Prisma.$VehiculoPayload, S>

  type VehiculoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VehiculoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VehiculoCountAggregateInputType | true
    }

  export interface VehiculoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Vehiculo'], meta: { name: 'Vehiculo' } }
    /**
     * Find zero or one Vehiculo that matches the filter.
     * @param {VehiculoFindUniqueArgs} args - Arguments to find a Vehiculo
     * @example
     * // Get one Vehiculo
     * const vehiculo = await prisma.vehiculo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VehiculoFindUniqueArgs>(args: SelectSubset<T, VehiculoFindUniqueArgs<ExtArgs>>): Prisma__VehiculoClient<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Vehiculo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VehiculoFindUniqueOrThrowArgs} args - Arguments to find a Vehiculo
     * @example
     * // Get one Vehiculo
     * const vehiculo = await prisma.vehiculo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VehiculoFindUniqueOrThrowArgs>(args: SelectSubset<T, VehiculoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VehiculoClient<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vehiculo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehiculoFindFirstArgs} args - Arguments to find a Vehiculo
     * @example
     * // Get one Vehiculo
     * const vehiculo = await prisma.vehiculo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VehiculoFindFirstArgs>(args?: SelectSubset<T, VehiculoFindFirstArgs<ExtArgs>>): Prisma__VehiculoClient<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vehiculo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehiculoFindFirstOrThrowArgs} args - Arguments to find a Vehiculo
     * @example
     * // Get one Vehiculo
     * const vehiculo = await prisma.vehiculo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VehiculoFindFirstOrThrowArgs>(args?: SelectSubset<T, VehiculoFindFirstOrThrowArgs<ExtArgs>>): Prisma__VehiculoClient<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Vehiculos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehiculoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vehiculos
     * const vehiculos = await prisma.vehiculo.findMany()
     * 
     * // Get first 10 Vehiculos
     * const vehiculos = await prisma.vehiculo.findMany({ take: 10 })
     * 
     * // Only select the `idvehiculo`
     * const vehiculoWithIdvehiculoOnly = await prisma.vehiculo.findMany({ select: { idvehiculo: true } })
     * 
     */
    findMany<T extends VehiculoFindManyArgs>(args?: SelectSubset<T, VehiculoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Vehiculo.
     * @param {VehiculoCreateArgs} args - Arguments to create a Vehiculo.
     * @example
     * // Create one Vehiculo
     * const Vehiculo = await prisma.vehiculo.create({
     *   data: {
     *     // ... data to create a Vehiculo
     *   }
     * })
     * 
     */
    create<T extends VehiculoCreateArgs>(args: SelectSubset<T, VehiculoCreateArgs<ExtArgs>>): Prisma__VehiculoClient<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Vehiculos.
     * @param {VehiculoCreateManyArgs} args - Arguments to create many Vehiculos.
     * @example
     * // Create many Vehiculos
     * const vehiculo = await prisma.vehiculo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VehiculoCreateManyArgs>(args?: SelectSubset<T, VehiculoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Vehiculos and returns the data saved in the database.
     * @param {VehiculoCreateManyAndReturnArgs} args - Arguments to create many Vehiculos.
     * @example
     * // Create many Vehiculos
     * const vehiculo = await prisma.vehiculo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Vehiculos and only return the `idvehiculo`
     * const vehiculoWithIdvehiculoOnly = await prisma.vehiculo.createManyAndReturn({
     *   select: { idvehiculo: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VehiculoCreateManyAndReturnArgs>(args?: SelectSubset<T, VehiculoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Vehiculo.
     * @param {VehiculoDeleteArgs} args - Arguments to delete one Vehiculo.
     * @example
     * // Delete one Vehiculo
     * const Vehiculo = await prisma.vehiculo.delete({
     *   where: {
     *     // ... filter to delete one Vehiculo
     *   }
     * })
     * 
     */
    delete<T extends VehiculoDeleteArgs>(args: SelectSubset<T, VehiculoDeleteArgs<ExtArgs>>): Prisma__VehiculoClient<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Vehiculo.
     * @param {VehiculoUpdateArgs} args - Arguments to update one Vehiculo.
     * @example
     * // Update one Vehiculo
     * const vehiculo = await prisma.vehiculo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VehiculoUpdateArgs>(args: SelectSubset<T, VehiculoUpdateArgs<ExtArgs>>): Prisma__VehiculoClient<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Vehiculos.
     * @param {VehiculoDeleteManyArgs} args - Arguments to filter Vehiculos to delete.
     * @example
     * // Delete a few Vehiculos
     * const { count } = await prisma.vehiculo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VehiculoDeleteManyArgs>(args?: SelectSubset<T, VehiculoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vehiculos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehiculoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vehiculos
     * const vehiculo = await prisma.vehiculo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VehiculoUpdateManyArgs>(args: SelectSubset<T, VehiculoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vehiculos and returns the data updated in the database.
     * @param {VehiculoUpdateManyAndReturnArgs} args - Arguments to update many Vehiculos.
     * @example
     * // Update many Vehiculos
     * const vehiculo = await prisma.vehiculo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Vehiculos and only return the `idvehiculo`
     * const vehiculoWithIdvehiculoOnly = await prisma.vehiculo.updateManyAndReturn({
     *   select: { idvehiculo: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VehiculoUpdateManyAndReturnArgs>(args: SelectSubset<T, VehiculoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Vehiculo.
     * @param {VehiculoUpsertArgs} args - Arguments to update or create a Vehiculo.
     * @example
     * // Update or create a Vehiculo
     * const vehiculo = await prisma.vehiculo.upsert({
     *   create: {
     *     // ... data to create a Vehiculo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vehiculo we want to update
     *   }
     * })
     */
    upsert<T extends VehiculoUpsertArgs>(args: SelectSubset<T, VehiculoUpsertArgs<ExtArgs>>): Prisma__VehiculoClient<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Vehiculos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehiculoCountArgs} args - Arguments to filter Vehiculos to count.
     * @example
     * // Count the number of Vehiculos
     * const count = await prisma.vehiculo.count({
     *   where: {
     *     // ... the filter for the Vehiculos we want to count
     *   }
     * })
    **/
    count<T extends VehiculoCountArgs>(
      args?: Subset<T, VehiculoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VehiculoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vehiculo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehiculoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VehiculoAggregateArgs>(args: Subset<T, VehiculoAggregateArgs>): Prisma.PrismaPromise<GetVehiculoAggregateType<T>>

    /**
     * Group by Vehiculo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VehiculoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VehiculoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VehiculoGroupByArgs['orderBy'] }
        : { orderBy?: VehiculoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VehiculoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVehiculoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Vehiculo model
   */
  readonly fields: VehiculoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Vehiculo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VehiculoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    renter<T extends Vehiculo$renterArgs<ExtArgs> = {}>(args?: Subset<T, Vehiculo$renterArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ubicacion<T extends UbicacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UbicacionDefaultArgs<ExtArgs>>): Prisma__UbicacionClient<$Result.GetResult<Prisma.$UbicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reservas<T extends Vehiculo$reservasArgs<ExtArgs> = {}>(args?: Subset<T, Vehiculo$reservasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calificaciones<T extends Vehiculo$calificacionesArgs<ExtArgs> = {}>(args?: Subset<T, Vehiculo$calificacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Vehiculo model
   */
  interface VehiculoFieldRefs {
    readonly idvehiculo: FieldRef<"Vehiculo", 'Int'>
    readonly imagen: FieldRef<"Vehiculo", 'String'>
    readonly marca: FieldRef<"Vehiculo", 'String'>
    readonly modelo: FieldRef<"Vehiculo", 'String'>
    readonly tarifa: FieldRef<"Vehiculo", 'Float'>
    readonly transmision: FieldRef<"Vehiculo", 'String'>
    readonly consumo: FieldRef<"Vehiculo", 'String'>
    readonly tipo_auto: FieldRef<"Vehiculo", 'String'>
    readonly color: FieldRef<"Vehiculo", 'String'>
    readonly anio: FieldRef<"Vehiculo", 'Int'>
    readonly kilometraje: FieldRef<"Vehiculo", 'Int'>
    readonly placa: FieldRef<"Vehiculo", 'String'>
    readonly descripcion: FieldRef<"Vehiculo", 'String'>
    readonly disponible: FieldRef<"Vehiculo", 'String'>
    readonly estado: FieldRef<"Vehiculo", 'String'>
    readonly fecha_creacion: FieldRef<"Vehiculo", 'DateTime'>
    readonly ultima_modificacion: FieldRef<"Vehiculo", 'DateTime'>
    readonly host_idanfitrion: FieldRef<"Vehiculo", 'Int'>
    readonly ubicacion_idubicacion: FieldRef<"Vehiculo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Vehiculo findUnique
   */
  export type VehiculoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoInclude<ExtArgs> | null
    /**
     * Filter, which Vehiculo to fetch.
     */
    where: VehiculoWhereUniqueInput
  }

  /**
   * Vehiculo findUniqueOrThrow
   */
  export type VehiculoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoInclude<ExtArgs> | null
    /**
     * Filter, which Vehiculo to fetch.
     */
    where: VehiculoWhereUniqueInput
  }

  /**
   * Vehiculo findFirst
   */
  export type VehiculoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoInclude<ExtArgs> | null
    /**
     * Filter, which Vehiculo to fetch.
     */
    where?: VehiculoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vehiculos to fetch.
     */
    orderBy?: VehiculoOrderByWithRelationInput | VehiculoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vehiculos.
     */
    cursor?: VehiculoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vehiculos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vehiculos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vehiculos.
     */
    distinct?: VehiculoScalarFieldEnum | VehiculoScalarFieldEnum[]
  }

  /**
   * Vehiculo findFirstOrThrow
   */
  export type VehiculoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoInclude<ExtArgs> | null
    /**
     * Filter, which Vehiculo to fetch.
     */
    where?: VehiculoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vehiculos to fetch.
     */
    orderBy?: VehiculoOrderByWithRelationInput | VehiculoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vehiculos.
     */
    cursor?: VehiculoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vehiculos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vehiculos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vehiculos.
     */
    distinct?: VehiculoScalarFieldEnum | VehiculoScalarFieldEnum[]
  }

  /**
   * Vehiculo findMany
   */
  export type VehiculoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoInclude<ExtArgs> | null
    /**
     * Filter, which Vehiculos to fetch.
     */
    where?: VehiculoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vehiculos to fetch.
     */
    orderBy?: VehiculoOrderByWithRelationInput | VehiculoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Vehiculos.
     */
    cursor?: VehiculoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vehiculos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vehiculos.
     */
    skip?: number
    distinct?: VehiculoScalarFieldEnum | VehiculoScalarFieldEnum[]
  }

  /**
   * Vehiculo create
   */
  export type VehiculoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoInclude<ExtArgs> | null
    /**
     * The data needed to create a Vehiculo.
     */
    data: XOR<VehiculoCreateInput, VehiculoUncheckedCreateInput>
  }

  /**
   * Vehiculo createMany
   */
  export type VehiculoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Vehiculos.
     */
    data: VehiculoCreateManyInput | VehiculoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Vehiculo createManyAndReturn
   */
  export type VehiculoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * The data used to create many Vehiculos.
     */
    data: VehiculoCreateManyInput | VehiculoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Vehiculo update
   */
  export type VehiculoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoInclude<ExtArgs> | null
    /**
     * The data needed to update a Vehiculo.
     */
    data: XOR<VehiculoUpdateInput, VehiculoUncheckedUpdateInput>
    /**
     * Choose, which Vehiculo to update.
     */
    where: VehiculoWhereUniqueInput
  }

  /**
   * Vehiculo updateMany
   */
  export type VehiculoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Vehiculos.
     */
    data: XOR<VehiculoUpdateManyMutationInput, VehiculoUncheckedUpdateManyInput>
    /**
     * Filter which Vehiculos to update
     */
    where?: VehiculoWhereInput
    /**
     * Limit how many Vehiculos to update.
     */
    limit?: number
  }

  /**
   * Vehiculo updateManyAndReturn
   */
  export type VehiculoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * The data used to update Vehiculos.
     */
    data: XOR<VehiculoUpdateManyMutationInput, VehiculoUncheckedUpdateManyInput>
    /**
     * Filter which Vehiculos to update
     */
    where?: VehiculoWhereInput
    /**
     * Limit how many Vehiculos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Vehiculo upsert
   */
  export type VehiculoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoInclude<ExtArgs> | null
    /**
     * The filter to search for the Vehiculo to update in case it exists.
     */
    where: VehiculoWhereUniqueInput
    /**
     * In case the Vehiculo found by the `where` argument doesn't exist, create a new Vehiculo with this data.
     */
    create: XOR<VehiculoCreateInput, VehiculoUncheckedCreateInput>
    /**
     * In case the Vehiculo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VehiculoUpdateInput, VehiculoUncheckedUpdateInput>
  }

  /**
   * Vehiculo delete
   */
  export type VehiculoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoInclude<ExtArgs> | null
    /**
     * Filter which Vehiculo to delete.
     */
    where: VehiculoWhereUniqueInput
  }

  /**
   * Vehiculo deleteMany
   */
  export type VehiculoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vehiculos to delete
     */
    where?: VehiculoWhereInput
    /**
     * Limit how many Vehiculos to delete.
     */
    limit?: number
  }

  /**
   * Vehiculo.renter
   */
  export type Vehiculo$renterArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Renter
     */
    select?: RenterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Renter
     */
    omit?: RenterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RenterInclude<ExtArgs> | null
    where?: RenterWhereInput
  }

  /**
   * Vehiculo.reservas
   */
  export type Vehiculo$reservasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    cursor?: ReservaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Vehiculo.calificaciones
   */
  export type Vehiculo$calificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    where?: CalificacionWhereInput
    orderBy?: CalificacionOrderByWithRelationInput | CalificacionOrderByWithRelationInput[]
    cursor?: CalificacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalificacionScalarFieldEnum | CalificacionScalarFieldEnum[]
  }

  /**
   * Vehiculo without action
   */
  export type VehiculoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vehiculo
     */
    select?: VehiculoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vehiculo
     */
    omit?: VehiculoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VehiculoInclude<ExtArgs> | null
  }


  /**
   * Model Reserva
   */

  export type AggregateReserva = {
    _count: ReservaCountAggregateOutputType | null
    _avg: ReservaAvgAggregateOutputType | null
    _sum: ReservaSumAggregateOutputType | null
    _min: ReservaMinAggregateOutputType | null
    _max: ReservaMaxAggregateOutputType | null
  }

  export type ReservaAvgAggregateOutputType = {
    idreserva: number | null
    renter_idrenter: number | null
    vehiculo_idvehiculo: number | null
  }

  export type ReservaSumAggregateOutputType = {
    idreserva: number | null
    renter_idrenter: number | null
    vehiculo_idvehiculo: number | null
  }

  export type ReservaMinAggregateOutputType = {
    idreserva: number | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    pagado: boolean | null
    estado: string | null
    expiracion: Date | null
    fecha_creacion: Date | null
    ultima_modificacion: Date | null
    renter_idrenter: number | null
    vehiculo_idvehiculo: number | null
  }

  export type ReservaMaxAggregateOutputType = {
    idreserva: number | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    pagado: boolean | null
    estado: string | null
    expiracion: Date | null
    fecha_creacion: Date | null
    ultima_modificacion: Date | null
    renter_idrenter: number | null
    vehiculo_idvehiculo: number | null
  }

  export type ReservaCountAggregateOutputType = {
    idreserva: number
    fecha_inicio: number
    fecha_fin: number
    pagado: number
    estado: number
    expiracion: number
    fecha_creacion: number
    ultima_modificacion: number
    renter_idrenter: number
    vehiculo_idvehiculo: number
    _all: number
  }


  export type ReservaAvgAggregateInputType = {
    idreserva?: true
    renter_idrenter?: true
    vehiculo_idvehiculo?: true
  }

  export type ReservaSumAggregateInputType = {
    idreserva?: true
    renter_idrenter?: true
    vehiculo_idvehiculo?: true
  }

  export type ReservaMinAggregateInputType = {
    idreserva?: true
    fecha_inicio?: true
    fecha_fin?: true
    pagado?: true
    estado?: true
    expiracion?: true
    fecha_creacion?: true
    ultima_modificacion?: true
    renter_idrenter?: true
    vehiculo_idvehiculo?: true
  }

  export type ReservaMaxAggregateInputType = {
    idreserva?: true
    fecha_inicio?: true
    fecha_fin?: true
    pagado?: true
    estado?: true
    expiracion?: true
    fecha_creacion?: true
    ultima_modificacion?: true
    renter_idrenter?: true
    vehiculo_idvehiculo?: true
  }

  export type ReservaCountAggregateInputType = {
    idreserva?: true
    fecha_inicio?: true
    fecha_fin?: true
    pagado?: true
    estado?: true
    expiracion?: true
    fecha_creacion?: true
    ultima_modificacion?: true
    renter_idrenter?: true
    vehiculo_idvehiculo?: true
    _all?: true
  }

  export type ReservaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reserva to aggregate.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reservas
    **/
    _count?: true | ReservaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservaMaxAggregateInputType
  }

  export type GetReservaAggregateType<T extends ReservaAggregateArgs> = {
        [P in keyof T & keyof AggregateReserva]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReserva[P]>
      : GetScalarType<T[P], AggregateReserva[P]>
  }




  export type ReservaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservaWhereInput
    orderBy?: ReservaOrderByWithAggregationInput | ReservaOrderByWithAggregationInput[]
    by: ReservaScalarFieldEnum[] | ReservaScalarFieldEnum
    having?: ReservaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservaCountAggregateInputType | true
    _avg?: ReservaAvgAggregateInputType
    _sum?: ReservaSumAggregateInputType
    _min?: ReservaMinAggregateInputType
    _max?: ReservaMaxAggregateInputType
  }

  export type ReservaGroupByOutputType = {
    idreserva: number
    fecha_inicio: Date
    fecha_fin: Date
    pagado: boolean
    estado: string
    expiracion: Date
    fecha_creacion: Date
    ultima_modificacion: Date
    renter_idrenter: number
    vehiculo_idvehiculo: number
    _count: ReservaCountAggregateOutputType | null
    _avg: ReservaAvgAggregateOutputType | null
    _sum: ReservaSumAggregateOutputType | null
    _min: ReservaMinAggregateOutputType | null
    _max: ReservaMaxAggregateOutputType | null
  }

  type GetReservaGroupByPayload<T extends ReservaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservaGroupByOutputType[P]>
            : GetScalarType<T[P], ReservaGroupByOutputType[P]>
        }
      >
    >


  export type ReservaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idreserva?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    pagado?: boolean
    estado?: boolean
    expiracion?: boolean
    fecha_creacion?: boolean
    ultima_modificacion?: boolean
    renter_idrenter?: boolean
    vehiculo_idvehiculo?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    vehiculo?: boolean | VehiculoDefaultArgs<ExtArgs>
    pagos?: boolean | Reserva$pagosArgs<ExtArgs>
    _count?: boolean | ReservaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reserva"]>

  export type ReservaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idreserva?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    pagado?: boolean
    estado?: boolean
    expiracion?: boolean
    fecha_creacion?: boolean
    ultima_modificacion?: boolean
    renter_idrenter?: boolean
    vehiculo_idvehiculo?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    vehiculo?: boolean | VehiculoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reserva"]>

  export type ReservaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idreserva?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    pagado?: boolean
    estado?: boolean
    expiracion?: boolean
    fecha_creacion?: boolean
    ultima_modificacion?: boolean
    renter_idrenter?: boolean
    vehiculo_idvehiculo?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    vehiculo?: boolean | VehiculoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reserva"]>

  export type ReservaSelectScalar = {
    idreserva?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    pagado?: boolean
    estado?: boolean
    expiracion?: boolean
    fecha_creacion?: boolean
    ultima_modificacion?: boolean
    renter_idrenter?: boolean
    vehiculo_idvehiculo?: boolean
  }

  export type ReservaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"idreserva" | "fecha_inicio" | "fecha_fin" | "pagado" | "estado" | "expiracion" | "fecha_creacion" | "ultima_modificacion" | "renter_idrenter" | "vehiculo_idvehiculo", ExtArgs["result"]["reserva"]>
  export type ReservaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    vehiculo?: boolean | VehiculoDefaultArgs<ExtArgs>
    pagos?: boolean | Reserva$pagosArgs<ExtArgs>
    _count?: boolean | ReservaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ReservaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    vehiculo?: boolean | VehiculoDefaultArgs<ExtArgs>
  }
  export type ReservaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    vehiculo?: boolean | VehiculoDefaultArgs<ExtArgs>
  }

  export type $ReservaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reserva"
    objects: {
      renter: Prisma.$RenterPayload<ExtArgs>
      vehiculo: Prisma.$VehiculoPayload<ExtArgs>
      pagos: Prisma.$PagoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      idreserva: number
      fecha_inicio: Date
      fecha_fin: Date
      pagado: boolean
      estado: string
      expiracion: Date
      fecha_creacion: Date
      ultima_modificacion: Date
      renter_idrenter: number
      vehiculo_idvehiculo: number
    }, ExtArgs["result"]["reserva"]>
    composites: {}
  }

  type ReservaGetPayload<S extends boolean | null | undefined | ReservaDefaultArgs> = $Result.GetResult<Prisma.$ReservaPayload, S>

  type ReservaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservaCountAggregateInputType | true
    }

  export interface ReservaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reserva'], meta: { name: 'Reserva' } }
    /**
     * Find zero or one Reserva that matches the filter.
     * @param {ReservaFindUniqueArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservaFindUniqueArgs>(args: SelectSubset<T, ReservaFindUniqueArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reserva that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservaFindUniqueOrThrowArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservaFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reserva that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaFindFirstArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservaFindFirstArgs>(args?: SelectSubset<T, ReservaFindFirstArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reserva that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaFindFirstOrThrowArgs} args - Arguments to find a Reserva
     * @example
     * // Get one Reserva
     * const reserva = await prisma.reserva.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservaFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reservas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservas
     * const reservas = await prisma.reserva.findMany()
     * 
     * // Get first 10 Reservas
     * const reservas = await prisma.reserva.findMany({ take: 10 })
     * 
     * // Only select the `idreserva`
     * const reservaWithIdreservaOnly = await prisma.reserva.findMany({ select: { idreserva: true } })
     * 
     */
    findMany<T extends ReservaFindManyArgs>(args?: SelectSubset<T, ReservaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reserva.
     * @param {ReservaCreateArgs} args - Arguments to create a Reserva.
     * @example
     * // Create one Reserva
     * const Reserva = await prisma.reserva.create({
     *   data: {
     *     // ... data to create a Reserva
     *   }
     * })
     * 
     */
    create<T extends ReservaCreateArgs>(args: SelectSubset<T, ReservaCreateArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reservas.
     * @param {ReservaCreateManyArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reserva = await prisma.reserva.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservaCreateManyArgs>(args?: SelectSubset<T, ReservaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reservas and returns the data saved in the database.
     * @param {ReservaCreateManyAndReturnArgs} args - Arguments to create many Reservas.
     * @example
     * // Create many Reservas
     * const reserva = await prisma.reserva.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reservas and only return the `idreserva`
     * const reservaWithIdreservaOnly = await prisma.reserva.createManyAndReturn({
     *   select: { idreserva: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservaCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reserva.
     * @param {ReservaDeleteArgs} args - Arguments to delete one Reserva.
     * @example
     * // Delete one Reserva
     * const Reserva = await prisma.reserva.delete({
     *   where: {
     *     // ... filter to delete one Reserva
     *   }
     * })
     * 
     */
    delete<T extends ReservaDeleteArgs>(args: SelectSubset<T, ReservaDeleteArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reserva.
     * @param {ReservaUpdateArgs} args - Arguments to update one Reserva.
     * @example
     * // Update one Reserva
     * const reserva = await prisma.reserva.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservaUpdateArgs>(args: SelectSubset<T, ReservaUpdateArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reservas.
     * @param {ReservaDeleteManyArgs} args - Arguments to filter Reservas to delete.
     * @example
     * // Delete a few Reservas
     * const { count } = await prisma.reserva.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservaDeleteManyArgs>(args?: SelectSubset<T, ReservaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservas
     * const reserva = await prisma.reserva.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservaUpdateManyArgs>(args: SelectSubset<T, ReservaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservas and returns the data updated in the database.
     * @param {ReservaUpdateManyAndReturnArgs} args - Arguments to update many Reservas.
     * @example
     * // Update many Reservas
     * const reserva = await prisma.reserva.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reservas and only return the `idreserva`
     * const reservaWithIdreservaOnly = await prisma.reserva.updateManyAndReturn({
     *   select: { idreserva: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservaUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reserva.
     * @param {ReservaUpsertArgs} args - Arguments to update or create a Reserva.
     * @example
     * // Update or create a Reserva
     * const reserva = await prisma.reserva.upsert({
     *   create: {
     *     // ... data to create a Reserva
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reserva we want to update
     *   }
     * })
     */
    upsert<T extends ReservaUpsertArgs>(args: SelectSubset<T, ReservaUpsertArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reservas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaCountArgs} args - Arguments to filter Reservas to count.
     * @example
     * // Count the number of Reservas
     * const count = await prisma.reserva.count({
     *   where: {
     *     // ... the filter for the Reservas we want to count
     *   }
     * })
    **/
    count<T extends ReservaCountArgs>(
      args?: Subset<T, ReservaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reserva.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservaAggregateArgs>(args: Subset<T, ReservaAggregateArgs>): Prisma.PrismaPromise<GetReservaAggregateType<T>>

    /**
     * Group by Reserva.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservaGroupByArgs['orderBy'] }
        : { orderBy?: ReservaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reserva model
   */
  readonly fields: ReservaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reserva.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    renter<T extends RenterDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RenterDefaultArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    vehiculo<T extends VehiculoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VehiculoDefaultArgs<ExtArgs>>): Prisma__VehiculoClient<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    pagos<T extends Reserva$pagosArgs<ExtArgs> = {}>(args?: Subset<T, Reserva$pagosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reserva model
   */
  interface ReservaFieldRefs {
    readonly idreserva: FieldRef<"Reserva", 'Int'>
    readonly fecha_inicio: FieldRef<"Reserva", 'DateTime'>
    readonly fecha_fin: FieldRef<"Reserva", 'DateTime'>
    readonly pagado: FieldRef<"Reserva", 'Boolean'>
    readonly estado: FieldRef<"Reserva", 'String'>
    readonly expiracion: FieldRef<"Reserva", 'DateTime'>
    readonly fecha_creacion: FieldRef<"Reserva", 'DateTime'>
    readonly ultima_modificacion: FieldRef<"Reserva", 'DateTime'>
    readonly renter_idrenter: FieldRef<"Reserva", 'Int'>
    readonly vehiculo_idvehiculo: FieldRef<"Reserva", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Reserva findUnique
   */
  export type ReservaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva findUniqueOrThrow
   */
  export type ReservaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva findFirst
   */
  export type ReservaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Reserva findFirstOrThrow
   */
  export type ReservaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reserva to fetch.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservas.
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservas.
     */
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Reserva findMany
   */
  export type ReservaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter, which Reservas to fetch.
     */
    where?: ReservaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservas to fetch.
     */
    orderBy?: ReservaOrderByWithRelationInput | ReservaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reservas.
     */
    cursor?: ReservaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservas.
     */
    skip?: number
    distinct?: ReservaScalarFieldEnum | ReservaScalarFieldEnum[]
  }

  /**
   * Reserva create
   */
  export type ReservaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * The data needed to create a Reserva.
     */
    data: XOR<ReservaCreateInput, ReservaUncheckedCreateInput>
  }

  /**
   * Reserva createMany
   */
  export type ReservaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reservas.
     */
    data: ReservaCreateManyInput | ReservaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reserva createManyAndReturn
   */
  export type ReservaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * The data used to create many Reservas.
     */
    data: ReservaCreateManyInput | ReservaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reserva update
   */
  export type ReservaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * The data needed to update a Reserva.
     */
    data: XOR<ReservaUpdateInput, ReservaUncheckedUpdateInput>
    /**
     * Choose, which Reserva to update.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva updateMany
   */
  export type ReservaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservaWhereInput
    /**
     * Limit how many Reservas to update.
     */
    limit?: number
  }

  /**
   * Reserva updateManyAndReturn
   */
  export type ReservaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * The data used to update Reservas.
     */
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyInput>
    /**
     * Filter which Reservas to update
     */
    where?: ReservaWhereInput
    /**
     * Limit how many Reservas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reserva upsert
   */
  export type ReservaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * The filter to search for the Reserva to update in case it exists.
     */
    where: ReservaWhereUniqueInput
    /**
     * In case the Reserva found by the `where` argument doesn't exist, create a new Reserva with this data.
     */
    create: XOR<ReservaCreateInput, ReservaUncheckedCreateInput>
    /**
     * In case the Reserva was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservaUpdateInput, ReservaUncheckedUpdateInput>
  }

  /**
   * Reserva delete
   */
  export type ReservaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
    /**
     * Filter which Reserva to delete.
     */
    where: ReservaWhereUniqueInput
  }

  /**
   * Reserva deleteMany
   */
  export type ReservaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservas to delete
     */
    where?: ReservaWhereInput
    /**
     * Limit how many Reservas to delete.
     */
    limit?: number
  }

  /**
   * Reserva.pagos
   */
  export type Reserva$pagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    where?: PagoWhereInput
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    cursor?: PagoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Reserva without action
   */
  export type ReservaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reserva
     */
    select?: ReservaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reserva
     */
    omit?: ReservaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservaInclude<ExtArgs> | null
  }


  /**
   * Model Calificacion
   */

  export type AggregateCalificacion = {
    _count: CalificacionCountAggregateOutputType | null
    _avg: CalificacionAvgAggregateOutputType | null
    _sum: CalificacionSumAggregateOutputType | null
    _min: CalificacionMinAggregateOutputType | null
    _max: CalificacionMaxAggregateOutputType | null
  }

  export type CalificacionAvgAggregateOutputType = {
    idcalificacion: number | null
    puntuacion: number | null
    renter_idrenter: number | null
    vehiculo_idvehiculo: number | null
  }

  export type CalificacionSumAggregateOutputType = {
    idcalificacion: number | null
    puntuacion: number | null
    renter_idrenter: number | null
    vehiculo_idvehiculo: number | null
  }

  export type CalificacionMinAggregateOutputType = {
    idcalificacion: number | null
    puntuacion: number | null
    comentario: string | null
    fecha: Date | null
    renter_idrenter: number | null
    vehiculo_idvehiculo: number | null
  }

  export type CalificacionMaxAggregateOutputType = {
    idcalificacion: number | null
    puntuacion: number | null
    comentario: string | null
    fecha: Date | null
    renter_idrenter: number | null
    vehiculo_idvehiculo: number | null
  }

  export type CalificacionCountAggregateOutputType = {
    idcalificacion: number
    puntuacion: number
    comentario: number
    fecha: number
    renter_idrenter: number
    vehiculo_idvehiculo: number
    _all: number
  }


  export type CalificacionAvgAggregateInputType = {
    idcalificacion?: true
    puntuacion?: true
    renter_idrenter?: true
    vehiculo_idvehiculo?: true
  }

  export type CalificacionSumAggregateInputType = {
    idcalificacion?: true
    puntuacion?: true
    renter_idrenter?: true
    vehiculo_idvehiculo?: true
  }

  export type CalificacionMinAggregateInputType = {
    idcalificacion?: true
    puntuacion?: true
    comentario?: true
    fecha?: true
    renter_idrenter?: true
    vehiculo_idvehiculo?: true
  }

  export type CalificacionMaxAggregateInputType = {
    idcalificacion?: true
    puntuacion?: true
    comentario?: true
    fecha?: true
    renter_idrenter?: true
    vehiculo_idvehiculo?: true
  }

  export type CalificacionCountAggregateInputType = {
    idcalificacion?: true
    puntuacion?: true
    comentario?: true
    fecha?: true
    renter_idrenter?: true
    vehiculo_idvehiculo?: true
    _all?: true
  }

  export type CalificacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Calificacion to aggregate.
     */
    where?: CalificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calificacions to fetch.
     */
    orderBy?: CalificacionOrderByWithRelationInput | CalificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CalificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Calificacions
    **/
    _count?: true | CalificacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CalificacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CalificacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CalificacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CalificacionMaxAggregateInputType
  }

  export type GetCalificacionAggregateType<T extends CalificacionAggregateArgs> = {
        [P in keyof T & keyof AggregateCalificacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCalificacion[P]>
      : GetScalarType<T[P], AggregateCalificacion[P]>
  }




  export type CalificacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionWhereInput
    orderBy?: CalificacionOrderByWithAggregationInput | CalificacionOrderByWithAggregationInput[]
    by: CalificacionScalarFieldEnum[] | CalificacionScalarFieldEnum
    having?: CalificacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CalificacionCountAggregateInputType | true
    _avg?: CalificacionAvgAggregateInputType
    _sum?: CalificacionSumAggregateInputType
    _min?: CalificacionMinAggregateInputType
    _max?: CalificacionMaxAggregateInputType
  }

  export type CalificacionGroupByOutputType = {
    idcalificacion: number
    puntuacion: number
    comentario: string | null
    fecha: Date
    renter_idrenter: number
    vehiculo_idvehiculo: number
    _count: CalificacionCountAggregateOutputType | null
    _avg: CalificacionAvgAggregateOutputType | null
    _sum: CalificacionSumAggregateOutputType | null
    _min: CalificacionMinAggregateOutputType | null
    _max: CalificacionMaxAggregateOutputType | null
  }

  type GetCalificacionGroupByPayload<T extends CalificacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CalificacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CalificacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CalificacionGroupByOutputType[P]>
            : GetScalarType<T[P], CalificacionGroupByOutputType[P]>
        }
      >
    >


  export type CalificacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idcalificacion?: boolean
    puntuacion?: boolean
    comentario?: boolean
    fecha?: boolean
    renter_idrenter?: boolean
    vehiculo_idvehiculo?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    vehiculo?: boolean | VehiculoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacion"]>

  export type CalificacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idcalificacion?: boolean
    puntuacion?: boolean
    comentario?: boolean
    fecha?: boolean
    renter_idrenter?: boolean
    vehiculo_idvehiculo?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    vehiculo?: boolean | VehiculoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacion"]>

  export type CalificacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idcalificacion?: boolean
    puntuacion?: boolean
    comentario?: boolean
    fecha?: boolean
    renter_idrenter?: boolean
    vehiculo_idvehiculo?: boolean
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    vehiculo?: boolean | VehiculoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacion"]>

  export type CalificacionSelectScalar = {
    idcalificacion?: boolean
    puntuacion?: boolean
    comentario?: boolean
    fecha?: boolean
    renter_idrenter?: boolean
    vehiculo_idvehiculo?: boolean
  }

  export type CalificacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"idcalificacion" | "puntuacion" | "comentario" | "fecha" | "renter_idrenter" | "vehiculo_idvehiculo", ExtArgs["result"]["calificacion"]>
  export type CalificacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    vehiculo?: boolean | VehiculoDefaultArgs<ExtArgs>
  }
  export type CalificacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    vehiculo?: boolean | VehiculoDefaultArgs<ExtArgs>
  }
  export type CalificacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    renter?: boolean | RenterDefaultArgs<ExtArgs>
    vehiculo?: boolean | VehiculoDefaultArgs<ExtArgs>
  }

  export type $CalificacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Calificacion"
    objects: {
      renter: Prisma.$RenterPayload<ExtArgs>
      vehiculo: Prisma.$VehiculoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      idcalificacion: number
      puntuacion: number
      comentario: string | null
      fecha: Date
      renter_idrenter: number
      vehiculo_idvehiculo: number
    }, ExtArgs["result"]["calificacion"]>
    composites: {}
  }

  type CalificacionGetPayload<S extends boolean | null | undefined | CalificacionDefaultArgs> = $Result.GetResult<Prisma.$CalificacionPayload, S>

  type CalificacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CalificacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CalificacionCountAggregateInputType | true
    }

  export interface CalificacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Calificacion'], meta: { name: 'Calificacion' } }
    /**
     * Find zero or one Calificacion that matches the filter.
     * @param {CalificacionFindUniqueArgs} args - Arguments to find a Calificacion
     * @example
     * // Get one Calificacion
     * const calificacion = await prisma.calificacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CalificacionFindUniqueArgs>(args: SelectSubset<T, CalificacionFindUniqueArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Calificacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CalificacionFindUniqueOrThrowArgs} args - Arguments to find a Calificacion
     * @example
     * // Get one Calificacion
     * const calificacion = await prisma.calificacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CalificacionFindUniqueOrThrowArgs>(args: SelectSubset<T, CalificacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Calificacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionFindFirstArgs} args - Arguments to find a Calificacion
     * @example
     * // Get one Calificacion
     * const calificacion = await prisma.calificacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CalificacionFindFirstArgs>(args?: SelectSubset<T, CalificacionFindFirstArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Calificacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionFindFirstOrThrowArgs} args - Arguments to find a Calificacion
     * @example
     * // Get one Calificacion
     * const calificacion = await prisma.calificacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CalificacionFindFirstOrThrowArgs>(args?: SelectSubset<T, CalificacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Calificacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Calificacions
     * const calificacions = await prisma.calificacion.findMany()
     * 
     * // Get first 10 Calificacions
     * const calificacions = await prisma.calificacion.findMany({ take: 10 })
     * 
     * // Only select the `idcalificacion`
     * const calificacionWithIdcalificacionOnly = await prisma.calificacion.findMany({ select: { idcalificacion: true } })
     * 
     */
    findMany<T extends CalificacionFindManyArgs>(args?: SelectSubset<T, CalificacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Calificacion.
     * @param {CalificacionCreateArgs} args - Arguments to create a Calificacion.
     * @example
     * // Create one Calificacion
     * const Calificacion = await prisma.calificacion.create({
     *   data: {
     *     // ... data to create a Calificacion
     *   }
     * })
     * 
     */
    create<T extends CalificacionCreateArgs>(args: SelectSubset<T, CalificacionCreateArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Calificacions.
     * @param {CalificacionCreateManyArgs} args - Arguments to create many Calificacions.
     * @example
     * // Create many Calificacions
     * const calificacion = await prisma.calificacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CalificacionCreateManyArgs>(args?: SelectSubset<T, CalificacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Calificacions and returns the data saved in the database.
     * @param {CalificacionCreateManyAndReturnArgs} args - Arguments to create many Calificacions.
     * @example
     * // Create many Calificacions
     * const calificacion = await prisma.calificacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Calificacions and only return the `idcalificacion`
     * const calificacionWithIdcalificacionOnly = await prisma.calificacion.createManyAndReturn({
     *   select: { idcalificacion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CalificacionCreateManyAndReturnArgs>(args?: SelectSubset<T, CalificacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Calificacion.
     * @param {CalificacionDeleteArgs} args - Arguments to delete one Calificacion.
     * @example
     * // Delete one Calificacion
     * const Calificacion = await prisma.calificacion.delete({
     *   where: {
     *     // ... filter to delete one Calificacion
     *   }
     * })
     * 
     */
    delete<T extends CalificacionDeleteArgs>(args: SelectSubset<T, CalificacionDeleteArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Calificacion.
     * @param {CalificacionUpdateArgs} args - Arguments to update one Calificacion.
     * @example
     * // Update one Calificacion
     * const calificacion = await prisma.calificacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CalificacionUpdateArgs>(args: SelectSubset<T, CalificacionUpdateArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Calificacions.
     * @param {CalificacionDeleteManyArgs} args - Arguments to filter Calificacions to delete.
     * @example
     * // Delete a few Calificacions
     * const { count } = await prisma.calificacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CalificacionDeleteManyArgs>(args?: SelectSubset<T, CalificacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Calificacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Calificacions
     * const calificacion = await prisma.calificacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CalificacionUpdateManyArgs>(args: SelectSubset<T, CalificacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Calificacions and returns the data updated in the database.
     * @param {CalificacionUpdateManyAndReturnArgs} args - Arguments to update many Calificacions.
     * @example
     * // Update many Calificacions
     * const calificacion = await prisma.calificacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Calificacions and only return the `idcalificacion`
     * const calificacionWithIdcalificacionOnly = await prisma.calificacion.updateManyAndReturn({
     *   select: { idcalificacion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CalificacionUpdateManyAndReturnArgs>(args: SelectSubset<T, CalificacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Calificacion.
     * @param {CalificacionUpsertArgs} args - Arguments to update or create a Calificacion.
     * @example
     * // Update or create a Calificacion
     * const calificacion = await prisma.calificacion.upsert({
     *   create: {
     *     // ... data to create a Calificacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Calificacion we want to update
     *   }
     * })
     */
    upsert<T extends CalificacionUpsertArgs>(args: SelectSubset<T, CalificacionUpsertArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Calificacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionCountArgs} args - Arguments to filter Calificacions to count.
     * @example
     * // Count the number of Calificacions
     * const count = await prisma.calificacion.count({
     *   where: {
     *     // ... the filter for the Calificacions we want to count
     *   }
     * })
    **/
    count<T extends CalificacionCountArgs>(
      args?: Subset<T, CalificacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CalificacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Calificacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CalificacionAggregateArgs>(args: Subset<T, CalificacionAggregateArgs>): Prisma.PrismaPromise<GetCalificacionAggregateType<T>>

    /**
     * Group by Calificacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CalificacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CalificacionGroupByArgs['orderBy'] }
        : { orderBy?: CalificacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CalificacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCalificacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Calificacion model
   */
  readonly fields: CalificacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Calificacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CalificacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    renter<T extends RenterDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RenterDefaultArgs<ExtArgs>>): Prisma__RenterClient<$Result.GetResult<Prisma.$RenterPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    vehiculo<T extends VehiculoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VehiculoDefaultArgs<ExtArgs>>): Prisma__VehiculoClient<$Result.GetResult<Prisma.$VehiculoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Calificacion model
   */
  interface CalificacionFieldRefs {
    readonly idcalificacion: FieldRef<"Calificacion", 'Int'>
    readonly puntuacion: FieldRef<"Calificacion", 'Float'>
    readonly comentario: FieldRef<"Calificacion", 'String'>
    readonly fecha: FieldRef<"Calificacion", 'DateTime'>
    readonly renter_idrenter: FieldRef<"Calificacion", 'Int'>
    readonly vehiculo_idvehiculo: FieldRef<"Calificacion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Calificacion findUnique
   */
  export type CalificacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * Filter, which Calificacion to fetch.
     */
    where: CalificacionWhereUniqueInput
  }

  /**
   * Calificacion findUniqueOrThrow
   */
  export type CalificacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * Filter, which Calificacion to fetch.
     */
    where: CalificacionWhereUniqueInput
  }

  /**
   * Calificacion findFirst
   */
  export type CalificacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * Filter, which Calificacion to fetch.
     */
    where?: CalificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calificacions to fetch.
     */
    orderBy?: CalificacionOrderByWithRelationInput | CalificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Calificacions.
     */
    cursor?: CalificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Calificacions.
     */
    distinct?: CalificacionScalarFieldEnum | CalificacionScalarFieldEnum[]
  }

  /**
   * Calificacion findFirstOrThrow
   */
  export type CalificacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * Filter, which Calificacion to fetch.
     */
    where?: CalificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calificacions to fetch.
     */
    orderBy?: CalificacionOrderByWithRelationInput | CalificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Calificacions.
     */
    cursor?: CalificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Calificacions.
     */
    distinct?: CalificacionScalarFieldEnum | CalificacionScalarFieldEnum[]
  }

  /**
   * Calificacion findMany
   */
  export type CalificacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * Filter, which Calificacions to fetch.
     */
    where?: CalificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calificacions to fetch.
     */
    orderBy?: CalificacionOrderByWithRelationInput | CalificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Calificacions.
     */
    cursor?: CalificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calificacions.
     */
    skip?: number
    distinct?: CalificacionScalarFieldEnum | CalificacionScalarFieldEnum[]
  }

  /**
   * Calificacion create
   */
  export type CalificacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * The data needed to create a Calificacion.
     */
    data: XOR<CalificacionCreateInput, CalificacionUncheckedCreateInput>
  }

  /**
   * Calificacion createMany
   */
  export type CalificacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Calificacions.
     */
    data: CalificacionCreateManyInput | CalificacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Calificacion createManyAndReturn
   */
  export type CalificacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * The data used to create many Calificacions.
     */
    data: CalificacionCreateManyInput | CalificacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Calificacion update
   */
  export type CalificacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * The data needed to update a Calificacion.
     */
    data: XOR<CalificacionUpdateInput, CalificacionUncheckedUpdateInput>
    /**
     * Choose, which Calificacion to update.
     */
    where: CalificacionWhereUniqueInput
  }

  /**
   * Calificacion updateMany
   */
  export type CalificacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Calificacions.
     */
    data: XOR<CalificacionUpdateManyMutationInput, CalificacionUncheckedUpdateManyInput>
    /**
     * Filter which Calificacions to update
     */
    where?: CalificacionWhereInput
    /**
     * Limit how many Calificacions to update.
     */
    limit?: number
  }

  /**
   * Calificacion updateManyAndReturn
   */
  export type CalificacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * The data used to update Calificacions.
     */
    data: XOR<CalificacionUpdateManyMutationInput, CalificacionUncheckedUpdateManyInput>
    /**
     * Filter which Calificacions to update
     */
    where?: CalificacionWhereInput
    /**
     * Limit how many Calificacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Calificacion upsert
   */
  export type CalificacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * The filter to search for the Calificacion to update in case it exists.
     */
    where: CalificacionWhereUniqueInput
    /**
     * In case the Calificacion found by the `where` argument doesn't exist, create a new Calificacion with this data.
     */
    create: XOR<CalificacionCreateInput, CalificacionUncheckedCreateInput>
    /**
     * In case the Calificacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CalificacionUpdateInput, CalificacionUncheckedUpdateInput>
  }

  /**
   * Calificacion delete
   */
  export type CalificacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * Filter which Calificacion to delete.
     */
    where: CalificacionWhereUniqueInput
  }

  /**
   * Calificacion deleteMany
   */
  export type CalificacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Calificacions to delete
     */
    where?: CalificacionWhereInput
    /**
     * Limit how many Calificacions to delete.
     */
    limit?: number
  }

  /**
   * Calificacion without action
   */
  export type CalificacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
  }


  /**
   * Model HistorialBusqueda
   */

  export type AggregateHistorialBusqueda = {
    _count: HistorialBusquedaCountAggregateOutputType | null
    _avg: HistorialBusquedaAvgAggregateOutputType | null
    _sum: HistorialBusquedaSumAggregateOutputType | null
    _min: HistorialBusquedaMinAggregateOutputType | null
    _max: HistorialBusquedaMaxAggregateOutputType | null
  }

  export type HistorialBusquedaAvgAggregateOutputType = {
    id: number | null
    usuario_idusuario: number | null
  }

  export type HistorialBusquedaSumAggregateOutputType = {
    id: number | null
    usuario_idusuario: number | null
  }

  export type HistorialBusquedaMinAggregateOutputType = {
    id: number | null
    usuario_idusuario: number | null
    termino_busqueda: string | null
    creado_en: Date | null
  }

  export type HistorialBusquedaMaxAggregateOutputType = {
    id: number | null
    usuario_idusuario: number | null
    termino_busqueda: string | null
    creado_en: Date | null
  }

  export type HistorialBusquedaCountAggregateOutputType = {
    id: number
    usuario_idusuario: number
    termino_busqueda: number
    filtros: number
    creado_en: number
    _all: number
  }


  export type HistorialBusquedaAvgAggregateInputType = {
    id?: true
    usuario_idusuario?: true
  }

  export type HistorialBusquedaSumAggregateInputType = {
    id?: true
    usuario_idusuario?: true
  }

  export type HistorialBusquedaMinAggregateInputType = {
    id?: true
    usuario_idusuario?: true
    termino_busqueda?: true
    creado_en?: true
  }

  export type HistorialBusquedaMaxAggregateInputType = {
    id?: true
    usuario_idusuario?: true
    termino_busqueda?: true
    creado_en?: true
  }

  export type HistorialBusquedaCountAggregateInputType = {
    id?: true
    usuario_idusuario?: true
    termino_busqueda?: true
    filtros?: true
    creado_en?: true
    _all?: true
  }

  export type HistorialBusquedaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialBusqueda to aggregate.
     */
    where?: HistorialBusquedaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialBusquedas to fetch.
     */
    orderBy?: HistorialBusquedaOrderByWithRelationInput | HistorialBusquedaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HistorialBusquedaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialBusquedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialBusquedas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HistorialBusquedas
    **/
    _count?: true | HistorialBusquedaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialBusquedaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialBusquedaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialBusquedaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialBusquedaMaxAggregateInputType
  }

  export type GetHistorialBusquedaAggregateType<T extends HistorialBusquedaAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialBusqueda]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialBusqueda[P]>
      : GetScalarType<T[P], AggregateHistorialBusqueda[P]>
  }




  export type HistorialBusquedaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialBusquedaWhereInput
    orderBy?: HistorialBusquedaOrderByWithAggregationInput | HistorialBusquedaOrderByWithAggregationInput[]
    by: HistorialBusquedaScalarFieldEnum[] | HistorialBusquedaScalarFieldEnum
    having?: HistorialBusquedaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialBusquedaCountAggregateInputType | true
    _avg?: HistorialBusquedaAvgAggregateInputType
    _sum?: HistorialBusquedaSumAggregateInputType
    _min?: HistorialBusquedaMinAggregateInputType
    _max?: HistorialBusquedaMaxAggregateInputType
  }

  export type HistorialBusquedaGroupByOutputType = {
    id: number
    usuario_idusuario: number
    termino_busqueda: string
    filtros: JsonValue | null
    creado_en: Date
    _count: HistorialBusquedaCountAggregateOutputType | null
    _avg: HistorialBusquedaAvgAggregateOutputType | null
    _sum: HistorialBusquedaSumAggregateOutputType | null
    _min: HistorialBusquedaMinAggregateOutputType | null
    _max: HistorialBusquedaMaxAggregateOutputType | null
  }

  type GetHistorialBusquedaGroupByPayload<T extends HistorialBusquedaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialBusquedaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialBusquedaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialBusquedaGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialBusquedaGroupByOutputType[P]>
        }
      >
    >


  export type HistorialBusquedaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_idusuario?: boolean
    termino_busqueda?: boolean
    filtros?: boolean
    creado_en?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historialBusqueda"]>

  export type HistorialBusquedaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_idusuario?: boolean
    termino_busqueda?: boolean
    filtros?: boolean
    creado_en?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historialBusqueda"]>

  export type HistorialBusquedaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_idusuario?: boolean
    termino_busqueda?: boolean
    filtros?: boolean
    creado_en?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historialBusqueda"]>

  export type HistorialBusquedaSelectScalar = {
    id?: boolean
    usuario_idusuario?: boolean
    termino_busqueda?: boolean
    filtros?: boolean
    creado_en?: boolean
  }

  export type HistorialBusquedaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_idusuario" | "termino_busqueda" | "filtros" | "creado_en", ExtArgs["result"]["historialBusqueda"]>
  export type HistorialBusquedaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type HistorialBusquedaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type HistorialBusquedaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $HistorialBusquedaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HistorialBusqueda"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuario_idusuario: number
      termino_busqueda: string
      filtros: Prisma.JsonValue | null
      creado_en: Date
    }, ExtArgs["result"]["historialBusqueda"]>
    composites: {}
  }

  type HistorialBusquedaGetPayload<S extends boolean | null | undefined | HistorialBusquedaDefaultArgs> = $Result.GetResult<Prisma.$HistorialBusquedaPayload, S>

  type HistorialBusquedaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HistorialBusquedaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HistorialBusquedaCountAggregateInputType | true
    }

  export interface HistorialBusquedaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HistorialBusqueda'], meta: { name: 'HistorialBusqueda' } }
    /**
     * Find zero or one HistorialBusqueda that matches the filter.
     * @param {HistorialBusquedaFindUniqueArgs} args - Arguments to find a HistorialBusqueda
     * @example
     * // Get one HistorialBusqueda
     * const historialBusqueda = await prisma.historialBusqueda.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HistorialBusquedaFindUniqueArgs>(args: SelectSubset<T, HistorialBusquedaFindUniqueArgs<ExtArgs>>): Prisma__HistorialBusquedaClient<$Result.GetResult<Prisma.$HistorialBusquedaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HistorialBusqueda that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HistorialBusquedaFindUniqueOrThrowArgs} args - Arguments to find a HistorialBusqueda
     * @example
     * // Get one HistorialBusqueda
     * const historialBusqueda = await prisma.historialBusqueda.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HistorialBusquedaFindUniqueOrThrowArgs>(args: SelectSubset<T, HistorialBusquedaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HistorialBusquedaClient<$Result.GetResult<Prisma.$HistorialBusquedaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HistorialBusqueda that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialBusquedaFindFirstArgs} args - Arguments to find a HistorialBusqueda
     * @example
     * // Get one HistorialBusqueda
     * const historialBusqueda = await prisma.historialBusqueda.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HistorialBusquedaFindFirstArgs>(args?: SelectSubset<T, HistorialBusquedaFindFirstArgs<ExtArgs>>): Prisma__HistorialBusquedaClient<$Result.GetResult<Prisma.$HistorialBusquedaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HistorialBusqueda that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialBusquedaFindFirstOrThrowArgs} args - Arguments to find a HistorialBusqueda
     * @example
     * // Get one HistorialBusqueda
     * const historialBusqueda = await prisma.historialBusqueda.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HistorialBusquedaFindFirstOrThrowArgs>(args?: SelectSubset<T, HistorialBusquedaFindFirstOrThrowArgs<ExtArgs>>): Prisma__HistorialBusquedaClient<$Result.GetResult<Prisma.$HistorialBusquedaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HistorialBusquedas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialBusquedaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialBusquedas
     * const historialBusquedas = await prisma.historialBusqueda.findMany()
     * 
     * // Get first 10 HistorialBusquedas
     * const historialBusquedas = await prisma.historialBusqueda.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const historialBusquedaWithIdOnly = await prisma.historialBusqueda.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HistorialBusquedaFindManyArgs>(args?: SelectSubset<T, HistorialBusquedaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialBusquedaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HistorialBusqueda.
     * @param {HistorialBusquedaCreateArgs} args - Arguments to create a HistorialBusqueda.
     * @example
     * // Create one HistorialBusqueda
     * const HistorialBusqueda = await prisma.historialBusqueda.create({
     *   data: {
     *     // ... data to create a HistorialBusqueda
     *   }
     * })
     * 
     */
    create<T extends HistorialBusquedaCreateArgs>(args: SelectSubset<T, HistorialBusquedaCreateArgs<ExtArgs>>): Prisma__HistorialBusquedaClient<$Result.GetResult<Prisma.$HistorialBusquedaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HistorialBusquedas.
     * @param {HistorialBusquedaCreateManyArgs} args - Arguments to create many HistorialBusquedas.
     * @example
     * // Create many HistorialBusquedas
     * const historialBusqueda = await prisma.historialBusqueda.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HistorialBusquedaCreateManyArgs>(args?: SelectSubset<T, HistorialBusquedaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HistorialBusquedas and returns the data saved in the database.
     * @param {HistorialBusquedaCreateManyAndReturnArgs} args - Arguments to create many HistorialBusquedas.
     * @example
     * // Create many HistorialBusquedas
     * const historialBusqueda = await prisma.historialBusqueda.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HistorialBusquedas and only return the `id`
     * const historialBusquedaWithIdOnly = await prisma.historialBusqueda.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HistorialBusquedaCreateManyAndReturnArgs>(args?: SelectSubset<T, HistorialBusquedaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialBusquedaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a HistorialBusqueda.
     * @param {HistorialBusquedaDeleteArgs} args - Arguments to delete one HistorialBusqueda.
     * @example
     * // Delete one HistorialBusqueda
     * const HistorialBusqueda = await prisma.historialBusqueda.delete({
     *   where: {
     *     // ... filter to delete one HistorialBusqueda
     *   }
     * })
     * 
     */
    delete<T extends HistorialBusquedaDeleteArgs>(args: SelectSubset<T, HistorialBusquedaDeleteArgs<ExtArgs>>): Prisma__HistorialBusquedaClient<$Result.GetResult<Prisma.$HistorialBusquedaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HistorialBusqueda.
     * @param {HistorialBusquedaUpdateArgs} args - Arguments to update one HistorialBusqueda.
     * @example
     * // Update one HistorialBusqueda
     * const historialBusqueda = await prisma.historialBusqueda.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HistorialBusquedaUpdateArgs>(args: SelectSubset<T, HistorialBusquedaUpdateArgs<ExtArgs>>): Prisma__HistorialBusquedaClient<$Result.GetResult<Prisma.$HistorialBusquedaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HistorialBusquedas.
     * @param {HistorialBusquedaDeleteManyArgs} args - Arguments to filter HistorialBusquedas to delete.
     * @example
     * // Delete a few HistorialBusquedas
     * const { count } = await prisma.historialBusqueda.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HistorialBusquedaDeleteManyArgs>(args?: SelectSubset<T, HistorialBusquedaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialBusquedas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialBusquedaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialBusquedas
     * const historialBusqueda = await prisma.historialBusqueda.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HistorialBusquedaUpdateManyArgs>(args: SelectSubset<T, HistorialBusquedaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialBusquedas and returns the data updated in the database.
     * @param {HistorialBusquedaUpdateManyAndReturnArgs} args - Arguments to update many HistorialBusquedas.
     * @example
     * // Update many HistorialBusquedas
     * const historialBusqueda = await prisma.historialBusqueda.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more HistorialBusquedas and only return the `id`
     * const historialBusquedaWithIdOnly = await prisma.historialBusqueda.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HistorialBusquedaUpdateManyAndReturnArgs>(args: SelectSubset<T, HistorialBusquedaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialBusquedaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one HistorialBusqueda.
     * @param {HistorialBusquedaUpsertArgs} args - Arguments to update or create a HistorialBusqueda.
     * @example
     * // Update or create a HistorialBusqueda
     * const historialBusqueda = await prisma.historialBusqueda.upsert({
     *   create: {
     *     // ... data to create a HistorialBusqueda
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialBusqueda we want to update
     *   }
     * })
     */
    upsert<T extends HistorialBusquedaUpsertArgs>(args: SelectSubset<T, HistorialBusquedaUpsertArgs<ExtArgs>>): Prisma__HistorialBusquedaClient<$Result.GetResult<Prisma.$HistorialBusquedaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HistorialBusquedas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialBusquedaCountArgs} args - Arguments to filter HistorialBusquedas to count.
     * @example
     * // Count the number of HistorialBusquedas
     * const count = await prisma.historialBusqueda.count({
     *   where: {
     *     // ... the filter for the HistorialBusquedas we want to count
     *   }
     * })
    **/
    count<T extends HistorialBusquedaCountArgs>(
      args?: Subset<T, HistorialBusquedaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialBusquedaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialBusqueda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialBusquedaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialBusquedaAggregateArgs>(args: Subset<T, HistorialBusquedaAggregateArgs>): Prisma.PrismaPromise<GetHistorialBusquedaAggregateType<T>>

    /**
     * Group by HistorialBusqueda.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialBusquedaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HistorialBusquedaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HistorialBusquedaGroupByArgs['orderBy'] }
        : { orderBy?: HistorialBusquedaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HistorialBusquedaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialBusquedaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HistorialBusqueda model
   */
  readonly fields: HistorialBusquedaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HistorialBusqueda.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HistorialBusquedaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HistorialBusqueda model
   */
  interface HistorialBusquedaFieldRefs {
    readonly id: FieldRef<"HistorialBusqueda", 'Int'>
    readonly usuario_idusuario: FieldRef<"HistorialBusqueda", 'Int'>
    readonly termino_busqueda: FieldRef<"HistorialBusqueda", 'String'>
    readonly filtros: FieldRef<"HistorialBusqueda", 'Json'>
    readonly creado_en: FieldRef<"HistorialBusqueda", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HistorialBusqueda findUnique
   */
  export type HistorialBusquedaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaInclude<ExtArgs> | null
    /**
     * Filter, which HistorialBusqueda to fetch.
     */
    where: HistorialBusquedaWhereUniqueInput
  }

  /**
   * HistorialBusqueda findUniqueOrThrow
   */
  export type HistorialBusquedaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaInclude<ExtArgs> | null
    /**
     * Filter, which HistorialBusqueda to fetch.
     */
    where: HistorialBusquedaWhereUniqueInput
  }

  /**
   * HistorialBusqueda findFirst
   */
  export type HistorialBusquedaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaInclude<ExtArgs> | null
    /**
     * Filter, which HistorialBusqueda to fetch.
     */
    where?: HistorialBusquedaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialBusquedas to fetch.
     */
    orderBy?: HistorialBusquedaOrderByWithRelationInput | HistorialBusquedaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialBusquedas.
     */
    cursor?: HistorialBusquedaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialBusquedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialBusquedas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialBusquedas.
     */
    distinct?: HistorialBusquedaScalarFieldEnum | HistorialBusquedaScalarFieldEnum[]
  }

  /**
   * HistorialBusqueda findFirstOrThrow
   */
  export type HistorialBusquedaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaInclude<ExtArgs> | null
    /**
     * Filter, which HistorialBusqueda to fetch.
     */
    where?: HistorialBusquedaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialBusquedas to fetch.
     */
    orderBy?: HistorialBusquedaOrderByWithRelationInput | HistorialBusquedaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialBusquedas.
     */
    cursor?: HistorialBusquedaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialBusquedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialBusquedas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialBusquedas.
     */
    distinct?: HistorialBusquedaScalarFieldEnum | HistorialBusquedaScalarFieldEnum[]
  }

  /**
   * HistorialBusqueda findMany
   */
  export type HistorialBusquedaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaInclude<ExtArgs> | null
    /**
     * Filter, which HistorialBusquedas to fetch.
     */
    where?: HistorialBusquedaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialBusquedas to fetch.
     */
    orderBy?: HistorialBusquedaOrderByWithRelationInput | HistorialBusquedaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HistorialBusquedas.
     */
    cursor?: HistorialBusquedaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialBusquedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialBusquedas.
     */
    skip?: number
    distinct?: HistorialBusquedaScalarFieldEnum | HistorialBusquedaScalarFieldEnum[]
  }

  /**
   * HistorialBusqueda create
   */
  export type HistorialBusquedaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaInclude<ExtArgs> | null
    /**
     * The data needed to create a HistorialBusqueda.
     */
    data: XOR<HistorialBusquedaCreateInput, HistorialBusquedaUncheckedCreateInput>
  }

  /**
   * HistorialBusqueda createMany
   */
  export type HistorialBusquedaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HistorialBusquedas.
     */
    data: HistorialBusquedaCreateManyInput | HistorialBusquedaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HistorialBusqueda createManyAndReturn
   */
  export type HistorialBusquedaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * The data used to create many HistorialBusquedas.
     */
    data: HistorialBusquedaCreateManyInput | HistorialBusquedaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * HistorialBusqueda update
   */
  export type HistorialBusquedaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaInclude<ExtArgs> | null
    /**
     * The data needed to update a HistorialBusqueda.
     */
    data: XOR<HistorialBusquedaUpdateInput, HistorialBusquedaUncheckedUpdateInput>
    /**
     * Choose, which HistorialBusqueda to update.
     */
    where: HistorialBusquedaWhereUniqueInput
  }

  /**
   * HistorialBusqueda updateMany
   */
  export type HistorialBusquedaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HistorialBusquedas.
     */
    data: XOR<HistorialBusquedaUpdateManyMutationInput, HistorialBusquedaUncheckedUpdateManyInput>
    /**
     * Filter which HistorialBusquedas to update
     */
    where?: HistorialBusquedaWhereInput
    /**
     * Limit how many HistorialBusquedas to update.
     */
    limit?: number
  }

  /**
   * HistorialBusqueda updateManyAndReturn
   */
  export type HistorialBusquedaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * The data used to update HistorialBusquedas.
     */
    data: XOR<HistorialBusquedaUpdateManyMutationInput, HistorialBusquedaUncheckedUpdateManyInput>
    /**
     * Filter which HistorialBusquedas to update
     */
    where?: HistorialBusquedaWhereInput
    /**
     * Limit how many HistorialBusquedas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * HistorialBusqueda upsert
   */
  export type HistorialBusquedaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaInclude<ExtArgs> | null
    /**
     * The filter to search for the HistorialBusqueda to update in case it exists.
     */
    where: HistorialBusquedaWhereUniqueInput
    /**
     * In case the HistorialBusqueda found by the `where` argument doesn't exist, create a new HistorialBusqueda with this data.
     */
    create: XOR<HistorialBusquedaCreateInput, HistorialBusquedaUncheckedCreateInput>
    /**
     * In case the HistorialBusqueda was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HistorialBusquedaUpdateInput, HistorialBusquedaUncheckedUpdateInput>
  }

  /**
   * HistorialBusqueda delete
   */
  export type HistorialBusquedaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaInclude<ExtArgs> | null
    /**
     * Filter which HistorialBusqueda to delete.
     */
    where: HistorialBusquedaWhereUniqueInput
  }

  /**
   * HistorialBusqueda deleteMany
   */
  export type HistorialBusquedaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialBusquedas to delete
     */
    where?: HistorialBusquedaWhereInput
    /**
     * Limit how many HistorialBusquedas to delete.
     */
    limit?: number
  }

  /**
   * HistorialBusqueda without action
   */
  export type HistorialBusquedaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialBusqueda
     */
    select?: HistorialBusquedaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialBusqueda
     */
    omit?: HistorialBusquedaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialBusquedaInclude<ExtArgs> | null
  }


  /**
   * Model Pago
   */

  export type AggregatePago = {
    _count: PagoCountAggregateOutputType | null
    _avg: PagoAvgAggregateOutputType | null
    _sum: PagoSumAggregateOutputType | null
    _min: PagoMinAggregateOutputType | null
    _max: PagoMaxAggregateOutputType | null
  }

  export type PagoAvgAggregateOutputType = {
    id: number | null
    reserva_idreserva: number | null
    monto: Decimal | null
  }

  export type PagoSumAggregateOutputType = {
    id: number | null
    reserva_idreserva: number | null
    monto: Decimal | null
  }

  export type PagoMinAggregateOutputType = {
    id: number | null
    reserva_idreserva: number | null
    monto: Decimal | null
    fecha_pago: Date | null
    metodo_pago: $Enums.MetodoPago | null
    referencia: string | null
  }

  export type PagoMaxAggregateOutputType = {
    id: number | null
    reserva_idreserva: number | null
    monto: Decimal | null
    fecha_pago: Date | null
    metodo_pago: $Enums.MetodoPago | null
    referencia: string | null
  }

  export type PagoCountAggregateOutputType = {
    id: number
    reserva_idreserva: number
    monto: number
    fecha_pago: number
    metodo_pago: number
    referencia: number
    _all: number
  }


  export type PagoAvgAggregateInputType = {
    id?: true
    reserva_idreserva?: true
    monto?: true
  }

  export type PagoSumAggregateInputType = {
    id?: true
    reserva_idreserva?: true
    monto?: true
  }

  export type PagoMinAggregateInputType = {
    id?: true
    reserva_idreserva?: true
    monto?: true
    fecha_pago?: true
    metodo_pago?: true
    referencia?: true
  }

  export type PagoMaxAggregateInputType = {
    id?: true
    reserva_idreserva?: true
    monto?: true
    fecha_pago?: true
    metodo_pago?: true
    referencia?: true
  }

  export type PagoCountAggregateInputType = {
    id?: true
    reserva_idreserva?: true
    monto?: true
    fecha_pago?: true
    metodo_pago?: true
    referencia?: true
    _all?: true
  }

  export type PagoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pago to aggregate.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pagos
    **/
    _count?: true | PagoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PagoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PagoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PagoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PagoMaxAggregateInputType
  }

  export type GetPagoAggregateType<T extends PagoAggregateArgs> = {
        [P in keyof T & keyof AggregatePago]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePago[P]>
      : GetScalarType<T[P], AggregatePago[P]>
  }




  export type PagoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoWhereInput
    orderBy?: PagoOrderByWithAggregationInput | PagoOrderByWithAggregationInput[]
    by: PagoScalarFieldEnum[] | PagoScalarFieldEnum
    having?: PagoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PagoCountAggregateInputType | true
    _avg?: PagoAvgAggregateInputType
    _sum?: PagoSumAggregateInputType
    _min?: PagoMinAggregateInputType
    _max?: PagoMaxAggregateInputType
  }

  export type PagoGroupByOutputType = {
    id: number
    reserva_idreserva: number
    monto: Decimal
    fecha_pago: Date
    metodo_pago: $Enums.MetodoPago
    referencia: string
    _count: PagoCountAggregateOutputType | null
    _avg: PagoAvgAggregateOutputType | null
    _sum: PagoSumAggregateOutputType | null
    _min: PagoMinAggregateOutputType | null
    _max: PagoMaxAggregateOutputType | null
  }

  type GetPagoGroupByPayload<T extends PagoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PagoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PagoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PagoGroupByOutputType[P]>
            : GetScalarType<T[P], PagoGroupByOutputType[P]>
        }
      >
    >


  export type PagoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reserva_idreserva?: boolean
    monto?: boolean
    fecha_pago?: boolean
    metodo_pago?: boolean
    referencia?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    detalles?: boolean | Pago$detallesArgs<ExtArgs>
    _count?: boolean | PagoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pago"]>

  export type PagoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reserva_idreserva?: boolean
    monto?: boolean
    fecha_pago?: boolean
    metodo_pago?: boolean
    referencia?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pago"]>

  export type PagoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reserva_idreserva?: boolean
    monto?: boolean
    fecha_pago?: boolean
    metodo_pago?: boolean
    referencia?: boolean
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pago"]>

  export type PagoSelectScalar = {
    id?: boolean
    reserva_idreserva?: boolean
    monto?: boolean
    fecha_pago?: boolean
    metodo_pago?: boolean
    referencia?: boolean
  }

  export type PagoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "reserva_idreserva" | "monto" | "fecha_pago" | "metodo_pago" | "referencia", ExtArgs["result"]["pago"]>
  export type PagoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
    detalles?: boolean | Pago$detallesArgs<ExtArgs>
    _count?: boolean | PagoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PagoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
  }
  export type PagoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reserva?: boolean | ReservaDefaultArgs<ExtArgs>
  }

  export type $PagoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pago"
    objects: {
      reserva: Prisma.$ReservaPayload<ExtArgs>
      detalles: Prisma.$DetallePagoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      reserva_idreserva: number
      monto: Prisma.Decimal
      fecha_pago: Date
      metodo_pago: $Enums.MetodoPago
      referencia: string
    }, ExtArgs["result"]["pago"]>
    composites: {}
  }

  type PagoGetPayload<S extends boolean | null | undefined | PagoDefaultArgs> = $Result.GetResult<Prisma.$PagoPayload, S>

  type PagoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PagoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PagoCountAggregateInputType | true
    }

  export interface PagoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pago'], meta: { name: 'Pago' } }
    /**
     * Find zero or one Pago that matches the filter.
     * @param {PagoFindUniqueArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PagoFindUniqueArgs>(args: SelectSubset<T, PagoFindUniqueArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pago that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PagoFindUniqueOrThrowArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PagoFindUniqueOrThrowArgs>(args: SelectSubset<T, PagoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pago that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoFindFirstArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PagoFindFirstArgs>(args?: SelectSubset<T, PagoFindFirstArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pago that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoFindFirstOrThrowArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PagoFindFirstOrThrowArgs>(args?: SelectSubset<T, PagoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pagos
     * const pagos = await prisma.pago.findMany()
     * 
     * // Get first 10 Pagos
     * const pagos = await prisma.pago.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pagoWithIdOnly = await prisma.pago.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PagoFindManyArgs>(args?: SelectSubset<T, PagoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pago.
     * @param {PagoCreateArgs} args - Arguments to create a Pago.
     * @example
     * // Create one Pago
     * const Pago = await prisma.pago.create({
     *   data: {
     *     // ... data to create a Pago
     *   }
     * })
     * 
     */
    create<T extends PagoCreateArgs>(args: SelectSubset<T, PagoCreateArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pagos.
     * @param {PagoCreateManyArgs} args - Arguments to create many Pagos.
     * @example
     * // Create many Pagos
     * const pago = await prisma.pago.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PagoCreateManyArgs>(args?: SelectSubset<T, PagoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pagos and returns the data saved in the database.
     * @param {PagoCreateManyAndReturnArgs} args - Arguments to create many Pagos.
     * @example
     * // Create many Pagos
     * const pago = await prisma.pago.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pagos and only return the `id`
     * const pagoWithIdOnly = await prisma.pago.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PagoCreateManyAndReturnArgs>(args?: SelectSubset<T, PagoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pago.
     * @param {PagoDeleteArgs} args - Arguments to delete one Pago.
     * @example
     * // Delete one Pago
     * const Pago = await prisma.pago.delete({
     *   where: {
     *     // ... filter to delete one Pago
     *   }
     * })
     * 
     */
    delete<T extends PagoDeleteArgs>(args: SelectSubset<T, PagoDeleteArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pago.
     * @param {PagoUpdateArgs} args - Arguments to update one Pago.
     * @example
     * // Update one Pago
     * const pago = await prisma.pago.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PagoUpdateArgs>(args: SelectSubset<T, PagoUpdateArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pagos.
     * @param {PagoDeleteManyArgs} args - Arguments to filter Pagos to delete.
     * @example
     * // Delete a few Pagos
     * const { count } = await prisma.pago.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PagoDeleteManyArgs>(args?: SelectSubset<T, PagoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pagos
     * const pago = await prisma.pago.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PagoUpdateManyArgs>(args: SelectSubset<T, PagoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagos and returns the data updated in the database.
     * @param {PagoUpdateManyAndReturnArgs} args - Arguments to update many Pagos.
     * @example
     * // Update many Pagos
     * const pago = await prisma.pago.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pagos and only return the `id`
     * const pagoWithIdOnly = await prisma.pago.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PagoUpdateManyAndReturnArgs>(args: SelectSubset<T, PagoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pago.
     * @param {PagoUpsertArgs} args - Arguments to update or create a Pago.
     * @example
     * // Update or create a Pago
     * const pago = await prisma.pago.upsert({
     *   create: {
     *     // ... data to create a Pago
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pago we want to update
     *   }
     * })
     */
    upsert<T extends PagoUpsertArgs>(args: SelectSubset<T, PagoUpsertArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoCountArgs} args - Arguments to filter Pagos to count.
     * @example
     * // Count the number of Pagos
     * const count = await prisma.pago.count({
     *   where: {
     *     // ... the filter for the Pagos we want to count
     *   }
     * })
    **/
    count<T extends PagoCountArgs>(
      args?: Subset<T, PagoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PagoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PagoAggregateArgs>(args: Subset<T, PagoAggregateArgs>): Prisma.PrismaPromise<GetPagoAggregateType<T>>

    /**
     * Group by Pago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PagoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PagoGroupByArgs['orderBy'] }
        : { orderBy?: PagoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PagoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pago model
   */
  readonly fields: PagoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pago.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PagoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reserva<T extends ReservaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ReservaDefaultArgs<ExtArgs>>): Prisma__ReservaClient<$Result.GetResult<Prisma.$ReservaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    detalles<T extends Pago$detallesArgs<ExtArgs> = {}>(args?: Subset<T, Pago$detallesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetallePagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pago model
   */
  interface PagoFieldRefs {
    readonly id: FieldRef<"Pago", 'Int'>
    readonly reserva_idreserva: FieldRef<"Pago", 'Int'>
    readonly monto: FieldRef<"Pago", 'Decimal'>
    readonly fecha_pago: FieldRef<"Pago", 'DateTime'>
    readonly metodo_pago: FieldRef<"Pago", 'MetodoPago'>
    readonly referencia: FieldRef<"Pago", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Pago findUnique
   */
  export type PagoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago findUniqueOrThrow
   */
  export type PagoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago findFirst
   */
  export type PagoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagos.
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagos.
     */
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Pago findFirstOrThrow
   */
  export type PagoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagos.
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagos.
     */
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Pago findMany
   */
  export type PagoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pagos.
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Pago create
   */
  export type PagoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * The data needed to create a Pago.
     */
    data: XOR<PagoCreateInput, PagoUncheckedCreateInput>
  }

  /**
   * Pago createMany
   */
  export type PagoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pagos.
     */
    data: PagoCreateManyInput | PagoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pago createManyAndReturn
   */
  export type PagoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * The data used to create many Pagos.
     */
    data: PagoCreateManyInput | PagoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pago update
   */
  export type PagoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * The data needed to update a Pago.
     */
    data: XOR<PagoUpdateInput, PagoUncheckedUpdateInput>
    /**
     * Choose, which Pago to update.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago updateMany
   */
  export type PagoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pagos.
     */
    data: XOR<PagoUpdateManyMutationInput, PagoUncheckedUpdateManyInput>
    /**
     * Filter which Pagos to update
     */
    where?: PagoWhereInput
    /**
     * Limit how many Pagos to update.
     */
    limit?: number
  }

  /**
   * Pago updateManyAndReturn
   */
  export type PagoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * The data used to update Pagos.
     */
    data: XOR<PagoUpdateManyMutationInput, PagoUncheckedUpdateManyInput>
    /**
     * Filter which Pagos to update
     */
    where?: PagoWhereInput
    /**
     * Limit how many Pagos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pago upsert
   */
  export type PagoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * The filter to search for the Pago to update in case it exists.
     */
    where: PagoWhereUniqueInput
    /**
     * In case the Pago found by the `where` argument doesn't exist, create a new Pago with this data.
     */
    create: XOR<PagoCreateInput, PagoUncheckedCreateInput>
    /**
     * In case the Pago was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PagoUpdateInput, PagoUncheckedUpdateInput>
  }

  /**
   * Pago delete
   */
  export type PagoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter which Pago to delete.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago deleteMany
   */
  export type PagoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pagos to delete
     */
    where?: PagoWhereInput
    /**
     * Limit how many Pagos to delete.
     */
    limit?: number
  }

  /**
   * Pago.detalles
   */
  export type Pago$detallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoInclude<ExtArgs> | null
    where?: DetallePagoWhereInput
    orderBy?: DetallePagoOrderByWithRelationInput | DetallePagoOrderByWithRelationInput[]
    cursor?: DetallePagoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetallePagoScalarFieldEnum | DetallePagoScalarFieldEnum[]
  }

  /**
   * Pago without action
   */
  export type PagoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
  }


  /**
   * Model DetallePago
   */

  export type AggregateDetallePago = {
    _count: DetallePagoCountAggregateOutputType | null
    _avg: DetallePagoAvgAggregateOutputType | null
    _sum: DetallePagoSumAggregateOutputType | null
    _min: DetallePagoMinAggregateOutputType | null
    _max: DetallePagoMaxAggregateOutputType | null
  }

  export type DetallePagoAvgAggregateOutputType = {
    iddetalle_pago: number | null
    idpago: number | null
    monto: Decimal | null
  }

  export type DetallePagoSumAggregateOutputType = {
    iddetalle_pago: number | null
    idpago: number | null
    monto: Decimal | null
  }

  export type DetallePagoMinAggregateOutputType = {
    iddetalle_pago: number | null
    idpago: number | null
    concepto: string | null
    monto: Decimal | null
    fecha_creacion: Date | null
  }

  export type DetallePagoMaxAggregateOutputType = {
    iddetalle_pago: number | null
    idpago: number | null
    concepto: string | null
    monto: Decimal | null
    fecha_creacion: Date | null
  }

  export type DetallePagoCountAggregateOutputType = {
    iddetalle_pago: number
    idpago: number
    concepto: number
    monto: number
    fecha_creacion: number
    _all: number
  }


  export type DetallePagoAvgAggregateInputType = {
    iddetalle_pago?: true
    idpago?: true
    monto?: true
  }

  export type DetallePagoSumAggregateInputType = {
    iddetalle_pago?: true
    idpago?: true
    monto?: true
  }

  export type DetallePagoMinAggregateInputType = {
    iddetalle_pago?: true
    idpago?: true
    concepto?: true
    monto?: true
    fecha_creacion?: true
  }

  export type DetallePagoMaxAggregateInputType = {
    iddetalle_pago?: true
    idpago?: true
    concepto?: true
    monto?: true
    fecha_creacion?: true
  }

  export type DetallePagoCountAggregateInputType = {
    iddetalle_pago?: true
    idpago?: true
    concepto?: true
    monto?: true
    fecha_creacion?: true
    _all?: true
  }

  export type DetallePagoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetallePago to aggregate.
     */
    where?: DetallePagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetallePagos to fetch.
     */
    orderBy?: DetallePagoOrderByWithRelationInput | DetallePagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DetallePagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetallePagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetallePagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DetallePagos
    **/
    _count?: true | DetallePagoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetallePagoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetallePagoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetallePagoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetallePagoMaxAggregateInputType
  }

  export type GetDetallePagoAggregateType<T extends DetallePagoAggregateArgs> = {
        [P in keyof T & keyof AggregateDetallePago]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetallePago[P]>
      : GetScalarType<T[P], AggregateDetallePago[P]>
  }




  export type DetallePagoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DetallePagoWhereInput
    orderBy?: DetallePagoOrderByWithAggregationInput | DetallePagoOrderByWithAggregationInput[]
    by: DetallePagoScalarFieldEnum[] | DetallePagoScalarFieldEnum
    having?: DetallePagoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetallePagoCountAggregateInputType | true
    _avg?: DetallePagoAvgAggregateInputType
    _sum?: DetallePagoSumAggregateInputType
    _min?: DetallePagoMinAggregateInputType
    _max?: DetallePagoMaxAggregateInputType
  }

  export type DetallePagoGroupByOutputType = {
    iddetalle_pago: number
    idpago: number
    concepto: string
    monto: Decimal
    fecha_creacion: Date
    _count: DetallePagoCountAggregateOutputType | null
    _avg: DetallePagoAvgAggregateOutputType | null
    _sum: DetallePagoSumAggregateOutputType | null
    _min: DetallePagoMinAggregateOutputType | null
    _max: DetallePagoMaxAggregateOutputType | null
  }

  type GetDetallePagoGroupByPayload<T extends DetallePagoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetallePagoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetallePagoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetallePagoGroupByOutputType[P]>
            : GetScalarType<T[P], DetallePagoGroupByOutputType[P]>
        }
      >
    >


  export type DetallePagoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    iddetalle_pago?: boolean
    idpago?: boolean
    concepto?: boolean
    monto?: boolean
    fecha_creacion?: boolean
    pago?: boolean | PagoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detallePago"]>

  export type DetallePagoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    iddetalle_pago?: boolean
    idpago?: boolean
    concepto?: boolean
    monto?: boolean
    fecha_creacion?: boolean
    pago?: boolean | PagoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detallePago"]>

  export type DetallePagoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    iddetalle_pago?: boolean
    idpago?: boolean
    concepto?: boolean
    monto?: boolean
    fecha_creacion?: boolean
    pago?: boolean | PagoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detallePago"]>

  export type DetallePagoSelectScalar = {
    iddetalle_pago?: boolean
    idpago?: boolean
    concepto?: boolean
    monto?: boolean
    fecha_creacion?: boolean
  }

  export type DetallePagoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"iddetalle_pago" | "idpago" | "concepto" | "monto" | "fecha_creacion", ExtArgs["result"]["detallePago"]>
  export type DetallePagoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pago?: boolean | PagoDefaultArgs<ExtArgs>
  }
  export type DetallePagoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pago?: boolean | PagoDefaultArgs<ExtArgs>
  }
  export type DetallePagoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pago?: boolean | PagoDefaultArgs<ExtArgs>
  }

  export type $DetallePagoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DetallePago"
    objects: {
      pago: Prisma.$PagoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      iddetalle_pago: number
      idpago: number
      concepto: string
      monto: Prisma.Decimal
      fecha_creacion: Date
    }, ExtArgs["result"]["detallePago"]>
    composites: {}
  }

  type DetallePagoGetPayload<S extends boolean | null | undefined | DetallePagoDefaultArgs> = $Result.GetResult<Prisma.$DetallePagoPayload, S>

  type DetallePagoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DetallePagoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DetallePagoCountAggregateInputType | true
    }

  export interface DetallePagoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DetallePago'], meta: { name: 'DetallePago' } }
    /**
     * Find zero or one DetallePago that matches the filter.
     * @param {DetallePagoFindUniqueArgs} args - Arguments to find a DetallePago
     * @example
     * // Get one DetallePago
     * const detallePago = await prisma.detallePago.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DetallePagoFindUniqueArgs>(args: SelectSubset<T, DetallePagoFindUniqueArgs<ExtArgs>>): Prisma__DetallePagoClient<$Result.GetResult<Prisma.$DetallePagoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DetallePago that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DetallePagoFindUniqueOrThrowArgs} args - Arguments to find a DetallePago
     * @example
     * // Get one DetallePago
     * const detallePago = await prisma.detallePago.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DetallePagoFindUniqueOrThrowArgs>(args: SelectSubset<T, DetallePagoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DetallePagoClient<$Result.GetResult<Prisma.$DetallePagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DetallePago that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePagoFindFirstArgs} args - Arguments to find a DetallePago
     * @example
     * // Get one DetallePago
     * const detallePago = await prisma.detallePago.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DetallePagoFindFirstArgs>(args?: SelectSubset<T, DetallePagoFindFirstArgs<ExtArgs>>): Prisma__DetallePagoClient<$Result.GetResult<Prisma.$DetallePagoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DetallePago that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePagoFindFirstOrThrowArgs} args - Arguments to find a DetallePago
     * @example
     * // Get one DetallePago
     * const detallePago = await prisma.detallePago.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DetallePagoFindFirstOrThrowArgs>(args?: SelectSubset<T, DetallePagoFindFirstOrThrowArgs<ExtArgs>>): Prisma__DetallePagoClient<$Result.GetResult<Prisma.$DetallePagoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DetallePagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePagoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DetallePagos
     * const detallePagos = await prisma.detallePago.findMany()
     * 
     * // Get first 10 DetallePagos
     * const detallePagos = await prisma.detallePago.findMany({ take: 10 })
     * 
     * // Only select the `iddetalle_pago`
     * const detallePagoWithIddetalle_pagoOnly = await prisma.detallePago.findMany({ select: { iddetalle_pago: true } })
     * 
     */
    findMany<T extends DetallePagoFindManyArgs>(args?: SelectSubset<T, DetallePagoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetallePagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DetallePago.
     * @param {DetallePagoCreateArgs} args - Arguments to create a DetallePago.
     * @example
     * // Create one DetallePago
     * const DetallePago = await prisma.detallePago.create({
     *   data: {
     *     // ... data to create a DetallePago
     *   }
     * })
     * 
     */
    create<T extends DetallePagoCreateArgs>(args: SelectSubset<T, DetallePagoCreateArgs<ExtArgs>>): Prisma__DetallePagoClient<$Result.GetResult<Prisma.$DetallePagoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DetallePagos.
     * @param {DetallePagoCreateManyArgs} args - Arguments to create many DetallePagos.
     * @example
     * // Create many DetallePagos
     * const detallePago = await prisma.detallePago.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DetallePagoCreateManyArgs>(args?: SelectSubset<T, DetallePagoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DetallePagos and returns the data saved in the database.
     * @param {DetallePagoCreateManyAndReturnArgs} args - Arguments to create many DetallePagos.
     * @example
     * // Create many DetallePagos
     * const detallePago = await prisma.detallePago.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DetallePagos and only return the `iddetalle_pago`
     * const detallePagoWithIddetalle_pagoOnly = await prisma.detallePago.createManyAndReturn({
     *   select: { iddetalle_pago: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DetallePagoCreateManyAndReturnArgs>(args?: SelectSubset<T, DetallePagoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetallePagoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DetallePago.
     * @param {DetallePagoDeleteArgs} args - Arguments to delete one DetallePago.
     * @example
     * // Delete one DetallePago
     * const DetallePago = await prisma.detallePago.delete({
     *   where: {
     *     // ... filter to delete one DetallePago
     *   }
     * })
     * 
     */
    delete<T extends DetallePagoDeleteArgs>(args: SelectSubset<T, DetallePagoDeleteArgs<ExtArgs>>): Prisma__DetallePagoClient<$Result.GetResult<Prisma.$DetallePagoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DetallePago.
     * @param {DetallePagoUpdateArgs} args - Arguments to update one DetallePago.
     * @example
     * // Update one DetallePago
     * const detallePago = await prisma.detallePago.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DetallePagoUpdateArgs>(args: SelectSubset<T, DetallePagoUpdateArgs<ExtArgs>>): Prisma__DetallePagoClient<$Result.GetResult<Prisma.$DetallePagoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DetallePagos.
     * @param {DetallePagoDeleteManyArgs} args - Arguments to filter DetallePagos to delete.
     * @example
     * // Delete a few DetallePagos
     * const { count } = await prisma.detallePago.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DetallePagoDeleteManyArgs>(args?: SelectSubset<T, DetallePagoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetallePagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePagoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DetallePagos
     * const detallePago = await prisma.detallePago.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DetallePagoUpdateManyArgs>(args: SelectSubset<T, DetallePagoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DetallePagos and returns the data updated in the database.
     * @param {DetallePagoUpdateManyAndReturnArgs} args - Arguments to update many DetallePagos.
     * @example
     * // Update many DetallePagos
     * const detallePago = await prisma.detallePago.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DetallePagos and only return the `iddetalle_pago`
     * const detallePagoWithIddetalle_pagoOnly = await prisma.detallePago.updateManyAndReturn({
     *   select: { iddetalle_pago: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DetallePagoUpdateManyAndReturnArgs>(args: SelectSubset<T, DetallePagoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DetallePagoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DetallePago.
     * @param {DetallePagoUpsertArgs} args - Arguments to update or create a DetallePago.
     * @example
     * // Update or create a DetallePago
     * const detallePago = await prisma.detallePago.upsert({
     *   create: {
     *     // ... data to create a DetallePago
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DetallePago we want to update
     *   }
     * })
     */
    upsert<T extends DetallePagoUpsertArgs>(args: SelectSubset<T, DetallePagoUpsertArgs<ExtArgs>>): Prisma__DetallePagoClient<$Result.GetResult<Prisma.$DetallePagoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DetallePagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePagoCountArgs} args - Arguments to filter DetallePagos to count.
     * @example
     * // Count the number of DetallePagos
     * const count = await prisma.detallePago.count({
     *   where: {
     *     // ... the filter for the DetallePagos we want to count
     *   }
     * })
    **/
    count<T extends DetallePagoCountArgs>(
      args?: Subset<T, DetallePagoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetallePagoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DetallePago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePagoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetallePagoAggregateArgs>(args: Subset<T, DetallePagoAggregateArgs>): Prisma.PrismaPromise<GetDetallePagoAggregateType<T>>

    /**
     * Group by DetallePago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallePagoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DetallePagoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DetallePagoGroupByArgs['orderBy'] }
        : { orderBy?: DetallePagoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DetallePagoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetallePagoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DetallePago model
   */
  readonly fields: DetallePagoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DetallePago.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DetallePagoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pago<T extends PagoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PagoDefaultArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DetallePago model
   */
  interface DetallePagoFieldRefs {
    readonly iddetalle_pago: FieldRef<"DetallePago", 'Int'>
    readonly idpago: FieldRef<"DetallePago", 'Int'>
    readonly concepto: FieldRef<"DetallePago", 'String'>
    readonly monto: FieldRef<"DetallePago", 'Decimal'>
    readonly fecha_creacion: FieldRef<"DetallePago", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DetallePago findUnique
   */
  export type DetallePagoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoInclude<ExtArgs> | null
    /**
     * Filter, which DetallePago to fetch.
     */
    where: DetallePagoWhereUniqueInput
  }

  /**
   * DetallePago findUniqueOrThrow
   */
  export type DetallePagoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoInclude<ExtArgs> | null
    /**
     * Filter, which DetallePago to fetch.
     */
    where: DetallePagoWhereUniqueInput
  }

  /**
   * DetallePago findFirst
   */
  export type DetallePagoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoInclude<ExtArgs> | null
    /**
     * Filter, which DetallePago to fetch.
     */
    where?: DetallePagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetallePagos to fetch.
     */
    orderBy?: DetallePagoOrderByWithRelationInput | DetallePagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetallePagos.
     */
    cursor?: DetallePagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetallePagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetallePagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetallePagos.
     */
    distinct?: DetallePagoScalarFieldEnum | DetallePagoScalarFieldEnum[]
  }

  /**
   * DetallePago findFirstOrThrow
   */
  export type DetallePagoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoInclude<ExtArgs> | null
    /**
     * Filter, which DetallePago to fetch.
     */
    where?: DetallePagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetallePagos to fetch.
     */
    orderBy?: DetallePagoOrderByWithRelationInput | DetallePagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DetallePagos.
     */
    cursor?: DetallePagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetallePagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetallePagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DetallePagos.
     */
    distinct?: DetallePagoScalarFieldEnum | DetallePagoScalarFieldEnum[]
  }

  /**
   * DetallePago findMany
   */
  export type DetallePagoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoInclude<ExtArgs> | null
    /**
     * Filter, which DetallePagos to fetch.
     */
    where?: DetallePagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DetallePagos to fetch.
     */
    orderBy?: DetallePagoOrderByWithRelationInput | DetallePagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DetallePagos.
     */
    cursor?: DetallePagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DetallePagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DetallePagos.
     */
    skip?: number
    distinct?: DetallePagoScalarFieldEnum | DetallePagoScalarFieldEnum[]
  }

  /**
   * DetallePago create
   */
  export type DetallePagoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoInclude<ExtArgs> | null
    /**
     * The data needed to create a DetallePago.
     */
    data: XOR<DetallePagoCreateInput, DetallePagoUncheckedCreateInput>
  }

  /**
   * DetallePago createMany
   */
  export type DetallePagoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DetallePagos.
     */
    data: DetallePagoCreateManyInput | DetallePagoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DetallePago createManyAndReturn
   */
  export type DetallePagoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * The data used to create many DetallePagos.
     */
    data: DetallePagoCreateManyInput | DetallePagoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetallePago update
   */
  export type DetallePagoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoInclude<ExtArgs> | null
    /**
     * The data needed to update a DetallePago.
     */
    data: XOR<DetallePagoUpdateInput, DetallePagoUncheckedUpdateInput>
    /**
     * Choose, which DetallePago to update.
     */
    where: DetallePagoWhereUniqueInput
  }

  /**
   * DetallePago updateMany
   */
  export type DetallePagoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DetallePagos.
     */
    data: XOR<DetallePagoUpdateManyMutationInput, DetallePagoUncheckedUpdateManyInput>
    /**
     * Filter which DetallePagos to update
     */
    where?: DetallePagoWhereInput
    /**
     * Limit how many DetallePagos to update.
     */
    limit?: number
  }

  /**
   * DetallePago updateManyAndReturn
   */
  export type DetallePagoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * The data used to update DetallePagos.
     */
    data: XOR<DetallePagoUpdateManyMutationInput, DetallePagoUncheckedUpdateManyInput>
    /**
     * Filter which DetallePagos to update
     */
    where?: DetallePagoWhereInput
    /**
     * Limit how many DetallePagos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DetallePago upsert
   */
  export type DetallePagoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoInclude<ExtArgs> | null
    /**
     * The filter to search for the DetallePago to update in case it exists.
     */
    where: DetallePagoWhereUniqueInput
    /**
     * In case the DetallePago found by the `where` argument doesn't exist, create a new DetallePago with this data.
     */
    create: XOR<DetallePagoCreateInput, DetallePagoUncheckedCreateInput>
    /**
     * In case the DetallePago was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DetallePagoUpdateInput, DetallePagoUncheckedUpdateInput>
  }

  /**
   * DetallePago delete
   */
  export type DetallePagoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoInclude<ExtArgs> | null
    /**
     * Filter which DetallePago to delete.
     */
    where: DetallePagoWhereUniqueInput
  }

  /**
   * DetallePago deleteMany
   */
  export type DetallePagoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DetallePagos to delete
     */
    where?: DetallePagoWhereInput
    /**
     * Limit how many DetallePagos to delete.
     */
    limit?: number
  }

  /**
   * DetallePago without action
   */
  export type DetallePagoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DetallePago
     */
    select?: DetallePagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DetallePago
     */
    omit?: DetallePagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DetallePagoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    idusuario: 'idusuario',
    nombre_completo: 'nombre_completo',
    correo: 'correo',
    contrasena: 'contrasena',
    telefono: 'telefono',
    genero: 'genero',
    foto_perfil: 'foto_perfil',
    estado: 'estado',
    fecha_registro: 'fecha_registro',
    ultima_modificacion: 'ultima_modificacion'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const RenterScalarFieldEnum: {
    idrenter: 'idrenter',
    nombre_completo: 'nombre_completo',
    correo: 'correo',
    contrasena: 'contrasena',
    telefono: 'telefono',
    genero: 'genero',
    foto_perfil: 'foto_perfil',
    estado: 'estado',
    fecha_registro: 'fecha_registro',
    ultima_modificacion: 'ultima_modificacion'
  };

  export type RenterScalarFieldEnum = (typeof RenterScalarFieldEnum)[keyof typeof RenterScalarFieldEnum]


  export const UbicacionScalarFieldEnum: {
    idubicacion: 'idubicacion',
    pais: 'pais',
    ciudad: 'ciudad',
    latitud: 'latitud',
    amplitud: 'amplitud'
  };

  export type UbicacionScalarFieldEnum = (typeof UbicacionScalarFieldEnum)[keyof typeof UbicacionScalarFieldEnum]


  export const VehiculoScalarFieldEnum: {
    idvehiculo: 'idvehiculo',
    imagen: 'imagen',
    marca: 'marca',
    modelo: 'modelo',
    tarifa: 'tarifa',
    transmision: 'transmision',
    consumo: 'consumo',
    tipo_auto: 'tipo_auto',
    color: 'color',
    anio: 'anio',
    kilometraje: 'kilometraje',
    placa: 'placa',
    descripcion: 'descripcion',
    disponible: 'disponible',
    estado: 'estado',
    fecha_creacion: 'fecha_creacion',
    ultima_modificacion: 'ultima_modificacion',
    host_idanfitrion: 'host_idanfitrion',
    ubicacion_idubicacion: 'ubicacion_idubicacion'
  };

  export type VehiculoScalarFieldEnum = (typeof VehiculoScalarFieldEnum)[keyof typeof VehiculoScalarFieldEnum]


  export const ReservaScalarFieldEnum: {
    idreserva: 'idreserva',
    fecha_inicio: 'fecha_inicio',
    fecha_fin: 'fecha_fin',
    pagado: 'pagado',
    estado: 'estado',
    expiracion: 'expiracion',
    fecha_creacion: 'fecha_creacion',
    ultima_modificacion: 'ultima_modificacion',
    renter_idrenter: 'renter_idrenter',
    vehiculo_idvehiculo: 'vehiculo_idvehiculo'
  };

  export type ReservaScalarFieldEnum = (typeof ReservaScalarFieldEnum)[keyof typeof ReservaScalarFieldEnum]


  export const CalificacionScalarFieldEnum: {
    idcalificacion: 'idcalificacion',
    puntuacion: 'puntuacion',
    comentario: 'comentario',
    fecha: 'fecha',
    renter_idrenter: 'renter_idrenter',
    vehiculo_idvehiculo: 'vehiculo_idvehiculo'
  };

  export type CalificacionScalarFieldEnum = (typeof CalificacionScalarFieldEnum)[keyof typeof CalificacionScalarFieldEnum]


  export const HistorialBusquedaScalarFieldEnum: {
    id: 'id',
    usuario_idusuario: 'usuario_idusuario',
    termino_busqueda: 'termino_busqueda',
    filtros: 'filtros',
    creado_en: 'creado_en'
  };

  export type HistorialBusquedaScalarFieldEnum = (typeof HistorialBusquedaScalarFieldEnum)[keyof typeof HistorialBusquedaScalarFieldEnum]


  export const PagoScalarFieldEnum: {
    id: 'id',
    reserva_idreserva: 'reserva_idreserva',
    monto: 'monto',
    fecha_pago: 'fecha_pago',
    metodo_pago: 'metodo_pago',
    referencia: 'referencia'
  };

  export type PagoScalarFieldEnum = (typeof PagoScalarFieldEnum)[keyof typeof PagoScalarFieldEnum]


  export const DetallePagoScalarFieldEnum: {
    iddetalle_pago: 'iddetalle_pago',
    idpago: 'idpago',
    concepto: 'concepto',
    monto: 'monto',
    fecha_creacion: 'fecha_creacion'
  };

  export type DetallePagoScalarFieldEnum = (typeof DetallePagoScalarFieldEnum)[keyof typeof DetallePagoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'MetodoPago'
   */
  export type EnumMetodoPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MetodoPago'>
    


  /**
   * Reference to a field of type 'MetodoPago[]'
   */
  export type ListEnumMetodoPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MetodoPago[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    idusuario?: IntFilter<"Usuario"> | number
    nombre_completo?: StringFilter<"Usuario"> | string
    correo?: StringFilter<"Usuario"> | string
    contrasena?: StringFilter<"Usuario"> | string
    telefono?: StringNullableFilter<"Usuario"> | string | null
    genero?: StringNullableFilter<"Usuario"> | string | null
    foto_perfil?: StringNullableFilter<"Usuario"> | string | null
    estado?: StringFilter<"Usuario"> | string
    fecha_registro?: DateTimeFilter<"Usuario"> | Date | string
    ultima_modificacion?: DateTimeFilter<"Usuario"> | Date | string
    historialBusqueda?: HistorialBusquedaListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    idusuario?: SortOrder
    nombre_completo?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    telefono?: SortOrderInput | SortOrder
    genero?: SortOrderInput | SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    estado?: SortOrder
    fecha_registro?: SortOrder
    ultima_modificacion?: SortOrder
    historialBusqueda?: HistorialBusquedaOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    idusuario?: number
    correo?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nombre_completo?: StringFilter<"Usuario"> | string
    contrasena?: StringFilter<"Usuario"> | string
    telefono?: StringNullableFilter<"Usuario"> | string | null
    genero?: StringNullableFilter<"Usuario"> | string | null
    foto_perfil?: StringNullableFilter<"Usuario"> | string | null
    estado?: StringFilter<"Usuario"> | string
    fecha_registro?: DateTimeFilter<"Usuario"> | Date | string
    ultima_modificacion?: DateTimeFilter<"Usuario"> | Date | string
    historialBusqueda?: HistorialBusquedaListRelationFilter
  }, "idusuario" | "correo">

  export type UsuarioOrderByWithAggregationInput = {
    idusuario?: SortOrder
    nombre_completo?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    telefono?: SortOrderInput | SortOrder
    genero?: SortOrderInput | SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    estado?: SortOrder
    fecha_registro?: SortOrder
    ultima_modificacion?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    idusuario?: IntWithAggregatesFilter<"Usuario"> | number
    nombre_completo?: StringWithAggregatesFilter<"Usuario"> | string
    correo?: StringWithAggregatesFilter<"Usuario"> | string
    contrasena?: StringWithAggregatesFilter<"Usuario"> | string
    telefono?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    genero?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    foto_perfil?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    estado?: StringWithAggregatesFilter<"Usuario"> | string
    fecha_registro?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    ultima_modificacion?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
  }

  export type RenterWhereInput = {
    AND?: RenterWhereInput | RenterWhereInput[]
    OR?: RenterWhereInput[]
    NOT?: RenterWhereInput | RenterWhereInput[]
    idrenter?: IntFilter<"Renter"> | number
    nombre_completo?: StringFilter<"Renter"> | string
    correo?: StringFilter<"Renter"> | string
    contrasena?: StringFilter<"Renter"> | string
    telefono?: StringNullableFilter<"Renter"> | string | null
    genero?: StringNullableFilter<"Renter"> | string | null
    foto_perfil?: StringNullableFilter<"Renter"> | string | null
    estado?: StringFilter<"Renter"> | string
    fecha_registro?: DateTimeFilter<"Renter"> | Date | string
    ultima_modificacion?: DateTimeFilter<"Renter"> | Date | string
    reservas?: ReservaListRelationFilter
    calificaciones?: CalificacionListRelationFilter
    vehiculos?: VehiculoListRelationFilter
  }

  export type RenterOrderByWithRelationInput = {
    idrenter?: SortOrder
    nombre_completo?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    telefono?: SortOrderInput | SortOrder
    genero?: SortOrderInput | SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    estado?: SortOrder
    fecha_registro?: SortOrder
    ultima_modificacion?: SortOrder
    reservas?: ReservaOrderByRelationAggregateInput
    calificaciones?: CalificacionOrderByRelationAggregateInput
    vehiculos?: VehiculoOrderByRelationAggregateInput
  }

  export type RenterWhereUniqueInput = Prisma.AtLeast<{
    idrenter?: number
    correo?: string
    AND?: RenterWhereInput | RenterWhereInput[]
    OR?: RenterWhereInput[]
    NOT?: RenterWhereInput | RenterWhereInput[]
    nombre_completo?: StringFilter<"Renter"> | string
    contrasena?: StringFilter<"Renter"> | string
    telefono?: StringNullableFilter<"Renter"> | string | null
    genero?: StringNullableFilter<"Renter"> | string | null
    foto_perfil?: StringNullableFilter<"Renter"> | string | null
    estado?: StringFilter<"Renter"> | string
    fecha_registro?: DateTimeFilter<"Renter"> | Date | string
    ultima_modificacion?: DateTimeFilter<"Renter"> | Date | string
    reservas?: ReservaListRelationFilter
    calificaciones?: CalificacionListRelationFilter
    vehiculos?: VehiculoListRelationFilter
  }, "idrenter" | "correo">

  export type RenterOrderByWithAggregationInput = {
    idrenter?: SortOrder
    nombre_completo?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    telefono?: SortOrderInput | SortOrder
    genero?: SortOrderInput | SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    estado?: SortOrder
    fecha_registro?: SortOrder
    ultima_modificacion?: SortOrder
    _count?: RenterCountOrderByAggregateInput
    _avg?: RenterAvgOrderByAggregateInput
    _max?: RenterMaxOrderByAggregateInput
    _min?: RenterMinOrderByAggregateInput
    _sum?: RenterSumOrderByAggregateInput
  }

  export type RenterScalarWhereWithAggregatesInput = {
    AND?: RenterScalarWhereWithAggregatesInput | RenterScalarWhereWithAggregatesInput[]
    OR?: RenterScalarWhereWithAggregatesInput[]
    NOT?: RenterScalarWhereWithAggregatesInput | RenterScalarWhereWithAggregatesInput[]
    idrenter?: IntWithAggregatesFilter<"Renter"> | number
    nombre_completo?: StringWithAggregatesFilter<"Renter"> | string
    correo?: StringWithAggregatesFilter<"Renter"> | string
    contrasena?: StringWithAggregatesFilter<"Renter"> | string
    telefono?: StringNullableWithAggregatesFilter<"Renter"> | string | null
    genero?: StringNullableWithAggregatesFilter<"Renter"> | string | null
    foto_perfil?: StringNullableWithAggregatesFilter<"Renter"> | string | null
    estado?: StringWithAggregatesFilter<"Renter"> | string
    fecha_registro?: DateTimeWithAggregatesFilter<"Renter"> | Date | string
    ultima_modificacion?: DateTimeWithAggregatesFilter<"Renter"> | Date | string
  }

  export type UbicacionWhereInput = {
    AND?: UbicacionWhereInput | UbicacionWhereInput[]
    OR?: UbicacionWhereInput[]
    NOT?: UbicacionWhereInput | UbicacionWhereInput[]
    idubicacion?: IntFilter<"Ubicacion"> | number
    pais?: StringFilter<"Ubicacion"> | string
    ciudad?: StringFilter<"Ubicacion"> | string
    latitud?: FloatNullableFilter<"Ubicacion"> | number | null
    amplitud?: FloatNullableFilter<"Ubicacion"> | number | null
    vehiculos?: VehiculoListRelationFilter
  }

  export type UbicacionOrderByWithRelationInput = {
    idubicacion?: SortOrder
    pais?: SortOrder
    ciudad?: SortOrder
    latitud?: SortOrderInput | SortOrder
    amplitud?: SortOrderInput | SortOrder
    vehiculos?: VehiculoOrderByRelationAggregateInput
  }

  export type UbicacionWhereUniqueInput = Prisma.AtLeast<{
    idubicacion?: number
    AND?: UbicacionWhereInput | UbicacionWhereInput[]
    OR?: UbicacionWhereInput[]
    NOT?: UbicacionWhereInput | UbicacionWhereInput[]
    pais?: StringFilter<"Ubicacion"> | string
    ciudad?: StringFilter<"Ubicacion"> | string
    latitud?: FloatNullableFilter<"Ubicacion"> | number | null
    amplitud?: FloatNullableFilter<"Ubicacion"> | number | null
    vehiculos?: VehiculoListRelationFilter
  }, "idubicacion">

  export type UbicacionOrderByWithAggregationInput = {
    idubicacion?: SortOrder
    pais?: SortOrder
    ciudad?: SortOrder
    latitud?: SortOrderInput | SortOrder
    amplitud?: SortOrderInput | SortOrder
    _count?: UbicacionCountOrderByAggregateInput
    _avg?: UbicacionAvgOrderByAggregateInput
    _max?: UbicacionMaxOrderByAggregateInput
    _min?: UbicacionMinOrderByAggregateInput
    _sum?: UbicacionSumOrderByAggregateInput
  }

  export type UbicacionScalarWhereWithAggregatesInput = {
    AND?: UbicacionScalarWhereWithAggregatesInput | UbicacionScalarWhereWithAggregatesInput[]
    OR?: UbicacionScalarWhereWithAggregatesInput[]
    NOT?: UbicacionScalarWhereWithAggregatesInput | UbicacionScalarWhereWithAggregatesInput[]
    idubicacion?: IntWithAggregatesFilter<"Ubicacion"> | number
    pais?: StringWithAggregatesFilter<"Ubicacion"> | string
    ciudad?: StringWithAggregatesFilter<"Ubicacion"> | string
    latitud?: FloatNullableWithAggregatesFilter<"Ubicacion"> | number | null
    amplitud?: FloatNullableWithAggregatesFilter<"Ubicacion"> | number | null
  }

  export type VehiculoWhereInput = {
    AND?: VehiculoWhereInput | VehiculoWhereInput[]
    OR?: VehiculoWhereInput[]
    NOT?: VehiculoWhereInput | VehiculoWhereInput[]
    idvehiculo?: IntFilter<"Vehiculo"> | number
    imagen?: StringFilter<"Vehiculo"> | string
    marca?: StringFilter<"Vehiculo"> | string
    modelo?: StringFilter<"Vehiculo"> | string
    tarifa?: FloatFilter<"Vehiculo"> | number
    transmision?: StringFilter<"Vehiculo"> | string
    consumo?: StringFilter<"Vehiculo"> | string
    tipo_auto?: StringFilter<"Vehiculo"> | string
    color?: StringFilter<"Vehiculo"> | string
    anio?: IntFilter<"Vehiculo"> | number
    kilometraje?: IntFilter<"Vehiculo"> | number
    placa?: StringFilter<"Vehiculo"> | string
    descripcion?: StringNullableFilter<"Vehiculo"> | string | null
    disponible?: StringFilter<"Vehiculo"> | string
    estado?: StringFilter<"Vehiculo"> | string
    fecha_creacion?: DateTimeFilter<"Vehiculo"> | Date | string
    ultima_modificacion?: DateTimeFilter<"Vehiculo"> | Date | string
    host_idanfitrion?: IntFilter<"Vehiculo"> | number
    ubicacion_idubicacion?: IntFilter<"Vehiculo"> | number
    renter?: XOR<RenterNullableScalarRelationFilter, RenterWhereInput> | null
    ubicacion?: XOR<UbicacionScalarRelationFilter, UbicacionWhereInput>
    reservas?: ReservaListRelationFilter
    calificaciones?: CalificacionListRelationFilter
  }

  export type VehiculoOrderByWithRelationInput = {
    idvehiculo?: SortOrder
    imagen?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    tarifa?: SortOrder
    transmision?: SortOrder
    consumo?: SortOrder
    tipo_auto?: SortOrder
    color?: SortOrder
    anio?: SortOrder
    kilometraje?: SortOrder
    placa?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    disponible?: SortOrder
    estado?: SortOrder
    fecha_creacion?: SortOrder
    ultima_modificacion?: SortOrder
    host_idanfitrion?: SortOrder
    ubicacion_idubicacion?: SortOrder
    renter?: RenterOrderByWithRelationInput
    ubicacion?: UbicacionOrderByWithRelationInput
    reservas?: ReservaOrderByRelationAggregateInput
    calificaciones?: CalificacionOrderByRelationAggregateInput
  }

  export type VehiculoWhereUniqueInput = Prisma.AtLeast<{
    idvehiculo?: number
    AND?: VehiculoWhereInput | VehiculoWhereInput[]
    OR?: VehiculoWhereInput[]
    NOT?: VehiculoWhereInput | VehiculoWhereInput[]
    imagen?: StringFilter<"Vehiculo"> | string
    marca?: StringFilter<"Vehiculo"> | string
    modelo?: StringFilter<"Vehiculo"> | string
    tarifa?: FloatFilter<"Vehiculo"> | number
    transmision?: StringFilter<"Vehiculo"> | string
    consumo?: StringFilter<"Vehiculo"> | string
    tipo_auto?: StringFilter<"Vehiculo"> | string
    color?: StringFilter<"Vehiculo"> | string
    anio?: IntFilter<"Vehiculo"> | number
    kilometraje?: IntFilter<"Vehiculo"> | number
    placa?: StringFilter<"Vehiculo"> | string
    descripcion?: StringNullableFilter<"Vehiculo"> | string | null
    disponible?: StringFilter<"Vehiculo"> | string
    estado?: StringFilter<"Vehiculo"> | string
    fecha_creacion?: DateTimeFilter<"Vehiculo"> | Date | string
    ultima_modificacion?: DateTimeFilter<"Vehiculo"> | Date | string
    host_idanfitrion?: IntFilter<"Vehiculo"> | number
    ubicacion_idubicacion?: IntFilter<"Vehiculo"> | number
    renter?: XOR<RenterNullableScalarRelationFilter, RenterWhereInput> | null
    ubicacion?: XOR<UbicacionScalarRelationFilter, UbicacionWhereInput>
    reservas?: ReservaListRelationFilter
    calificaciones?: CalificacionListRelationFilter
  }, "idvehiculo">

  export type VehiculoOrderByWithAggregationInput = {
    idvehiculo?: SortOrder
    imagen?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    tarifa?: SortOrder
    transmision?: SortOrder
    consumo?: SortOrder
    tipo_auto?: SortOrder
    color?: SortOrder
    anio?: SortOrder
    kilometraje?: SortOrder
    placa?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    disponible?: SortOrder
    estado?: SortOrder
    fecha_creacion?: SortOrder
    ultima_modificacion?: SortOrder
    host_idanfitrion?: SortOrder
    ubicacion_idubicacion?: SortOrder
    _count?: VehiculoCountOrderByAggregateInput
    _avg?: VehiculoAvgOrderByAggregateInput
    _max?: VehiculoMaxOrderByAggregateInput
    _min?: VehiculoMinOrderByAggregateInput
    _sum?: VehiculoSumOrderByAggregateInput
  }

  export type VehiculoScalarWhereWithAggregatesInput = {
    AND?: VehiculoScalarWhereWithAggregatesInput | VehiculoScalarWhereWithAggregatesInput[]
    OR?: VehiculoScalarWhereWithAggregatesInput[]
    NOT?: VehiculoScalarWhereWithAggregatesInput | VehiculoScalarWhereWithAggregatesInput[]
    idvehiculo?: IntWithAggregatesFilter<"Vehiculo"> | number
    imagen?: StringWithAggregatesFilter<"Vehiculo"> | string
    marca?: StringWithAggregatesFilter<"Vehiculo"> | string
    modelo?: StringWithAggregatesFilter<"Vehiculo"> | string
    tarifa?: FloatWithAggregatesFilter<"Vehiculo"> | number
    transmision?: StringWithAggregatesFilter<"Vehiculo"> | string
    consumo?: StringWithAggregatesFilter<"Vehiculo"> | string
    tipo_auto?: StringWithAggregatesFilter<"Vehiculo"> | string
    color?: StringWithAggregatesFilter<"Vehiculo"> | string
    anio?: IntWithAggregatesFilter<"Vehiculo"> | number
    kilometraje?: IntWithAggregatesFilter<"Vehiculo"> | number
    placa?: StringWithAggregatesFilter<"Vehiculo"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Vehiculo"> | string | null
    disponible?: StringWithAggregatesFilter<"Vehiculo"> | string
    estado?: StringWithAggregatesFilter<"Vehiculo"> | string
    fecha_creacion?: DateTimeWithAggregatesFilter<"Vehiculo"> | Date | string
    ultima_modificacion?: DateTimeWithAggregatesFilter<"Vehiculo"> | Date | string
    host_idanfitrion?: IntWithAggregatesFilter<"Vehiculo"> | number
    ubicacion_idubicacion?: IntWithAggregatesFilter<"Vehiculo"> | number
  }

  export type ReservaWhereInput = {
    AND?: ReservaWhereInput | ReservaWhereInput[]
    OR?: ReservaWhereInput[]
    NOT?: ReservaWhereInput | ReservaWhereInput[]
    idreserva?: IntFilter<"Reserva"> | number
    fecha_inicio?: DateTimeFilter<"Reserva"> | Date | string
    fecha_fin?: DateTimeFilter<"Reserva"> | Date | string
    pagado?: BoolFilter<"Reserva"> | boolean
    estado?: StringFilter<"Reserva"> | string
    expiracion?: DateTimeFilter<"Reserva"> | Date | string
    fecha_creacion?: DateTimeFilter<"Reserva"> | Date | string
    ultima_modificacion?: DateTimeFilter<"Reserva"> | Date | string
    renter_idrenter?: IntFilter<"Reserva"> | number
    vehiculo_idvehiculo?: IntFilter<"Reserva"> | number
    renter?: XOR<RenterScalarRelationFilter, RenterWhereInput>
    vehiculo?: XOR<VehiculoScalarRelationFilter, VehiculoWhereInput>
    pagos?: PagoListRelationFilter
  }

  export type ReservaOrderByWithRelationInput = {
    idreserva?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    pagado?: SortOrder
    estado?: SortOrder
    expiracion?: SortOrder
    fecha_creacion?: SortOrder
    ultima_modificacion?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
    renter?: RenterOrderByWithRelationInput
    vehiculo?: VehiculoOrderByWithRelationInput
    pagos?: PagoOrderByRelationAggregateInput
  }

  export type ReservaWhereUniqueInput = Prisma.AtLeast<{
    idreserva?: number
    AND?: ReservaWhereInput | ReservaWhereInput[]
    OR?: ReservaWhereInput[]
    NOT?: ReservaWhereInput | ReservaWhereInput[]
    fecha_inicio?: DateTimeFilter<"Reserva"> | Date | string
    fecha_fin?: DateTimeFilter<"Reserva"> | Date | string
    pagado?: BoolFilter<"Reserva"> | boolean
    estado?: StringFilter<"Reserva"> | string
    expiracion?: DateTimeFilter<"Reserva"> | Date | string
    fecha_creacion?: DateTimeFilter<"Reserva"> | Date | string
    ultima_modificacion?: DateTimeFilter<"Reserva"> | Date | string
    renter_idrenter?: IntFilter<"Reserva"> | number
    vehiculo_idvehiculo?: IntFilter<"Reserva"> | number
    renter?: XOR<RenterScalarRelationFilter, RenterWhereInput>
    vehiculo?: XOR<VehiculoScalarRelationFilter, VehiculoWhereInput>
    pagos?: PagoListRelationFilter
  }, "idreserva">

  export type ReservaOrderByWithAggregationInput = {
    idreserva?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    pagado?: SortOrder
    estado?: SortOrder
    expiracion?: SortOrder
    fecha_creacion?: SortOrder
    ultima_modificacion?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
    _count?: ReservaCountOrderByAggregateInput
    _avg?: ReservaAvgOrderByAggregateInput
    _max?: ReservaMaxOrderByAggregateInput
    _min?: ReservaMinOrderByAggregateInput
    _sum?: ReservaSumOrderByAggregateInput
  }

  export type ReservaScalarWhereWithAggregatesInput = {
    AND?: ReservaScalarWhereWithAggregatesInput | ReservaScalarWhereWithAggregatesInput[]
    OR?: ReservaScalarWhereWithAggregatesInput[]
    NOT?: ReservaScalarWhereWithAggregatesInput | ReservaScalarWhereWithAggregatesInput[]
    idreserva?: IntWithAggregatesFilter<"Reserva"> | number
    fecha_inicio?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    fecha_fin?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    pagado?: BoolWithAggregatesFilter<"Reserva"> | boolean
    estado?: StringWithAggregatesFilter<"Reserva"> | string
    expiracion?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    fecha_creacion?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    ultima_modificacion?: DateTimeWithAggregatesFilter<"Reserva"> | Date | string
    renter_idrenter?: IntWithAggregatesFilter<"Reserva"> | number
    vehiculo_idvehiculo?: IntWithAggregatesFilter<"Reserva"> | number
  }

  export type CalificacionWhereInput = {
    AND?: CalificacionWhereInput | CalificacionWhereInput[]
    OR?: CalificacionWhereInput[]
    NOT?: CalificacionWhereInput | CalificacionWhereInput[]
    idcalificacion?: IntFilter<"Calificacion"> | number
    puntuacion?: FloatFilter<"Calificacion"> | number
    comentario?: StringNullableFilter<"Calificacion"> | string | null
    fecha?: DateTimeFilter<"Calificacion"> | Date | string
    renter_idrenter?: IntFilter<"Calificacion"> | number
    vehiculo_idvehiculo?: IntFilter<"Calificacion"> | number
    renter?: XOR<RenterScalarRelationFilter, RenterWhereInput>
    vehiculo?: XOR<VehiculoScalarRelationFilter, VehiculoWhereInput>
  }

  export type CalificacionOrderByWithRelationInput = {
    idcalificacion?: SortOrder
    puntuacion?: SortOrder
    comentario?: SortOrderInput | SortOrder
    fecha?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
    renter?: RenterOrderByWithRelationInput
    vehiculo?: VehiculoOrderByWithRelationInput
  }

  export type CalificacionWhereUniqueInput = Prisma.AtLeast<{
    idcalificacion?: number
    AND?: CalificacionWhereInput | CalificacionWhereInput[]
    OR?: CalificacionWhereInput[]
    NOT?: CalificacionWhereInput | CalificacionWhereInput[]
    puntuacion?: FloatFilter<"Calificacion"> | number
    comentario?: StringNullableFilter<"Calificacion"> | string | null
    fecha?: DateTimeFilter<"Calificacion"> | Date | string
    renter_idrenter?: IntFilter<"Calificacion"> | number
    vehiculo_idvehiculo?: IntFilter<"Calificacion"> | number
    renter?: XOR<RenterScalarRelationFilter, RenterWhereInput>
    vehiculo?: XOR<VehiculoScalarRelationFilter, VehiculoWhereInput>
  }, "idcalificacion">

  export type CalificacionOrderByWithAggregationInput = {
    idcalificacion?: SortOrder
    puntuacion?: SortOrder
    comentario?: SortOrderInput | SortOrder
    fecha?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
    _count?: CalificacionCountOrderByAggregateInput
    _avg?: CalificacionAvgOrderByAggregateInput
    _max?: CalificacionMaxOrderByAggregateInput
    _min?: CalificacionMinOrderByAggregateInput
    _sum?: CalificacionSumOrderByAggregateInput
  }

  export type CalificacionScalarWhereWithAggregatesInput = {
    AND?: CalificacionScalarWhereWithAggregatesInput | CalificacionScalarWhereWithAggregatesInput[]
    OR?: CalificacionScalarWhereWithAggregatesInput[]
    NOT?: CalificacionScalarWhereWithAggregatesInput | CalificacionScalarWhereWithAggregatesInput[]
    idcalificacion?: IntWithAggregatesFilter<"Calificacion"> | number
    puntuacion?: FloatWithAggregatesFilter<"Calificacion"> | number
    comentario?: StringNullableWithAggregatesFilter<"Calificacion"> | string | null
    fecha?: DateTimeWithAggregatesFilter<"Calificacion"> | Date | string
    renter_idrenter?: IntWithAggregatesFilter<"Calificacion"> | number
    vehiculo_idvehiculo?: IntWithAggregatesFilter<"Calificacion"> | number
  }

  export type HistorialBusquedaWhereInput = {
    AND?: HistorialBusquedaWhereInput | HistorialBusquedaWhereInput[]
    OR?: HistorialBusquedaWhereInput[]
    NOT?: HistorialBusquedaWhereInput | HistorialBusquedaWhereInput[]
    id?: IntFilter<"HistorialBusqueda"> | number
    usuario_idusuario?: IntFilter<"HistorialBusqueda"> | number
    termino_busqueda?: StringFilter<"HistorialBusqueda"> | string
    filtros?: JsonNullableFilter<"HistorialBusqueda">
    creado_en?: DateTimeFilter<"HistorialBusqueda"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type HistorialBusquedaOrderByWithRelationInput = {
    id?: SortOrder
    usuario_idusuario?: SortOrder
    termino_busqueda?: SortOrder
    filtros?: SortOrderInput | SortOrder
    creado_en?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
  }

  export type HistorialBusquedaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HistorialBusquedaWhereInput | HistorialBusquedaWhereInput[]
    OR?: HistorialBusquedaWhereInput[]
    NOT?: HistorialBusquedaWhereInput | HistorialBusquedaWhereInput[]
    usuario_idusuario?: IntFilter<"HistorialBusqueda"> | number
    termino_busqueda?: StringFilter<"HistorialBusqueda"> | string
    filtros?: JsonNullableFilter<"HistorialBusqueda">
    creado_en?: DateTimeFilter<"HistorialBusqueda"> | Date | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "id">

  export type HistorialBusquedaOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_idusuario?: SortOrder
    termino_busqueda?: SortOrder
    filtros?: SortOrderInput | SortOrder
    creado_en?: SortOrder
    _count?: HistorialBusquedaCountOrderByAggregateInput
    _avg?: HistorialBusquedaAvgOrderByAggregateInput
    _max?: HistorialBusquedaMaxOrderByAggregateInput
    _min?: HistorialBusquedaMinOrderByAggregateInput
    _sum?: HistorialBusquedaSumOrderByAggregateInput
  }

  export type HistorialBusquedaScalarWhereWithAggregatesInput = {
    AND?: HistorialBusquedaScalarWhereWithAggregatesInput | HistorialBusquedaScalarWhereWithAggregatesInput[]
    OR?: HistorialBusquedaScalarWhereWithAggregatesInput[]
    NOT?: HistorialBusquedaScalarWhereWithAggregatesInput | HistorialBusquedaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"HistorialBusqueda"> | number
    usuario_idusuario?: IntWithAggregatesFilter<"HistorialBusqueda"> | number
    termino_busqueda?: StringWithAggregatesFilter<"HistorialBusqueda"> | string
    filtros?: JsonNullableWithAggregatesFilter<"HistorialBusqueda">
    creado_en?: DateTimeWithAggregatesFilter<"HistorialBusqueda"> | Date | string
  }

  export type PagoWhereInput = {
    AND?: PagoWhereInput | PagoWhereInput[]
    OR?: PagoWhereInput[]
    NOT?: PagoWhereInput | PagoWhereInput[]
    id?: IntFilter<"Pago"> | number
    reserva_idreserva?: IntFilter<"Pago"> | number
    monto?: DecimalFilter<"Pago"> | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeFilter<"Pago"> | Date | string
    metodo_pago?: EnumMetodoPagoFilter<"Pago"> | $Enums.MetodoPago
    referencia?: StringFilter<"Pago"> | string
    reserva?: XOR<ReservaScalarRelationFilter, ReservaWhereInput>
    detalles?: DetallePagoListRelationFilter
  }

  export type PagoOrderByWithRelationInput = {
    id?: SortOrder
    reserva_idreserva?: SortOrder
    monto?: SortOrder
    fecha_pago?: SortOrder
    metodo_pago?: SortOrder
    referencia?: SortOrder
    reserva?: ReservaOrderByWithRelationInput
    detalles?: DetallePagoOrderByRelationAggregateInput
  }

  export type PagoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PagoWhereInput | PagoWhereInput[]
    OR?: PagoWhereInput[]
    NOT?: PagoWhereInput | PagoWhereInput[]
    reserva_idreserva?: IntFilter<"Pago"> | number
    monto?: DecimalFilter<"Pago"> | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeFilter<"Pago"> | Date | string
    metodo_pago?: EnumMetodoPagoFilter<"Pago"> | $Enums.MetodoPago
    referencia?: StringFilter<"Pago"> | string
    reserva?: XOR<ReservaScalarRelationFilter, ReservaWhereInput>
    detalles?: DetallePagoListRelationFilter
  }, "id">

  export type PagoOrderByWithAggregationInput = {
    id?: SortOrder
    reserva_idreserva?: SortOrder
    monto?: SortOrder
    fecha_pago?: SortOrder
    metodo_pago?: SortOrder
    referencia?: SortOrder
    _count?: PagoCountOrderByAggregateInput
    _avg?: PagoAvgOrderByAggregateInput
    _max?: PagoMaxOrderByAggregateInput
    _min?: PagoMinOrderByAggregateInput
    _sum?: PagoSumOrderByAggregateInput
  }

  export type PagoScalarWhereWithAggregatesInput = {
    AND?: PagoScalarWhereWithAggregatesInput | PagoScalarWhereWithAggregatesInput[]
    OR?: PagoScalarWhereWithAggregatesInput[]
    NOT?: PagoScalarWhereWithAggregatesInput | PagoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Pago"> | number
    reserva_idreserva?: IntWithAggregatesFilter<"Pago"> | number
    monto?: DecimalWithAggregatesFilter<"Pago"> | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeWithAggregatesFilter<"Pago"> | Date | string
    metodo_pago?: EnumMetodoPagoWithAggregatesFilter<"Pago"> | $Enums.MetodoPago
    referencia?: StringWithAggregatesFilter<"Pago"> | string
  }

  export type DetallePagoWhereInput = {
    AND?: DetallePagoWhereInput | DetallePagoWhereInput[]
    OR?: DetallePagoWhereInput[]
    NOT?: DetallePagoWhereInput | DetallePagoWhereInput[]
    iddetalle_pago?: IntFilter<"DetallePago"> | number
    idpago?: IntFilter<"DetallePago"> | number
    concepto?: StringFilter<"DetallePago"> | string
    monto?: DecimalFilter<"DetallePago"> | Decimal | DecimalJsLike | number | string
    fecha_creacion?: DateTimeFilter<"DetallePago"> | Date | string
    pago?: XOR<PagoScalarRelationFilter, PagoWhereInput>
  }

  export type DetallePagoOrderByWithRelationInput = {
    iddetalle_pago?: SortOrder
    idpago?: SortOrder
    concepto?: SortOrder
    monto?: SortOrder
    fecha_creacion?: SortOrder
    pago?: PagoOrderByWithRelationInput
  }

  export type DetallePagoWhereUniqueInput = Prisma.AtLeast<{
    iddetalle_pago?: number
    AND?: DetallePagoWhereInput | DetallePagoWhereInput[]
    OR?: DetallePagoWhereInput[]
    NOT?: DetallePagoWhereInput | DetallePagoWhereInput[]
    idpago?: IntFilter<"DetallePago"> | number
    concepto?: StringFilter<"DetallePago"> | string
    monto?: DecimalFilter<"DetallePago"> | Decimal | DecimalJsLike | number | string
    fecha_creacion?: DateTimeFilter<"DetallePago"> | Date | string
    pago?: XOR<PagoScalarRelationFilter, PagoWhereInput>
  }, "iddetalle_pago">

  export type DetallePagoOrderByWithAggregationInput = {
    iddetalle_pago?: SortOrder
    idpago?: SortOrder
    concepto?: SortOrder
    monto?: SortOrder
    fecha_creacion?: SortOrder
    _count?: DetallePagoCountOrderByAggregateInput
    _avg?: DetallePagoAvgOrderByAggregateInput
    _max?: DetallePagoMaxOrderByAggregateInput
    _min?: DetallePagoMinOrderByAggregateInput
    _sum?: DetallePagoSumOrderByAggregateInput
  }

  export type DetallePagoScalarWhereWithAggregatesInput = {
    AND?: DetallePagoScalarWhereWithAggregatesInput | DetallePagoScalarWhereWithAggregatesInput[]
    OR?: DetallePagoScalarWhereWithAggregatesInput[]
    NOT?: DetallePagoScalarWhereWithAggregatesInput | DetallePagoScalarWhereWithAggregatesInput[]
    iddetalle_pago?: IntWithAggregatesFilter<"DetallePago"> | number
    idpago?: IntWithAggregatesFilter<"DetallePago"> | number
    concepto?: StringWithAggregatesFilter<"DetallePago"> | string
    monto?: DecimalWithAggregatesFilter<"DetallePago"> | Decimal | DecimalJsLike | number | string
    fecha_creacion?: DateTimeWithAggregatesFilter<"DetallePago"> | Date | string
  }

  export type UsuarioCreateInput = {
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
    historialBusqueda?: HistorialBusquedaCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    idusuario?: number
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
    historialBusqueda?: HistorialBusquedaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    historialBusqueda?: HistorialBusquedaUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    idusuario?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    historialBusqueda?: HistorialBusquedaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    idusuario?: number
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
  }

  export type UsuarioUpdateManyMutationInput = {
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUncheckedUpdateManyInput = {
    idusuario?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RenterCreateInput = {
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
    reservas?: ReservaCreateNestedManyWithoutRenterInput
    calificaciones?: CalificacionCreateNestedManyWithoutRenterInput
    vehiculos?: VehiculoCreateNestedManyWithoutRenterInput
  }

  export type RenterUncheckedCreateInput = {
    idrenter?: number
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
    reservas?: ReservaUncheckedCreateNestedManyWithoutRenterInput
    calificaciones?: CalificacionUncheckedCreateNestedManyWithoutRenterInput
    vehiculos?: VehiculoUncheckedCreateNestedManyWithoutRenterInput
  }

  export type RenterUpdateInput = {
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    reservas?: ReservaUpdateManyWithoutRenterNestedInput
    calificaciones?: CalificacionUpdateManyWithoutRenterNestedInput
    vehiculos?: VehiculoUpdateManyWithoutRenterNestedInput
  }

  export type RenterUncheckedUpdateInput = {
    idrenter?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    reservas?: ReservaUncheckedUpdateManyWithoutRenterNestedInput
    calificaciones?: CalificacionUncheckedUpdateManyWithoutRenterNestedInput
    vehiculos?: VehiculoUncheckedUpdateManyWithoutRenterNestedInput
  }

  export type RenterCreateManyInput = {
    idrenter?: number
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
  }

  export type RenterUpdateManyMutationInput = {
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RenterUncheckedUpdateManyInput = {
    idrenter?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UbicacionCreateInput = {
    pais: string
    ciudad: string
    latitud?: number | null
    amplitud?: number | null
    vehiculos?: VehiculoCreateNestedManyWithoutUbicacionInput
  }

  export type UbicacionUncheckedCreateInput = {
    idubicacion?: number
    pais: string
    ciudad: string
    latitud?: number | null
    amplitud?: number | null
    vehiculos?: VehiculoUncheckedCreateNestedManyWithoutUbicacionInput
  }

  export type UbicacionUpdateInput = {
    pais?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    amplitud?: NullableFloatFieldUpdateOperationsInput | number | null
    vehiculos?: VehiculoUpdateManyWithoutUbicacionNestedInput
  }

  export type UbicacionUncheckedUpdateInput = {
    idubicacion?: IntFieldUpdateOperationsInput | number
    pais?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    amplitud?: NullableFloatFieldUpdateOperationsInput | number | null
    vehiculos?: VehiculoUncheckedUpdateManyWithoutUbicacionNestedInput
  }

  export type UbicacionCreateManyInput = {
    idubicacion?: number
    pais: string
    ciudad: string
    latitud?: number | null
    amplitud?: number | null
  }

  export type UbicacionUpdateManyMutationInput = {
    pais?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    amplitud?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type UbicacionUncheckedUpdateManyInput = {
    idubicacion?: IntFieldUpdateOperationsInput | number
    pais?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    amplitud?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type VehiculoCreateInput = {
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    renter?: RenterCreateNestedOneWithoutVehiculosInput
    ubicacion: UbicacionCreateNestedOneWithoutVehiculosInput
    reservas?: ReservaCreateNestedManyWithoutVehiculoInput
    calificaciones?: CalificacionCreateNestedManyWithoutVehiculoInput
  }

  export type VehiculoUncheckedCreateInput = {
    idvehiculo?: number
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    host_idanfitrion: number
    ubicacion_idubicacion: number
    reservas?: ReservaUncheckedCreateNestedManyWithoutVehiculoInput
    calificaciones?: CalificacionUncheckedCreateNestedManyWithoutVehiculoInput
  }

  export type VehiculoUpdateInput = {
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneWithoutVehiculosNestedInput
    ubicacion?: UbicacionUpdateOneRequiredWithoutVehiculosNestedInput
    reservas?: ReservaUpdateManyWithoutVehiculoNestedInput
    calificaciones?: CalificacionUpdateManyWithoutVehiculoNestedInput
  }

  export type VehiculoUncheckedUpdateInput = {
    idvehiculo?: IntFieldUpdateOperationsInput | number
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    host_idanfitrion?: IntFieldUpdateOperationsInput | number
    ubicacion_idubicacion?: IntFieldUpdateOperationsInput | number
    reservas?: ReservaUncheckedUpdateManyWithoutVehiculoNestedInput
    calificaciones?: CalificacionUncheckedUpdateManyWithoutVehiculoNestedInput
  }

  export type VehiculoCreateManyInput = {
    idvehiculo?: number
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    host_idanfitrion: number
    ubicacion_idubicacion: number
  }

  export type VehiculoUpdateManyMutationInput = {
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VehiculoUncheckedUpdateManyInput = {
    idvehiculo?: IntFieldUpdateOperationsInput | number
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    host_idanfitrion?: IntFieldUpdateOperationsInput | number
    ubicacion_idubicacion?: IntFieldUpdateOperationsInput | number
  }

  export type ReservaCreateInput = {
    fecha_inicio: Date | string
    fecha_fin: Date | string
    pagado?: boolean
    estado?: string
    expiracion: Date | string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    renter: RenterCreateNestedOneWithoutReservasInput
    vehiculo: VehiculoCreateNestedOneWithoutReservasInput
    pagos?: PagoCreateNestedManyWithoutReservaInput
  }

  export type ReservaUncheckedCreateInput = {
    idreserva?: number
    fecha_inicio: Date | string
    fecha_fin: Date | string
    pagado?: boolean
    estado?: string
    expiracion: Date | string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    renter_idrenter: number
    vehiculo_idvehiculo: number
    pagos?: PagoUncheckedCreateNestedManyWithoutReservaInput
  }

  export type ReservaUpdateInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    pagado?: BoolFieldUpdateOperationsInput | boolean
    estado?: StringFieldUpdateOperationsInput | string
    expiracion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReservasNestedInput
    vehiculo?: VehiculoUpdateOneRequiredWithoutReservasNestedInput
    pagos?: PagoUpdateManyWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateInput = {
    idreserva?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    pagado?: BoolFieldUpdateOperationsInput | boolean
    estado?: StringFieldUpdateOperationsInput | string
    expiracion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    renter_idrenter?: IntFieldUpdateOperationsInput | number
    vehiculo_idvehiculo?: IntFieldUpdateOperationsInput | number
    pagos?: PagoUncheckedUpdateManyWithoutReservaNestedInput
  }

  export type ReservaCreateManyInput = {
    idreserva?: number
    fecha_inicio: Date | string
    fecha_fin: Date | string
    pagado?: boolean
    estado?: string
    expiracion: Date | string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    renter_idrenter: number
    vehiculo_idvehiculo: number
  }

  export type ReservaUpdateManyMutationInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    pagado?: BoolFieldUpdateOperationsInput | boolean
    estado?: StringFieldUpdateOperationsInput | string
    expiracion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservaUncheckedUpdateManyInput = {
    idreserva?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    pagado?: BoolFieldUpdateOperationsInput | boolean
    estado?: StringFieldUpdateOperationsInput | string
    expiracion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    renter_idrenter?: IntFieldUpdateOperationsInput | number
    vehiculo_idvehiculo?: IntFieldUpdateOperationsInput | number
  }

  export type CalificacionCreateInput = {
    puntuacion: number
    comentario?: string | null
    fecha: Date | string
    renter: RenterCreateNestedOneWithoutCalificacionesInput
    vehiculo: VehiculoCreateNestedOneWithoutCalificacionesInput
  }

  export type CalificacionUncheckedCreateInput = {
    idcalificacion?: number
    puntuacion: number
    comentario?: string | null
    fecha: Date | string
    renter_idrenter: number
    vehiculo_idvehiculo: number
  }

  export type CalificacionUpdateInput = {
    puntuacion?: FloatFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutCalificacionesNestedInput
    vehiculo?: VehiculoUpdateOneRequiredWithoutCalificacionesNestedInput
  }

  export type CalificacionUncheckedUpdateInput = {
    idcalificacion?: IntFieldUpdateOperationsInput | number
    puntuacion?: FloatFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    renter_idrenter?: IntFieldUpdateOperationsInput | number
    vehiculo_idvehiculo?: IntFieldUpdateOperationsInput | number
  }

  export type CalificacionCreateManyInput = {
    idcalificacion?: number
    puntuacion: number
    comentario?: string | null
    fecha: Date | string
    renter_idrenter: number
    vehiculo_idvehiculo: number
  }

  export type CalificacionUpdateManyMutationInput = {
    puntuacion?: FloatFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionUncheckedUpdateManyInput = {
    idcalificacion?: IntFieldUpdateOperationsInput | number
    puntuacion?: FloatFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    renter_idrenter?: IntFieldUpdateOperationsInput | number
    vehiculo_idvehiculo?: IntFieldUpdateOperationsInput | number
  }

  export type HistorialBusquedaCreateInput = {
    termino_busqueda: string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: Date | string
    usuario: UsuarioCreateNestedOneWithoutHistorialBusquedaInput
  }

  export type HistorialBusquedaUncheckedCreateInput = {
    id?: number
    usuario_idusuario: number
    termino_busqueda: string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: Date | string
  }

  export type HistorialBusquedaUpdateInput = {
    termino_busqueda?: StringFieldUpdateOperationsInput | string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutHistorialBusquedaNestedInput
  }

  export type HistorialBusquedaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_idusuario?: IntFieldUpdateOperationsInput | number
    termino_busqueda?: StringFieldUpdateOperationsInput | string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialBusquedaCreateManyInput = {
    id?: number
    usuario_idusuario: number
    termino_busqueda: string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: Date | string
  }

  export type HistorialBusquedaUpdateManyMutationInput = {
    termino_busqueda?: StringFieldUpdateOperationsInput | string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialBusquedaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_idusuario?: IntFieldUpdateOperationsInput | number
    termino_busqueda?: StringFieldUpdateOperationsInput | string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoCreateInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string
    metodo_pago: $Enums.MetodoPago
    referencia: string
    reserva: ReservaCreateNestedOneWithoutPagosInput
    detalles?: DetallePagoCreateNestedManyWithoutPagoInput
  }

  export type PagoUncheckedCreateInput = {
    id?: number
    reserva_idreserva: number
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string
    metodo_pago: $Enums.MetodoPago
    referencia: string
    detalles?: DetallePagoUncheckedCreateNestedManyWithoutPagoInput
  }

  export type PagoUpdateInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    referencia?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutPagosNestedInput
    detalles?: DetallePagoUpdateManyWithoutPagoNestedInput
  }

  export type PagoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    reserva_idreserva?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    referencia?: StringFieldUpdateOperationsInput | string
    detalles?: DetallePagoUncheckedUpdateManyWithoutPagoNestedInput
  }

  export type PagoCreateManyInput = {
    id?: number
    reserva_idreserva: number
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string
    metodo_pago: $Enums.MetodoPago
    referencia: string
  }

  export type PagoUpdateManyMutationInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    referencia?: StringFieldUpdateOperationsInput | string
  }

  export type PagoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    reserva_idreserva?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    referencia?: StringFieldUpdateOperationsInput | string
  }

  export type DetallePagoCreateInput = {
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha_creacion?: Date | string
    pago: PagoCreateNestedOneWithoutDetallesInput
  }

  export type DetallePagoUncheckedCreateInput = {
    iddetalle_pago?: number
    idpago: number
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha_creacion?: Date | string
  }

  export type DetallePagoUpdateInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    pago?: PagoUpdateOneRequiredWithoutDetallesNestedInput
  }

  export type DetallePagoUncheckedUpdateInput = {
    iddetalle_pago?: IntFieldUpdateOperationsInput | number
    idpago?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetallePagoCreateManyInput = {
    iddetalle_pago?: number
    idpago: number
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha_creacion?: Date | string
  }

  export type DetallePagoUpdateManyMutationInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetallePagoUncheckedUpdateManyInput = {
    iddetalle_pago?: IntFieldUpdateOperationsInput | number
    idpago?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type HistorialBusquedaListRelationFilter = {
    every?: HistorialBusquedaWhereInput
    some?: HistorialBusquedaWhereInput
    none?: HistorialBusquedaWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type HistorialBusquedaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    idusuario?: SortOrder
    nombre_completo?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    telefono?: SortOrder
    genero?: SortOrder
    foto_perfil?: SortOrder
    estado?: SortOrder
    fecha_registro?: SortOrder
    ultima_modificacion?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    idusuario?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    idusuario?: SortOrder
    nombre_completo?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    telefono?: SortOrder
    genero?: SortOrder
    foto_perfil?: SortOrder
    estado?: SortOrder
    fecha_registro?: SortOrder
    ultima_modificacion?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    idusuario?: SortOrder
    nombre_completo?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    telefono?: SortOrder
    genero?: SortOrder
    foto_perfil?: SortOrder
    estado?: SortOrder
    fecha_registro?: SortOrder
    ultima_modificacion?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    idusuario?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type ReservaListRelationFilter = {
    every?: ReservaWhereInput
    some?: ReservaWhereInput
    none?: ReservaWhereInput
  }

  export type CalificacionListRelationFilter = {
    every?: CalificacionWhereInput
    some?: CalificacionWhereInput
    none?: CalificacionWhereInput
  }

  export type VehiculoListRelationFilter = {
    every?: VehiculoWhereInput
    some?: VehiculoWhereInput
    none?: VehiculoWhereInput
  }

  export type ReservaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CalificacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VehiculoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RenterCountOrderByAggregateInput = {
    idrenter?: SortOrder
    nombre_completo?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    telefono?: SortOrder
    genero?: SortOrder
    foto_perfil?: SortOrder
    estado?: SortOrder
    fecha_registro?: SortOrder
    ultima_modificacion?: SortOrder
  }

  export type RenterAvgOrderByAggregateInput = {
    idrenter?: SortOrder
  }

  export type RenterMaxOrderByAggregateInput = {
    idrenter?: SortOrder
    nombre_completo?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    telefono?: SortOrder
    genero?: SortOrder
    foto_perfil?: SortOrder
    estado?: SortOrder
    fecha_registro?: SortOrder
    ultima_modificacion?: SortOrder
  }

  export type RenterMinOrderByAggregateInput = {
    idrenter?: SortOrder
    nombre_completo?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    telefono?: SortOrder
    genero?: SortOrder
    foto_perfil?: SortOrder
    estado?: SortOrder
    fecha_registro?: SortOrder
    ultima_modificacion?: SortOrder
  }

  export type RenterSumOrderByAggregateInput = {
    idrenter?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type UbicacionCountOrderByAggregateInput = {
    idubicacion?: SortOrder
    pais?: SortOrder
    ciudad?: SortOrder
    latitud?: SortOrder
    amplitud?: SortOrder
  }

  export type UbicacionAvgOrderByAggregateInput = {
    idubicacion?: SortOrder
    latitud?: SortOrder
    amplitud?: SortOrder
  }

  export type UbicacionMaxOrderByAggregateInput = {
    idubicacion?: SortOrder
    pais?: SortOrder
    ciudad?: SortOrder
    latitud?: SortOrder
    amplitud?: SortOrder
  }

  export type UbicacionMinOrderByAggregateInput = {
    idubicacion?: SortOrder
    pais?: SortOrder
    ciudad?: SortOrder
    latitud?: SortOrder
    amplitud?: SortOrder
  }

  export type UbicacionSumOrderByAggregateInput = {
    idubicacion?: SortOrder
    latitud?: SortOrder
    amplitud?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type RenterNullableScalarRelationFilter = {
    is?: RenterWhereInput | null
    isNot?: RenterWhereInput | null
  }

  export type UbicacionScalarRelationFilter = {
    is?: UbicacionWhereInput
    isNot?: UbicacionWhereInput
  }

  export type VehiculoCountOrderByAggregateInput = {
    idvehiculo?: SortOrder
    imagen?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    tarifa?: SortOrder
    transmision?: SortOrder
    consumo?: SortOrder
    tipo_auto?: SortOrder
    color?: SortOrder
    anio?: SortOrder
    kilometraje?: SortOrder
    placa?: SortOrder
    descripcion?: SortOrder
    disponible?: SortOrder
    estado?: SortOrder
    fecha_creacion?: SortOrder
    ultima_modificacion?: SortOrder
    host_idanfitrion?: SortOrder
    ubicacion_idubicacion?: SortOrder
  }

  export type VehiculoAvgOrderByAggregateInput = {
    idvehiculo?: SortOrder
    tarifa?: SortOrder
    anio?: SortOrder
    kilometraje?: SortOrder
    host_idanfitrion?: SortOrder
    ubicacion_idubicacion?: SortOrder
  }

  export type VehiculoMaxOrderByAggregateInput = {
    idvehiculo?: SortOrder
    imagen?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    tarifa?: SortOrder
    transmision?: SortOrder
    consumo?: SortOrder
    tipo_auto?: SortOrder
    color?: SortOrder
    anio?: SortOrder
    kilometraje?: SortOrder
    placa?: SortOrder
    descripcion?: SortOrder
    disponible?: SortOrder
    estado?: SortOrder
    fecha_creacion?: SortOrder
    ultima_modificacion?: SortOrder
    host_idanfitrion?: SortOrder
    ubicacion_idubicacion?: SortOrder
  }

  export type VehiculoMinOrderByAggregateInput = {
    idvehiculo?: SortOrder
    imagen?: SortOrder
    marca?: SortOrder
    modelo?: SortOrder
    tarifa?: SortOrder
    transmision?: SortOrder
    consumo?: SortOrder
    tipo_auto?: SortOrder
    color?: SortOrder
    anio?: SortOrder
    kilometraje?: SortOrder
    placa?: SortOrder
    descripcion?: SortOrder
    disponible?: SortOrder
    estado?: SortOrder
    fecha_creacion?: SortOrder
    ultima_modificacion?: SortOrder
    host_idanfitrion?: SortOrder
    ubicacion_idubicacion?: SortOrder
  }

  export type VehiculoSumOrderByAggregateInput = {
    idvehiculo?: SortOrder
    tarifa?: SortOrder
    anio?: SortOrder
    kilometraje?: SortOrder
    host_idanfitrion?: SortOrder
    ubicacion_idubicacion?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type RenterScalarRelationFilter = {
    is?: RenterWhereInput
    isNot?: RenterWhereInput
  }

  export type VehiculoScalarRelationFilter = {
    is?: VehiculoWhereInput
    isNot?: VehiculoWhereInput
  }

  export type PagoListRelationFilter = {
    every?: PagoWhereInput
    some?: PagoWhereInput
    none?: PagoWhereInput
  }

  export type PagoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservaCountOrderByAggregateInput = {
    idreserva?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    pagado?: SortOrder
    estado?: SortOrder
    expiracion?: SortOrder
    fecha_creacion?: SortOrder
    ultima_modificacion?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
  }

  export type ReservaAvgOrderByAggregateInput = {
    idreserva?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
  }

  export type ReservaMaxOrderByAggregateInput = {
    idreserva?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    pagado?: SortOrder
    estado?: SortOrder
    expiracion?: SortOrder
    fecha_creacion?: SortOrder
    ultima_modificacion?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
  }

  export type ReservaMinOrderByAggregateInput = {
    idreserva?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    pagado?: SortOrder
    estado?: SortOrder
    expiracion?: SortOrder
    fecha_creacion?: SortOrder
    ultima_modificacion?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
  }

  export type ReservaSumOrderByAggregateInput = {
    idreserva?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type CalificacionCountOrderByAggregateInput = {
    idcalificacion?: SortOrder
    puntuacion?: SortOrder
    comentario?: SortOrder
    fecha?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
  }

  export type CalificacionAvgOrderByAggregateInput = {
    idcalificacion?: SortOrder
    puntuacion?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
  }

  export type CalificacionMaxOrderByAggregateInput = {
    idcalificacion?: SortOrder
    puntuacion?: SortOrder
    comentario?: SortOrder
    fecha?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
  }

  export type CalificacionMinOrderByAggregateInput = {
    idcalificacion?: SortOrder
    puntuacion?: SortOrder
    comentario?: SortOrder
    fecha?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
  }

  export type CalificacionSumOrderByAggregateInput = {
    idcalificacion?: SortOrder
    puntuacion?: SortOrder
    renter_idrenter?: SortOrder
    vehiculo_idvehiculo?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type HistorialBusquedaCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_idusuario?: SortOrder
    termino_busqueda?: SortOrder
    filtros?: SortOrder
    creado_en?: SortOrder
  }

  export type HistorialBusquedaAvgOrderByAggregateInput = {
    id?: SortOrder
    usuario_idusuario?: SortOrder
  }

  export type HistorialBusquedaMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_idusuario?: SortOrder
    termino_busqueda?: SortOrder
    creado_en?: SortOrder
  }

  export type HistorialBusquedaMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_idusuario?: SortOrder
    termino_busqueda?: SortOrder
    creado_en?: SortOrder
  }

  export type HistorialBusquedaSumOrderByAggregateInput = {
    id?: SortOrder
    usuario_idusuario?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type EnumMetodoPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoFilter<$PrismaModel> | $Enums.MetodoPago
  }

  export type ReservaScalarRelationFilter = {
    is?: ReservaWhereInput
    isNot?: ReservaWhereInput
  }

  export type DetallePagoListRelationFilter = {
    every?: DetallePagoWhereInput
    some?: DetallePagoWhereInput
    none?: DetallePagoWhereInput
  }

  export type DetallePagoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PagoCountOrderByAggregateInput = {
    id?: SortOrder
    reserva_idreserva?: SortOrder
    monto?: SortOrder
    fecha_pago?: SortOrder
    metodo_pago?: SortOrder
    referencia?: SortOrder
  }

  export type PagoAvgOrderByAggregateInput = {
    id?: SortOrder
    reserva_idreserva?: SortOrder
    monto?: SortOrder
  }

  export type PagoMaxOrderByAggregateInput = {
    id?: SortOrder
    reserva_idreserva?: SortOrder
    monto?: SortOrder
    fecha_pago?: SortOrder
    metodo_pago?: SortOrder
    referencia?: SortOrder
  }

  export type PagoMinOrderByAggregateInput = {
    id?: SortOrder
    reserva_idreserva?: SortOrder
    monto?: SortOrder
    fecha_pago?: SortOrder
    metodo_pago?: SortOrder
    referencia?: SortOrder
  }

  export type PagoSumOrderByAggregateInput = {
    id?: SortOrder
    reserva_idreserva?: SortOrder
    monto?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumMetodoPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoWithAggregatesFilter<$PrismaModel> | $Enums.MetodoPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMetodoPagoFilter<$PrismaModel>
    _max?: NestedEnumMetodoPagoFilter<$PrismaModel>
  }

  export type PagoScalarRelationFilter = {
    is?: PagoWhereInput
    isNot?: PagoWhereInput
  }

  export type DetallePagoCountOrderByAggregateInput = {
    iddetalle_pago?: SortOrder
    idpago?: SortOrder
    concepto?: SortOrder
    monto?: SortOrder
    fecha_creacion?: SortOrder
  }

  export type DetallePagoAvgOrderByAggregateInput = {
    iddetalle_pago?: SortOrder
    idpago?: SortOrder
    monto?: SortOrder
  }

  export type DetallePagoMaxOrderByAggregateInput = {
    iddetalle_pago?: SortOrder
    idpago?: SortOrder
    concepto?: SortOrder
    monto?: SortOrder
    fecha_creacion?: SortOrder
  }

  export type DetallePagoMinOrderByAggregateInput = {
    iddetalle_pago?: SortOrder
    idpago?: SortOrder
    concepto?: SortOrder
    monto?: SortOrder
    fecha_creacion?: SortOrder
  }

  export type DetallePagoSumOrderByAggregateInput = {
    iddetalle_pago?: SortOrder
    idpago?: SortOrder
    monto?: SortOrder
  }

  export type HistorialBusquedaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<HistorialBusquedaCreateWithoutUsuarioInput, HistorialBusquedaUncheckedCreateWithoutUsuarioInput> | HistorialBusquedaCreateWithoutUsuarioInput[] | HistorialBusquedaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialBusquedaCreateOrConnectWithoutUsuarioInput | HistorialBusquedaCreateOrConnectWithoutUsuarioInput[]
    createMany?: HistorialBusquedaCreateManyUsuarioInputEnvelope
    connect?: HistorialBusquedaWhereUniqueInput | HistorialBusquedaWhereUniqueInput[]
  }

  export type HistorialBusquedaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<HistorialBusquedaCreateWithoutUsuarioInput, HistorialBusquedaUncheckedCreateWithoutUsuarioInput> | HistorialBusquedaCreateWithoutUsuarioInput[] | HistorialBusquedaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialBusquedaCreateOrConnectWithoutUsuarioInput | HistorialBusquedaCreateOrConnectWithoutUsuarioInput[]
    createMany?: HistorialBusquedaCreateManyUsuarioInputEnvelope
    connect?: HistorialBusquedaWhereUniqueInput | HistorialBusquedaWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type HistorialBusquedaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<HistorialBusquedaCreateWithoutUsuarioInput, HistorialBusquedaUncheckedCreateWithoutUsuarioInput> | HistorialBusquedaCreateWithoutUsuarioInput[] | HistorialBusquedaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialBusquedaCreateOrConnectWithoutUsuarioInput | HistorialBusquedaCreateOrConnectWithoutUsuarioInput[]
    upsert?: HistorialBusquedaUpsertWithWhereUniqueWithoutUsuarioInput | HistorialBusquedaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: HistorialBusquedaCreateManyUsuarioInputEnvelope
    set?: HistorialBusquedaWhereUniqueInput | HistorialBusquedaWhereUniqueInput[]
    disconnect?: HistorialBusquedaWhereUniqueInput | HistorialBusquedaWhereUniqueInput[]
    delete?: HistorialBusquedaWhereUniqueInput | HistorialBusquedaWhereUniqueInput[]
    connect?: HistorialBusquedaWhereUniqueInput | HistorialBusquedaWhereUniqueInput[]
    update?: HistorialBusquedaUpdateWithWhereUniqueWithoutUsuarioInput | HistorialBusquedaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: HistorialBusquedaUpdateManyWithWhereWithoutUsuarioInput | HistorialBusquedaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: HistorialBusquedaScalarWhereInput | HistorialBusquedaScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type HistorialBusquedaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<HistorialBusquedaCreateWithoutUsuarioInput, HistorialBusquedaUncheckedCreateWithoutUsuarioInput> | HistorialBusquedaCreateWithoutUsuarioInput[] | HistorialBusquedaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: HistorialBusquedaCreateOrConnectWithoutUsuarioInput | HistorialBusquedaCreateOrConnectWithoutUsuarioInput[]
    upsert?: HistorialBusquedaUpsertWithWhereUniqueWithoutUsuarioInput | HistorialBusquedaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: HistorialBusquedaCreateManyUsuarioInputEnvelope
    set?: HistorialBusquedaWhereUniqueInput | HistorialBusquedaWhereUniqueInput[]
    disconnect?: HistorialBusquedaWhereUniqueInput | HistorialBusquedaWhereUniqueInput[]
    delete?: HistorialBusquedaWhereUniqueInput | HistorialBusquedaWhereUniqueInput[]
    connect?: HistorialBusquedaWhereUniqueInput | HistorialBusquedaWhereUniqueInput[]
    update?: HistorialBusquedaUpdateWithWhereUniqueWithoutUsuarioInput | HistorialBusquedaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: HistorialBusquedaUpdateManyWithWhereWithoutUsuarioInput | HistorialBusquedaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: HistorialBusquedaScalarWhereInput | HistorialBusquedaScalarWhereInput[]
  }

  export type ReservaCreateNestedManyWithoutRenterInput = {
    create?: XOR<ReservaCreateWithoutRenterInput, ReservaUncheckedCreateWithoutRenterInput> | ReservaCreateWithoutRenterInput[] | ReservaUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutRenterInput | ReservaCreateOrConnectWithoutRenterInput[]
    createMany?: ReservaCreateManyRenterInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type CalificacionCreateNestedManyWithoutRenterInput = {
    create?: XOR<CalificacionCreateWithoutRenterInput, CalificacionUncheckedCreateWithoutRenterInput> | CalificacionCreateWithoutRenterInput[] | CalificacionUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: CalificacionCreateOrConnectWithoutRenterInput | CalificacionCreateOrConnectWithoutRenterInput[]
    createMany?: CalificacionCreateManyRenterInputEnvelope
    connect?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
  }

  export type VehiculoCreateNestedManyWithoutRenterInput = {
    create?: XOR<VehiculoCreateWithoutRenterInput, VehiculoUncheckedCreateWithoutRenterInput> | VehiculoCreateWithoutRenterInput[] | VehiculoUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: VehiculoCreateOrConnectWithoutRenterInput | VehiculoCreateOrConnectWithoutRenterInput[]
    createMany?: VehiculoCreateManyRenterInputEnvelope
    connect?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
  }

  export type ReservaUncheckedCreateNestedManyWithoutRenterInput = {
    create?: XOR<ReservaCreateWithoutRenterInput, ReservaUncheckedCreateWithoutRenterInput> | ReservaCreateWithoutRenterInput[] | ReservaUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutRenterInput | ReservaCreateOrConnectWithoutRenterInput[]
    createMany?: ReservaCreateManyRenterInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type CalificacionUncheckedCreateNestedManyWithoutRenterInput = {
    create?: XOR<CalificacionCreateWithoutRenterInput, CalificacionUncheckedCreateWithoutRenterInput> | CalificacionCreateWithoutRenterInput[] | CalificacionUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: CalificacionCreateOrConnectWithoutRenterInput | CalificacionCreateOrConnectWithoutRenterInput[]
    createMany?: CalificacionCreateManyRenterInputEnvelope
    connect?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
  }

  export type VehiculoUncheckedCreateNestedManyWithoutRenterInput = {
    create?: XOR<VehiculoCreateWithoutRenterInput, VehiculoUncheckedCreateWithoutRenterInput> | VehiculoCreateWithoutRenterInput[] | VehiculoUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: VehiculoCreateOrConnectWithoutRenterInput | VehiculoCreateOrConnectWithoutRenterInput[]
    createMany?: VehiculoCreateManyRenterInputEnvelope
    connect?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
  }

  export type ReservaUpdateManyWithoutRenterNestedInput = {
    create?: XOR<ReservaCreateWithoutRenterInput, ReservaUncheckedCreateWithoutRenterInput> | ReservaCreateWithoutRenterInput[] | ReservaUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutRenterInput | ReservaCreateOrConnectWithoutRenterInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutRenterInput | ReservaUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: ReservaCreateManyRenterInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutRenterInput | ReservaUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutRenterInput | ReservaUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type CalificacionUpdateManyWithoutRenterNestedInput = {
    create?: XOR<CalificacionCreateWithoutRenterInput, CalificacionUncheckedCreateWithoutRenterInput> | CalificacionCreateWithoutRenterInput[] | CalificacionUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: CalificacionCreateOrConnectWithoutRenterInput | CalificacionCreateOrConnectWithoutRenterInput[]
    upsert?: CalificacionUpsertWithWhereUniqueWithoutRenterInput | CalificacionUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: CalificacionCreateManyRenterInputEnvelope
    set?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    disconnect?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    delete?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    connect?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    update?: CalificacionUpdateWithWhereUniqueWithoutRenterInput | CalificacionUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: CalificacionUpdateManyWithWhereWithoutRenterInput | CalificacionUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: CalificacionScalarWhereInput | CalificacionScalarWhereInput[]
  }

  export type VehiculoUpdateManyWithoutRenterNestedInput = {
    create?: XOR<VehiculoCreateWithoutRenterInput, VehiculoUncheckedCreateWithoutRenterInput> | VehiculoCreateWithoutRenterInput[] | VehiculoUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: VehiculoCreateOrConnectWithoutRenterInput | VehiculoCreateOrConnectWithoutRenterInput[]
    upsert?: VehiculoUpsertWithWhereUniqueWithoutRenterInput | VehiculoUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: VehiculoCreateManyRenterInputEnvelope
    set?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    disconnect?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    delete?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    connect?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    update?: VehiculoUpdateWithWhereUniqueWithoutRenterInput | VehiculoUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: VehiculoUpdateManyWithWhereWithoutRenterInput | VehiculoUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: VehiculoScalarWhereInput | VehiculoScalarWhereInput[]
  }

  export type ReservaUncheckedUpdateManyWithoutRenterNestedInput = {
    create?: XOR<ReservaCreateWithoutRenterInput, ReservaUncheckedCreateWithoutRenterInput> | ReservaCreateWithoutRenterInput[] | ReservaUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutRenterInput | ReservaCreateOrConnectWithoutRenterInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutRenterInput | ReservaUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: ReservaCreateManyRenterInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutRenterInput | ReservaUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutRenterInput | ReservaUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type CalificacionUncheckedUpdateManyWithoutRenterNestedInput = {
    create?: XOR<CalificacionCreateWithoutRenterInput, CalificacionUncheckedCreateWithoutRenterInput> | CalificacionCreateWithoutRenterInput[] | CalificacionUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: CalificacionCreateOrConnectWithoutRenterInput | CalificacionCreateOrConnectWithoutRenterInput[]
    upsert?: CalificacionUpsertWithWhereUniqueWithoutRenterInput | CalificacionUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: CalificacionCreateManyRenterInputEnvelope
    set?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    disconnect?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    delete?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    connect?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    update?: CalificacionUpdateWithWhereUniqueWithoutRenterInput | CalificacionUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: CalificacionUpdateManyWithWhereWithoutRenterInput | CalificacionUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: CalificacionScalarWhereInput | CalificacionScalarWhereInput[]
  }

  export type VehiculoUncheckedUpdateManyWithoutRenterNestedInput = {
    create?: XOR<VehiculoCreateWithoutRenterInput, VehiculoUncheckedCreateWithoutRenterInput> | VehiculoCreateWithoutRenterInput[] | VehiculoUncheckedCreateWithoutRenterInput[]
    connectOrCreate?: VehiculoCreateOrConnectWithoutRenterInput | VehiculoCreateOrConnectWithoutRenterInput[]
    upsert?: VehiculoUpsertWithWhereUniqueWithoutRenterInput | VehiculoUpsertWithWhereUniqueWithoutRenterInput[]
    createMany?: VehiculoCreateManyRenterInputEnvelope
    set?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    disconnect?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    delete?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    connect?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    update?: VehiculoUpdateWithWhereUniqueWithoutRenterInput | VehiculoUpdateWithWhereUniqueWithoutRenterInput[]
    updateMany?: VehiculoUpdateManyWithWhereWithoutRenterInput | VehiculoUpdateManyWithWhereWithoutRenterInput[]
    deleteMany?: VehiculoScalarWhereInput | VehiculoScalarWhereInput[]
  }

  export type VehiculoCreateNestedManyWithoutUbicacionInput = {
    create?: XOR<VehiculoCreateWithoutUbicacionInput, VehiculoUncheckedCreateWithoutUbicacionInput> | VehiculoCreateWithoutUbicacionInput[] | VehiculoUncheckedCreateWithoutUbicacionInput[]
    connectOrCreate?: VehiculoCreateOrConnectWithoutUbicacionInput | VehiculoCreateOrConnectWithoutUbicacionInput[]
    createMany?: VehiculoCreateManyUbicacionInputEnvelope
    connect?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
  }

  export type VehiculoUncheckedCreateNestedManyWithoutUbicacionInput = {
    create?: XOR<VehiculoCreateWithoutUbicacionInput, VehiculoUncheckedCreateWithoutUbicacionInput> | VehiculoCreateWithoutUbicacionInput[] | VehiculoUncheckedCreateWithoutUbicacionInput[]
    connectOrCreate?: VehiculoCreateOrConnectWithoutUbicacionInput | VehiculoCreateOrConnectWithoutUbicacionInput[]
    createMany?: VehiculoCreateManyUbicacionInputEnvelope
    connect?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type VehiculoUpdateManyWithoutUbicacionNestedInput = {
    create?: XOR<VehiculoCreateWithoutUbicacionInput, VehiculoUncheckedCreateWithoutUbicacionInput> | VehiculoCreateWithoutUbicacionInput[] | VehiculoUncheckedCreateWithoutUbicacionInput[]
    connectOrCreate?: VehiculoCreateOrConnectWithoutUbicacionInput | VehiculoCreateOrConnectWithoutUbicacionInput[]
    upsert?: VehiculoUpsertWithWhereUniqueWithoutUbicacionInput | VehiculoUpsertWithWhereUniqueWithoutUbicacionInput[]
    createMany?: VehiculoCreateManyUbicacionInputEnvelope
    set?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    disconnect?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    delete?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    connect?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    update?: VehiculoUpdateWithWhereUniqueWithoutUbicacionInput | VehiculoUpdateWithWhereUniqueWithoutUbicacionInput[]
    updateMany?: VehiculoUpdateManyWithWhereWithoutUbicacionInput | VehiculoUpdateManyWithWhereWithoutUbicacionInput[]
    deleteMany?: VehiculoScalarWhereInput | VehiculoScalarWhereInput[]
  }

  export type VehiculoUncheckedUpdateManyWithoutUbicacionNestedInput = {
    create?: XOR<VehiculoCreateWithoutUbicacionInput, VehiculoUncheckedCreateWithoutUbicacionInput> | VehiculoCreateWithoutUbicacionInput[] | VehiculoUncheckedCreateWithoutUbicacionInput[]
    connectOrCreate?: VehiculoCreateOrConnectWithoutUbicacionInput | VehiculoCreateOrConnectWithoutUbicacionInput[]
    upsert?: VehiculoUpsertWithWhereUniqueWithoutUbicacionInput | VehiculoUpsertWithWhereUniqueWithoutUbicacionInput[]
    createMany?: VehiculoCreateManyUbicacionInputEnvelope
    set?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    disconnect?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    delete?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    connect?: VehiculoWhereUniqueInput | VehiculoWhereUniqueInput[]
    update?: VehiculoUpdateWithWhereUniqueWithoutUbicacionInput | VehiculoUpdateWithWhereUniqueWithoutUbicacionInput[]
    updateMany?: VehiculoUpdateManyWithWhereWithoutUbicacionInput | VehiculoUpdateManyWithWhereWithoutUbicacionInput[]
    deleteMany?: VehiculoScalarWhereInput | VehiculoScalarWhereInput[]
  }

  export type RenterCreateNestedOneWithoutVehiculosInput = {
    create?: XOR<RenterCreateWithoutVehiculosInput, RenterUncheckedCreateWithoutVehiculosInput>
    connectOrCreate?: RenterCreateOrConnectWithoutVehiculosInput
    connect?: RenterWhereUniqueInput
  }

  export type UbicacionCreateNestedOneWithoutVehiculosInput = {
    create?: XOR<UbicacionCreateWithoutVehiculosInput, UbicacionUncheckedCreateWithoutVehiculosInput>
    connectOrCreate?: UbicacionCreateOrConnectWithoutVehiculosInput
    connect?: UbicacionWhereUniqueInput
  }

  export type ReservaCreateNestedManyWithoutVehiculoInput = {
    create?: XOR<ReservaCreateWithoutVehiculoInput, ReservaUncheckedCreateWithoutVehiculoInput> | ReservaCreateWithoutVehiculoInput[] | ReservaUncheckedCreateWithoutVehiculoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutVehiculoInput | ReservaCreateOrConnectWithoutVehiculoInput[]
    createMany?: ReservaCreateManyVehiculoInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type CalificacionCreateNestedManyWithoutVehiculoInput = {
    create?: XOR<CalificacionCreateWithoutVehiculoInput, CalificacionUncheckedCreateWithoutVehiculoInput> | CalificacionCreateWithoutVehiculoInput[] | CalificacionUncheckedCreateWithoutVehiculoInput[]
    connectOrCreate?: CalificacionCreateOrConnectWithoutVehiculoInput | CalificacionCreateOrConnectWithoutVehiculoInput[]
    createMany?: CalificacionCreateManyVehiculoInputEnvelope
    connect?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
  }

  export type ReservaUncheckedCreateNestedManyWithoutVehiculoInput = {
    create?: XOR<ReservaCreateWithoutVehiculoInput, ReservaUncheckedCreateWithoutVehiculoInput> | ReservaCreateWithoutVehiculoInput[] | ReservaUncheckedCreateWithoutVehiculoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutVehiculoInput | ReservaCreateOrConnectWithoutVehiculoInput[]
    createMany?: ReservaCreateManyVehiculoInputEnvelope
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
  }

  export type CalificacionUncheckedCreateNestedManyWithoutVehiculoInput = {
    create?: XOR<CalificacionCreateWithoutVehiculoInput, CalificacionUncheckedCreateWithoutVehiculoInput> | CalificacionCreateWithoutVehiculoInput[] | CalificacionUncheckedCreateWithoutVehiculoInput[]
    connectOrCreate?: CalificacionCreateOrConnectWithoutVehiculoInput | CalificacionCreateOrConnectWithoutVehiculoInput[]
    createMany?: CalificacionCreateManyVehiculoInputEnvelope
    connect?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type RenterUpdateOneWithoutVehiculosNestedInput = {
    create?: XOR<RenterCreateWithoutVehiculosInput, RenterUncheckedCreateWithoutVehiculosInput>
    connectOrCreate?: RenterCreateOrConnectWithoutVehiculosInput
    upsert?: RenterUpsertWithoutVehiculosInput
    disconnect?: RenterWhereInput | boolean
    delete?: RenterWhereInput | boolean
    connect?: RenterWhereUniqueInput
    update?: XOR<XOR<RenterUpdateToOneWithWhereWithoutVehiculosInput, RenterUpdateWithoutVehiculosInput>, RenterUncheckedUpdateWithoutVehiculosInput>
  }

  export type UbicacionUpdateOneRequiredWithoutVehiculosNestedInput = {
    create?: XOR<UbicacionCreateWithoutVehiculosInput, UbicacionUncheckedCreateWithoutVehiculosInput>
    connectOrCreate?: UbicacionCreateOrConnectWithoutVehiculosInput
    upsert?: UbicacionUpsertWithoutVehiculosInput
    connect?: UbicacionWhereUniqueInput
    update?: XOR<XOR<UbicacionUpdateToOneWithWhereWithoutVehiculosInput, UbicacionUpdateWithoutVehiculosInput>, UbicacionUncheckedUpdateWithoutVehiculosInput>
  }

  export type ReservaUpdateManyWithoutVehiculoNestedInput = {
    create?: XOR<ReservaCreateWithoutVehiculoInput, ReservaUncheckedCreateWithoutVehiculoInput> | ReservaCreateWithoutVehiculoInput[] | ReservaUncheckedCreateWithoutVehiculoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutVehiculoInput | ReservaCreateOrConnectWithoutVehiculoInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutVehiculoInput | ReservaUpsertWithWhereUniqueWithoutVehiculoInput[]
    createMany?: ReservaCreateManyVehiculoInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutVehiculoInput | ReservaUpdateWithWhereUniqueWithoutVehiculoInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutVehiculoInput | ReservaUpdateManyWithWhereWithoutVehiculoInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type CalificacionUpdateManyWithoutVehiculoNestedInput = {
    create?: XOR<CalificacionCreateWithoutVehiculoInput, CalificacionUncheckedCreateWithoutVehiculoInput> | CalificacionCreateWithoutVehiculoInput[] | CalificacionUncheckedCreateWithoutVehiculoInput[]
    connectOrCreate?: CalificacionCreateOrConnectWithoutVehiculoInput | CalificacionCreateOrConnectWithoutVehiculoInput[]
    upsert?: CalificacionUpsertWithWhereUniqueWithoutVehiculoInput | CalificacionUpsertWithWhereUniqueWithoutVehiculoInput[]
    createMany?: CalificacionCreateManyVehiculoInputEnvelope
    set?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    disconnect?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    delete?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    connect?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    update?: CalificacionUpdateWithWhereUniqueWithoutVehiculoInput | CalificacionUpdateWithWhereUniqueWithoutVehiculoInput[]
    updateMany?: CalificacionUpdateManyWithWhereWithoutVehiculoInput | CalificacionUpdateManyWithWhereWithoutVehiculoInput[]
    deleteMany?: CalificacionScalarWhereInput | CalificacionScalarWhereInput[]
  }

  export type ReservaUncheckedUpdateManyWithoutVehiculoNestedInput = {
    create?: XOR<ReservaCreateWithoutVehiculoInput, ReservaUncheckedCreateWithoutVehiculoInput> | ReservaCreateWithoutVehiculoInput[] | ReservaUncheckedCreateWithoutVehiculoInput[]
    connectOrCreate?: ReservaCreateOrConnectWithoutVehiculoInput | ReservaCreateOrConnectWithoutVehiculoInput[]
    upsert?: ReservaUpsertWithWhereUniqueWithoutVehiculoInput | ReservaUpsertWithWhereUniqueWithoutVehiculoInput[]
    createMany?: ReservaCreateManyVehiculoInputEnvelope
    set?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    disconnect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    delete?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    connect?: ReservaWhereUniqueInput | ReservaWhereUniqueInput[]
    update?: ReservaUpdateWithWhereUniqueWithoutVehiculoInput | ReservaUpdateWithWhereUniqueWithoutVehiculoInput[]
    updateMany?: ReservaUpdateManyWithWhereWithoutVehiculoInput | ReservaUpdateManyWithWhereWithoutVehiculoInput[]
    deleteMany?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
  }

  export type CalificacionUncheckedUpdateManyWithoutVehiculoNestedInput = {
    create?: XOR<CalificacionCreateWithoutVehiculoInput, CalificacionUncheckedCreateWithoutVehiculoInput> | CalificacionCreateWithoutVehiculoInput[] | CalificacionUncheckedCreateWithoutVehiculoInput[]
    connectOrCreate?: CalificacionCreateOrConnectWithoutVehiculoInput | CalificacionCreateOrConnectWithoutVehiculoInput[]
    upsert?: CalificacionUpsertWithWhereUniqueWithoutVehiculoInput | CalificacionUpsertWithWhereUniqueWithoutVehiculoInput[]
    createMany?: CalificacionCreateManyVehiculoInputEnvelope
    set?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    disconnect?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    delete?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    connect?: CalificacionWhereUniqueInput | CalificacionWhereUniqueInput[]
    update?: CalificacionUpdateWithWhereUniqueWithoutVehiculoInput | CalificacionUpdateWithWhereUniqueWithoutVehiculoInput[]
    updateMany?: CalificacionUpdateManyWithWhereWithoutVehiculoInput | CalificacionUpdateManyWithWhereWithoutVehiculoInput[]
    deleteMany?: CalificacionScalarWhereInput | CalificacionScalarWhereInput[]
  }

  export type RenterCreateNestedOneWithoutReservasInput = {
    create?: XOR<RenterCreateWithoutReservasInput, RenterUncheckedCreateWithoutReservasInput>
    connectOrCreate?: RenterCreateOrConnectWithoutReservasInput
    connect?: RenterWhereUniqueInput
  }

  export type VehiculoCreateNestedOneWithoutReservasInput = {
    create?: XOR<VehiculoCreateWithoutReservasInput, VehiculoUncheckedCreateWithoutReservasInput>
    connectOrCreate?: VehiculoCreateOrConnectWithoutReservasInput
    connect?: VehiculoWhereUniqueInput
  }

  export type PagoCreateNestedManyWithoutReservaInput = {
    create?: XOR<PagoCreateWithoutReservaInput, PagoUncheckedCreateWithoutReservaInput> | PagoCreateWithoutReservaInput[] | PagoUncheckedCreateWithoutReservaInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutReservaInput | PagoCreateOrConnectWithoutReservaInput[]
    createMany?: PagoCreateManyReservaInputEnvelope
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
  }

  export type PagoUncheckedCreateNestedManyWithoutReservaInput = {
    create?: XOR<PagoCreateWithoutReservaInput, PagoUncheckedCreateWithoutReservaInput> | PagoCreateWithoutReservaInput[] | PagoUncheckedCreateWithoutReservaInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutReservaInput | PagoCreateOrConnectWithoutReservaInput[]
    createMany?: PagoCreateManyReservaInputEnvelope
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type RenterUpdateOneRequiredWithoutReservasNestedInput = {
    create?: XOR<RenterCreateWithoutReservasInput, RenterUncheckedCreateWithoutReservasInput>
    connectOrCreate?: RenterCreateOrConnectWithoutReservasInput
    upsert?: RenterUpsertWithoutReservasInput
    connect?: RenterWhereUniqueInput
    update?: XOR<XOR<RenterUpdateToOneWithWhereWithoutReservasInput, RenterUpdateWithoutReservasInput>, RenterUncheckedUpdateWithoutReservasInput>
  }

  export type VehiculoUpdateOneRequiredWithoutReservasNestedInput = {
    create?: XOR<VehiculoCreateWithoutReservasInput, VehiculoUncheckedCreateWithoutReservasInput>
    connectOrCreate?: VehiculoCreateOrConnectWithoutReservasInput
    upsert?: VehiculoUpsertWithoutReservasInput
    connect?: VehiculoWhereUniqueInput
    update?: XOR<XOR<VehiculoUpdateToOneWithWhereWithoutReservasInput, VehiculoUpdateWithoutReservasInput>, VehiculoUncheckedUpdateWithoutReservasInput>
  }

  export type PagoUpdateManyWithoutReservaNestedInput = {
    create?: XOR<PagoCreateWithoutReservaInput, PagoUncheckedCreateWithoutReservaInput> | PagoCreateWithoutReservaInput[] | PagoUncheckedCreateWithoutReservaInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutReservaInput | PagoCreateOrConnectWithoutReservaInput[]
    upsert?: PagoUpsertWithWhereUniqueWithoutReservaInput | PagoUpsertWithWhereUniqueWithoutReservaInput[]
    createMany?: PagoCreateManyReservaInputEnvelope
    set?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    disconnect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    delete?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    update?: PagoUpdateWithWhereUniqueWithoutReservaInput | PagoUpdateWithWhereUniqueWithoutReservaInput[]
    updateMany?: PagoUpdateManyWithWhereWithoutReservaInput | PagoUpdateManyWithWhereWithoutReservaInput[]
    deleteMany?: PagoScalarWhereInput | PagoScalarWhereInput[]
  }

  export type PagoUncheckedUpdateManyWithoutReservaNestedInput = {
    create?: XOR<PagoCreateWithoutReservaInput, PagoUncheckedCreateWithoutReservaInput> | PagoCreateWithoutReservaInput[] | PagoUncheckedCreateWithoutReservaInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutReservaInput | PagoCreateOrConnectWithoutReservaInput[]
    upsert?: PagoUpsertWithWhereUniqueWithoutReservaInput | PagoUpsertWithWhereUniqueWithoutReservaInput[]
    createMany?: PagoCreateManyReservaInputEnvelope
    set?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    disconnect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    delete?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    update?: PagoUpdateWithWhereUniqueWithoutReservaInput | PagoUpdateWithWhereUniqueWithoutReservaInput[]
    updateMany?: PagoUpdateManyWithWhereWithoutReservaInput | PagoUpdateManyWithWhereWithoutReservaInput[]
    deleteMany?: PagoScalarWhereInput | PagoScalarWhereInput[]
  }

  export type RenterCreateNestedOneWithoutCalificacionesInput = {
    create?: XOR<RenterCreateWithoutCalificacionesInput, RenterUncheckedCreateWithoutCalificacionesInput>
    connectOrCreate?: RenterCreateOrConnectWithoutCalificacionesInput
    connect?: RenterWhereUniqueInput
  }

  export type VehiculoCreateNestedOneWithoutCalificacionesInput = {
    create?: XOR<VehiculoCreateWithoutCalificacionesInput, VehiculoUncheckedCreateWithoutCalificacionesInput>
    connectOrCreate?: VehiculoCreateOrConnectWithoutCalificacionesInput
    connect?: VehiculoWhereUniqueInput
  }

  export type RenterUpdateOneRequiredWithoutCalificacionesNestedInput = {
    create?: XOR<RenterCreateWithoutCalificacionesInput, RenterUncheckedCreateWithoutCalificacionesInput>
    connectOrCreate?: RenterCreateOrConnectWithoutCalificacionesInput
    upsert?: RenterUpsertWithoutCalificacionesInput
    connect?: RenterWhereUniqueInput
    update?: XOR<XOR<RenterUpdateToOneWithWhereWithoutCalificacionesInput, RenterUpdateWithoutCalificacionesInput>, RenterUncheckedUpdateWithoutCalificacionesInput>
  }

  export type VehiculoUpdateOneRequiredWithoutCalificacionesNestedInput = {
    create?: XOR<VehiculoCreateWithoutCalificacionesInput, VehiculoUncheckedCreateWithoutCalificacionesInput>
    connectOrCreate?: VehiculoCreateOrConnectWithoutCalificacionesInput
    upsert?: VehiculoUpsertWithoutCalificacionesInput
    connect?: VehiculoWhereUniqueInput
    update?: XOR<XOR<VehiculoUpdateToOneWithWhereWithoutCalificacionesInput, VehiculoUpdateWithoutCalificacionesInput>, VehiculoUncheckedUpdateWithoutCalificacionesInput>
  }

  export type UsuarioCreateNestedOneWithoutHistorialBusquedaInput = {
    create?: XOR<UsuarioCreateWithoutHistorialBusquedaInput, UsuarioUncheckedCreateWithoutHistorialBusquedaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutHistorialBusquedaInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutHistorialBusquedaNestedInput = {
    create?: XOR<UsuarioCreateWithoutHistorialBusquedaInput, UsuarioUncheckedCreateWithoutHistorialBusquedaInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutHistorialBusquedaInput
    upsert?: UsuarioUpsertWithoutHistorialBusquedaInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutHistorialBusquedaInput, UsuarioUpdateWithoutHistorialBusquedaInput>, UsuarioUncheckedUpdateWithoutHistorialBusquedaInput>
  }

  export type ReservaCreateNestedOneWithoutPagosInput = {
    create?: XOR<ReservaCreateWithoutPagosInput, ReservaUncheckedCreateWithoutPagosInput>
    connectOrCreate?: ReservaCreateOrConnectWithoutPagosInput
    connect?: ReservaWhereUniqueInput
  }

  export type DetallePagoCreateNestedManyWithoutPagoInput = {
    create?: XOR<DetallePagoCreateWithoutPagoInput, DetallePagoUncheckedCreateWithoutPagoInput> | DetallePagoCreateWithoutPagoInput[] | DetallePagoUncheckedCreateWithoutPagoInput[]
    connectOrCreate?: DetallePagoCreateOrConnectWithoutPagoInput | DetallePagoCreateOrConnectWithoutPagoInput[]
    createMany?: DetallePagoCreateManyPagoInputEnvelope
    connect?: DetallePagoWhereUniqueInput | DetallePagoWhereUniqueInput[]
  }

  export type DetallePagoUncheckedCreateNestedManyWithoutPagoInput = {
    create?: XOR<DetallePagoCreateWithoutPagoInput, DetallePagoUncheckedCreateWithoutPagoInput> | DetallePagoCreateWithoutPagoInput[] | DetallePagoUncheckedCreateWithoutPagoInput[]
    connectOrCreate?: DetallePagoCreateOrConnectWithoutPagoInput | DetallePagoCreateOrConnectWithoutPagoInput[]
    createMany?: DetallePagoCreateManyPagoInputEnvelope
    connect?: DetallePagoWhereUniqueInput | DetallePagoWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumMetodoPagoFieldUpdateOperationsInput = {
    set?: $Enums.MetodoPago
  }

  export type ReservaUpdateOneRequiredWithoutPagosNestedInput = {
    create?: XOR<ReservaCreateWithoutPagosInput, ReservaUncheckedCreateWithoutPagosInput>
    connectOrCreate?: ReservaCreateOrConnectWithoutPagosInput
    upsert?: ReservaUpsertWithoutPagosInput
    connect?: ReservaWhereUniqueInput
    update?: XOR<XOR<ReservaUpdateToOneWithWhereWithoutPagosInput, ReservaUpdateWithoutPagosInput>, ReservaUncheckedUpdateWithoutPagosInput>
  }

  export type DetallePagoUpdateManyWithoutPagoNestedInput = {
    create?: XOR<DetallePagoCreateWithoutPagoInput, DetallePagoUncheckedCreateWithoutPagoInput> | DetallePagoCreateWithoutPagoInput[] | DetallePagoUncheckedCreateWithoutPagoInput[]
    connectOrCreate?: DetallePagoCreateOrConnectWithoutPagoInput | DetallePagoCreateOrConnectWithoutPagoInput[]
    upsert?: DetallePagoUpsertWithWhereUniqueWithoutPagoInput | DetallePagoUpsertWithWhereUniqueWithoutPagoInput[]
    createMany?: DetallePagoCreateManyPagoInputEnvelope
    set?: DetallePagoWhereUniqueInput | DetallePagoWhereUniqueInput[]
    disconnect?: DetallePagoWhereUniqueInput | DetallePagoWhereUniqueInput[]
    delete?: DetallePagoWhereUniqueInput | DetallePagoWhereUniqueInput[]
    connect?: DetallePagoWhereUniqueInput | DetallePagoWhereUniqueInput[]
    update?: DetallePagoUpdateWithWhereUniqueWithoutPagoInput | DetallePagoUpdateWithWhereUniqueWithoutPagoInput[]
    updateMany?: DetallePagoUpdateManyWithWhereWithoutPagoInput | DetallePagoUpdateManyWithWhereWithoutPagoInput[]
    deleteMany?: DetallePagoScalarWhereInput | DetallePagoScalarWhereInput[]
  }

  export type DetallePagoUncheckedUpdateManyWithoutPagoNestedInput = {
    create?: XOR<DetallePagoCreateWithoutPagoInput, DetallePagoUncheckedCreateWithoutPagoInput> | DetallePagoCreateWithoutPagoInput[] | DetallePagoUncheckedCreateWithoutPagoInput[]
    connectOrCreate?: DetallePagoCreateOrConnectWithoutPagoInput | DetallePagoCreateOrConnectWithoutPagoInput[]
    upsert?: DetallePagoUpsertWithWhereUniqueWithoutPagoInput | DetallePagoUpsertWithWhereUniqueWithoutPagoInput[]
    createMany?: DetallePagoCreateManyPagoInputEnvelope
    set?: DetallePagoWhereUniqueInput | DetallePagoWhereUniqueInput[]
    disconnect?: DetallePagoWhereUniqueInput | DetallePagoWhereUniqueInput[]
    delete?: DetallePagoWhereUniqueInput | DetallePagoWhereUniqueInput[]
    connect?: DetallePagoWhereUniqueInput | DetallePagoWhereUniqueInput[]
    update?: DetallePagoUpdateWithWhereUniqueWithoutPagoInput | DetallePagoUpdateWithWhereUniqueWithoutPagoInput[]
    updateMany?: DetallePagoUpdateManyWithWhereWithoutPagoInput | DetallePagoUpdateManyWithWhereWithoutPagoInput[]
    deleteMany?: DetallePagoScalarWhereInput | DetallePagoScalarWhereInput[]
  }

  export type PagoCreateNestedOneWithoutDetallesInput = {
    create?: XOR<PagoCreateWithoutDetallesInput, PagoUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: PagoCreateOrConnectWithoutDetallesInput
    connect?: PagoWhereUniqueInput
  }

  export type PagoUpdateOneRequiredWithoutDetallesNestedInput = {
    create?: XOR<PagoCreateWithoutDetallesInput, PagoUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: PagoCreateOrConnectWithoutDetallesInput
    upsert?: PagoUpsertWithoutDetallesInput
    connect?: PagoWhereUniqueInput
    update?: XOR<XOR<PagoUpdateToOneWithWhereWithoutDetallesInput, PagoUpdateWithoutDetallesInput>, PagoUncheckedUpdateWithoutDetallesInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumMetodoPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoFilter<$PrismaModel> | $Enums.MetodoPago
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumMetodoPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MetodoPago | EnumMetodoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.MetodoPago[] | ListEnumMetodoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumMetodoPagoWithAggregatesFilter<$PrismaModel> | $Enums.MetodoPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMetodoPagoFilter<$PrismaModel>
    _max?: NestedEnumMetodoPagoFilter<$PrismaModel>
  }

  export type HistorialBusquedaCreateWithoutUsuarioInput = {
    termino_busqueda: string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: Date | string
  }

  export type HistorialBusquedaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    termino_busqueda: string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: Date | string
  }

  export type HistorialBusquedaCreateOrConnectWithoutUsuarioInput = {
    where: HistorialBusquedaWhereUniqueInput
    create: XOR<HistorialBusquedaCreateWithoutUsuarioInput, HistorialBusquedaUncheckedCreateWithoutUsuarioInput>
  }

  export type HistorialBusquedaCreateManyUsuarioInputEnvelope = {
    data: HistorialBusquedaCreateManyUsuarioInput | HistorialBusquedaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type HistorialBusquedaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: HistorialBusquedaWhereUniqueInput
    update: XOR<HistorialBusquedaUpdateWithoutUsuarioInput, HistorialBusquedaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<HistorialBusquedaCreateWithoutUsuarioInput, HistorialBusquedaUncheckedCreateWithoutUsuarioInput>
  }

  export type HistorialBusquedaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: HistorialBusquedaWhereUniqueInput
    data: XOR<HistorialBusquedaUpdateWithoutUsuarioInput, HistorialBusquedaUncheckedUpdateWithoutUsuarioInput>
  }

  export type HistorialBusquedaUpdateManyWithWhereWithoutUsuarioInput = {
    where: HistorialBusquedaScalarWhereInput
    data: XOR<HistorialBusquedaUpdateManyMutationInput, HistorialBusquedaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type HistorialBusquedaScalarWhereInput = {
    AND?: HistorialBusquedaScalarWhereInput | HistorialBusquedaScalarWhereInput[]
    OR?: HistorialBusquedaScalarWhereInput[]
    NOT?: HistorialBusquedaScalarWhereInput | HistorialBusquedaScalarWhereInput[]
    id?: IntFilter<"HistorialBusqueda"> | number
    usuario_idusuario?: IntFilter<"HistorialBusqueda"> | number
    termino_busqueda?: StringFilter<"HistorialBusqueda"> | string
    filtros?: JsonNullableFilter<"HistorialBusqueda">
    creado_en?: DateTimeFilter<"HistorialBusqueda"> | Date | string
  }

  export type ReservaCreateWithoutRenterInput = {
    fecha_inicio: Date | string
    fecha_fin: Date | string
    pagado?: boolean
    estado?: string
    expiracion: Date | string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    vehiculo: VehiculoCreateNestedOneWithoutReservasInput
    pagos?: PagoCreateNestedManyWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutRenterInput = {
    idreserva?: number
    fecha_inicio: Date | string
    fecha_fin: Date | string
    pagado?: boolean
    estado?: string
    expiracion: Date | string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    vehiculo_idvehiculo: number
    pagos?: PagoUncheckedCreateNestedManyWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutRenterInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutRenterInput, ReservaUncheckedCreateWithoutRenterInput>
  }

  export type ReservaCreateManyRenterInputEnvelope = {
    data: ReservaCreateManyRenterInput | ReservaCreateManyRenterInput[]
    skipDuplicates?: boolean
  }

  export type CalificacionCreateWithoutRenterInput = {
    puntuacion: number
    comentario?: string | null
    fecha: Date | string
    vehiculo: VehiculoCreateNestedOneWithoutCalificacionesInput
  }

  export type CalificacionUncheckedCreateWithoutRenterInput = {
    idcalificacion?: number
    puntuacion: number
    comentario?: string | null
    fecha: Date | string
    vehiculo_idvehiculo: number
  }

  export type CalificacionCreateOrConnectWithoutRenterInput = {
    where: CalificacionWhereUniqueInput
    create: XOR<CalificacionCreateWithoutRenterInput, CalificacionUncheckedCreateWithoutRenterInput>
  }

  export type CalificacionCreateManyRenterInputEnvelope = {
    data: CalificacionCreateManyRenterInput | CalificacionCreateManyRenterInput[]
    skipDuplicates?: boolean
  }

  export type VehiculoCreateWithoutRenterInput = {
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    ubicacion: UbicacionCreateNestedOneWithoutVehiculosInput
    reservas?: ReservaCreateNestedManyWithoutVehiculoInput
    calificaciones?: CalificacionCreateNestedManyWithoutVehiculoInput
  }

  export type VehiculoUncheckedCreateWithoutRenterInput = {
    idvehiculo?: number
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    ubicacion_idubicacion: number
    reservas?: ReservaUncheckedCreateNestedManyWithoutVehiculoInput
    calificaciones?: CalificacionUncheckedCreateNestedManyWithoutVehiculoInput
  }

  export type VehiculoCreateOrConnectWithoutRenterInput = {
    where: VehiculoWhereUniqueInput
    create: XOR<VehiculoCreateWithoutRenterInput, VehiculoUncheckedCreateWithoutRenterInput>
  }

  export type VehiculoCreateManyRenterInputEnvelope = {
    data: VehiculoCreateManyRenterInput | VehiculoCreateManyRenterInput[]
    skipDuplicates?: boolean
  }

  export type ReservaUpsertWithWhereUniqueWithoutRenterInput = {
    where: ReservaWhereUniqueInput
    update: XOR<ReservaUpdateWithoutRenterInput, ReservaUncheckedUpdateWithoutRenterInput>
    create: XOR<ReservaCreateWithoutRenterInput, ReservaUncheckedCreateWithoutRenterInput>
  }

  export type ReservaUpdateWithWhereUniqueWithoutRenterInput = {
    where: ReservaWhereUniqueInput
    data: XOR<ReservaUpdateWithoutRenterInput, ReservaUncheckedUpdateWithoutRenterInput>
  }

  export type ReservaUpdateManyWithWhereWithoutRenterInput = {
    where: ReservaScalarWhereInput
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyWithoutRenterInput>
  }

  export type ReservaScalarWhereInput = {
    AND?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
    OR?: ReservaScalarWhereInput[]
    NOT?: ReservaScalarWhereInput | ReservaScalarWhereInput[]
    idreserva?: IntFilter<"Reserva"> | number
    fecha_inicio?: DateTimeFilter<"Reserva"> | Date | string
    fecha_fin?: DateTimeFilter<"Reserva"> | Date | string
    pagado?: BoolFilter<"Reserva"> | boolean
    estado?: StringFilter<"Reserva"> | string
    expiracion?: DateTimeFilter<"Reserva"> | Date | string
    fecha_creacion?: DateTimeFilter<"Reserva"> | Date | string
    ultima_modificacion?: DateTimeFilter<"Reserva"> | Date | string
    renter_idrenter?: IntFilter<"Reserva"> | number
    vehiculo_idvehiculo?: IntFilter<"Reserva"> | number
  }

  export type CalificacionUpsertWithWhereUniqueWithoutRenterInput = {
    where: CalificacionWhereUniqueInput
    update: XOR<CalificacionUpdateWithoutRenterInput, CalificacionUncheckedUpdateWithoutRenterInput>
    create: XOR<CalificacionCreateWithoutRenterInput, CalificacionUncheckedCreateWithoutRenterInput>
  }

  export type CalificacionUpdateWithWhereUniqueWithoutRenterInput = {
    where: CalificacionWhereUniqueInput
    data: XOR<CalificacionUpdateWithoutRenterInput, CalificacionUncheckedUpdateWithoutRenterInput>
  }

  export type CalificacionUpdateManyWithWhereWithoutRenterInput = {
    where: CalificacionScalarWhereInput
    data: XOR<CalificacionUpdateManyMutationInput, CalificacionUncheckedUpdateManyWithoutRenterInput>
  }

  export type CalificacionScalarWhereInput = {
    AND?: CalificacionScalarWhereInput | CalificacionScalarWhereInput[]
    OR?: CalificacionScalarWhereInput[]
    NOT?: CalificacionScalarWhereInput | CalificacionScalarWhereInput[]
    idcalificacion?: IntFilter<"Calificacion"> | number
    puntuacion?: FloatFilter<"Calificacion"> | number
    comentario?: StringNullableFilter<"Calificacion"> | string | null
    fecha?: DateTimeFilter<"Calificacion"> | Date | string
    renter_idrenter?: IntFilter<"Calificacion"> | number
    vehiculo_idvehiculo?: IntFilter<"Calificacion"> | number
  }

  export type VehiculoUpsertWithWhereUniqueWithoutRenterInput = {
    where: VehiculoWhereUniqueInput
    update: XOR<VehiculoUpdateWithoutRenterInput, VehiculoUncheckedUpdateWithoutRenterInput>
    create: XOR<VehiculoCreateWithoutRenterInput, VehiculoUncheckedCreateWithoutRenterInput>
  }

  export type VehiculoUpdateWithWhereUniqueWithoutRenterInput = {
    where: VehiculoWhereUniqueInput
    data: XOR<VehiculoUpdateWithoutRenterInput, VehiculoUncheckedUpdateWithoutRenterInput>
  }

  export type VehiculoUpdateManyWithWhereWithoutRenterInput = {
    where: VehiculoScalarWhereInput
    data: XOR<VehiculoUpdateManyMutationInput, VehiculoUncheckedUpdateManyWithoutRenterInput>
  }

  export type VehiculoScalarWhereInput = {
    AND?: VehiculoScalarWhereInput | VehiculoScalarWhereInput[]
    OR?: VehiculoScalarWhereInput[]
    NOT?: VehiculoScalarWhereInput | VehiculoScalarWhereInput[]
    idvehiculo?: IntFilter<"Vehiculo"> | number
    imagen?: StringFilter<"Vehiculo"> | string
    marca?: StringFilter<"Vehiculo"> | string
    modelo?: StringFilter<"Vehiculo"> | string
    tarifa?: FloatFilter<"Vehiculo"> | number
    transmision?: StringFilter<"Vehiculo"> | string
    consumo?: StringFilter<"Vehiculo"> | string
    tipo_auto?: StringFilter<"Vehiculo"> | string
    color?: StringFilter<"Vehiculo"> | string
    anio?: IntFilter<"Vehiculo"> | number
    kilometraje?: IntFilter<"Vehiculo"> | number
    placa?: StringFilter<"Vehiculo"> | string
    descripcion?: StringNullableFilter<"Vehiculo"> | string | null
    disponible?: StringFilter<"Vehiculo"> | string
    estado?: StringFilter<"Vehiculo"> | string
    fecha_creacion?: DateTimeFilter<"Vehiculo"> | Date | string
    ultima_modificacion?: DateTimeFilter<"Vehiculo"> | Date | string
    host_idanfitrion?: IntFilter<"Vehiculo"> | number
    ubicacion_idubicacion?: IntFilter<"Vehiculo"> | number
  }

  export type VehiculoCreateWithoutUbicacionInput = {
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    renter?: RenterCreateNestedOneWithoutVehiculosInput
    reservas?: ReservaCreateNestedManyWithoutVehiculoInput
    calificaciones?: CalificacionCreateNestedManyWithoutVehiculoInput
  }

  export type VehiculoUncheckedCreateWithoutUbicacionInput = {
    idvehiculo?: number
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    host_idanfitrion: number
    reservas?: ReservaUncheckedCreateNestedManyWithoutVehiculoInput
    calificaciones?: CalificacionUncheckedCreateNestedManyWithoutVehiculoInput
  }

  export type VehiculoCreateOrConnectWithoutUbicacionInput = {
    where: VehiculoWhereUniqueInput
    create: XOR<VehiculoCreateWithoutUbicacionInput, VehiculoUncheckedCreateWithoutUbicacionInput>
  }

  export type VehiculoCreateManyUbicacionInputEnvelope = {
    data: VehiculoCreateManyUbicacionInput | VehiculoCreateManyUbicacionInput[]
    skipDuplicates?: boolean
  }

  export type VehiculoUpsertWithWhereUniqueWithoutUbicacionInput = {
    where: VehiculoWhereUniqueInput
    update: XOR<VehiculoUpdateWithoutUbicacionInput, VehiculoUncheckedUpdateWithoutUbicacionInput>
    create: XOR<VehiculoCreateWithoutUbicacionInput, VehiculoUncheckedCreateWithoutUbicacionInput>
  }

  export type VehiculoUpdateWithWhereUniqueWithoutUbicacionInput = {
    where: VehiculoWhereUniqueInput
    data: XOR<VehiculoUpdateWithoutUbicacionInput, VehiculoUncheckedUpdateWithoutUbicacionInput>
  }

  export type VehiculoUpdateManyWithWhereWithoutUbicacionInput = {
    where: VehiculoScalarWhereInput
    data: XOR<VehiculoUpdateManyMutationInput, VehiculoUncheckedUpdateManyWithoutUbicacionInput>
  }

  export type RenterCreateWithoutVehiculosInput = {
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
    reservas?: ReservaCreateNestedManyWithoutRenterInput
    calificaciones?: CalificacionCreateNestedManyWithoutRenterInput
  }

  export type RenterUncheckedCreateWithoutVehiculosInput = {
    idrenter?: number
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
    reservas?: ReservaUncheckedCreateNestedManyWithoutRenterInput
    calificaciones?: CalificacionUncheckedCreateNestedManyWithoutRenterInput
  }

  export type RenterCreateOrConnectWithoutVehiculosInput = {
    where: RenterWhereUniqueInput
    create: XOR<RenterCreateWithoutVehiculosInput, RenterUncheckedCreateWithoutVehiculosInput>
  }

  export type UbicacionCreateWithoutVehiculosInput = {
    pais: string
    ciudad: string
    latitud?: number | null
    amplitud?: number | null
  }

  export type UbicacionUncheckedCreateWithoutVehiculosInput = {
    idubicacion?: number
    pais: string
    ciudad: string
    latitud?: number | null
    amplitud?: number | null
  }

  export type UbicacionCreateOrConnectWithoutVehiculosInput = {
    where: UbicacionWhereUniqueInput
    create: XOR<UbicacionCreateWithoutVehiculosInput, UbicacionUncheckedCreateWithoutVehiculosInput>
  }

  export type ReservaCreateWithoutVehiculoInput = {
    fecha_inicio: Date | string
    fecha_fin: Date | string
    pagado?: boolean
    estado?: string
    expiracion: Date | string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    renter: RenterCreateNestedOneWithoutReservasInput
    pagos?: PagoCreateNestedManyWithoutReservaInput
  }

  export type ReservaUncheckedCreateWithoutVehiculoInput = {
    idreserva?: number
    fecha_inicio: Date | string
    fecha_fin: Date | string
    pagado?: boolean
    estado?: string
    expiracion: Date | string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    renter_idrenter: number
    pagos?: PagoUncheckedCreateNestedManyWithoutReservaInput
  }

  export type ReservaCreateOrConnectWithoutVehiculoInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutVehiculoInput, ReservaUncheckedCreateWithoutVehiculoInput>
  }

  export type ReservaCreateManyVehiculoInputEnvelope = {
    data: ReservaCreateManyVehiculoInput | ReservaCreateManyVehiculoInput[]
    skipDuplicates?: boolean
  }

  export type CalificacionCreateWithoutVehiculoInput = {
    puntuacion: number
    comentario?: string | null
    fecha: Date | string
    renter: RenterCreateNestedOneWithoutCalificacionesInput
  }

  export type CalificacionUncheckedCreateWithoutVehiculoInput = {
    idcalificacion?: number
    puntuacion: number
    comentario?: string | null
    fecha: Date | string
    renter_idrenter: number
  }

  export type CalificacionCreateOrConnectWithoutVehiculoInput = {
    where: CalificacionWhereUniqueInput
    create: XOR<CalificacionCreateWithoutVehiculoInput, CalificacionUncheckedCreateWithoutVehiculoInput>
  }

  export type CalificacionCreateManyVehiculoInputEnvelope = {
    data: CalificacionCreateManyVehiculoInput | CalificacionCreateManyVehiculoInput[]
    skipDuplicates?: boolean
  }

  export type RenterUpsertWithoutVehiculosInput = {
    update: XOR<RenterUpdateWithoutVehiculosInput, RenterUncheckedUpdateWithoutVehiculosInput>
    create: XOR<RenterCreateWithoutVehiculosInput, RenterUncheckedCreateWithoutVehiculosInput>
    where?: RenterWhereInput
  }

  export type RenterUpdateToOneWithWhereWithoutVehiculosInput = {
    where?: RenterWhereInput
    data: XOR<RenterUpdateWithoutVehiculosInput, RenterUncheckedUpdateWithoutVehiculosInput>
  }

  export type RenterUpdateWithoutVehiculosInput = {
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    reservas?: ReservaUpdateManyWithoutRenterNestedInput
    calificaciones?: CalificacionUpdateManyWithoutRenterNestedInput
  }

  export type RenterUncheckedUpdateWithoutVehiculosInput = {
    idrenter?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    reservas?: ReservaUncheckedUpdateManyWithoutRenterNestedInput
    calificaciones?: CalificacionUncheckedUpdateManyWithoutRenterNestedInput
  }

  export type UbicacionUpsertWithoutVehiculosInput = {
    update: XOR<UbicacionUpdateWithoutVehiculosInput, UbicacionUncheckedUpdateWithoutVehiculosInput>
    create: XOR<UbicacionCreateWithoutVehiculosInput, UbicacionUncheckedCreateWithoutVehiculosInput>
    where?: UbicacionWhereInput
  }

  export type UbicacionUpdateToOneWithWhereWithoutVehiculosInput = {
    where?: UbicacionWhereInput
    data: XOR<UbicacionUpdateWithoutVehiculosInput, UbicacionUncheckedUpdateWithoutVehiculosInput>
  }

  export type UbicacionUpdateWithoutVehiculosInput = {
    pais?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    amplitud?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type UbicacionUncheckedUpdateWithoutVehiculosInput = {
    idubicacion?: IntFieldUpdateOperationsInput | number
    pais?: StringFieldUpdateOperationsInput | string
    ciudad?: StringFieldUpdateOperationsInput | string
    latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    amplitud?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ReservaUpsertWithWhereUniqueWithoutVehiculoInput = {
    where: ReservaWhereUniqueInput
    update: XOR<ReservaUpdateWithoutVehiculoInput, ReservaUncheckedUpdateWithoutVehiculoInput>
    create: XOR<ReservaCreateWithoutVehiculoInput, ReservaUncheckedCreateWithoutVehiculoInput>
  }

  export type ReservaUpdateWithWhereUniqueWithoutVehiculoInput = {
    where: ReservaWhereUniqueInput
    data: XOR<ReservaUpdateWithoutVehiculoInput, ReservaUncheckedUpdateWithoutVehiculoInput>
  }

  export type ReservaUpdateManyWithWhereWithoutVehiculoInput = {
    where: ReservaScalarWhereInput
    data: XOR<ReservaUpdateManyMutationInput, ReservaUncheckedUpdateManyWithoutVehiculoInput>
  }

  export type CalificacionUpsertWithWhereUniqueWithoutVehiculoInput = {
    where: CalificacionWhereUniqueInput
    update: XOR<CalificacionUpdateWithoutVehiculoInput, CalificacionUncheckedUpdateWithoutVehiculoInput>
    create: XOR<CalificacionCreateWithoutVehiculoInput, CalificacionUncheckedCreateWithoutVehiculoInput>
  }

  export type CalificacionUpdateWithWhereUniqueWithoutVehiculoInput = {
    where: CalificacionWhereUniqueInput
    data: XOR<CalificacionUpdateWithoutVehiculoInput, CalificacionUncheckedUpdateWithoutVehiculoInput>
  }

  export type CalificacionUpdateManyWithWhereWithoutVehiculoInput = {
    where: CalificacionScalarWhereInput
    data: XOR<CalificacionUpdateManyMutationInput, CalificacionUncheckedUpdateManyWithoutVehiculoInput>
  }

  export type RenterCreateWithoutReservasInput = {
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
    calificaciones?: CalificacionCreateNestedManyWithoutRenterInput
    vehiculos?: VehiculoCreateNestedManyWithoutRenterInput
  }

  export type RenterUncheckedCreateWithoutReservasInput = {
    idrenter?: number
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
    calificaciones?: CalificacionUncheckedCreateNestedManyWithoutRenterInput
    vehiculos?: VehiculoUncheckedCreateNestedManyWithoutRenterInput
  }

  export type RenterCreateOrConnectWithoutReservasInput = {
    where: RenterWhereUniqueInput
    create: XOR<RenterCreateWithoutReservasInput, RenterUncheckedCreateWithoutReservasInput>
  }

  export type VehiculoCreateWithoutReservasInput = {
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    renter?: RenterCreateNestedOneWithoutVehiculosInput
    ubicacion: UbicacionCreateNestedOneWithoutVehiculosInput
    calificaciones?: CalificacionCreateNestedManyWithoutVehiculoInput
  }

  export type VehiculoUncheckedCreateWithoutReservasInput = {
    idvehiculo?: number
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    host_idanfitrion: number
    ubicacion_idubicacion: number
    calificaciones?: CalificacionUncheckedCreateNestedManyWithoutVehiculoInput
  }

  export type VehiculoCreateOrConnectWithoutReservasInput = {
    where: VehiculoWhereUniqueInput
    create: XOR<VehiculoCreateWithoutReservasInput, VehiculoUncheckedCreateWithoutReservasInput>
  }

  export type PagoCreateWithoutReservaInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string
    metodo_pago: $Enums.MetodoPago
    referencia: string
    detalles?: DetallePagoCreateNestedManyWithoutPagoInput
  }

  export type PagoUncheckedCreateWithoutReservaInput = {
    id?: number
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string
    metodo_pago: $Enums.MetodoPago
    referencia: string
    detalles?: DetallePagoUncheckedCreateNestedManyWithoutPagoInput
  }

  export type PagoCreateOrConnectWithoutReservaInput = {
    where: PagoWhereUniqueInput
    create: XOR<PagoCreateWithoutReservaInput, PagoUncheckedCreateWithoutReservaInput>
  }

  export type PagoCreateManyReservaInputEnvelope = {
    data: PagoCreateManyReservaInput | PagoCreateManyReservaInput[]
    skipDuplicates?: boolean
  }

  export type RenterUpsertWithoutReservasInput = {
    update: XOR<RenterUpdateWithoutReservasInput, RenterUncheckedUpdateWithoutReservasInput>
    create: XOR<RenterCreateWithoutReservasInput, RenterUncheckedCreateWithoutReservasInput>
    where?: RenterWhereInput
  }

  export type RenterUpdateToOneWithWhereWithoutReservasInput = {
    where?: RenterWhereInput
    data: XOR<RenterUpdateWithoutReservasInput, RenterUncheckedUpdateWithoutReservasInput>
  }

  export type RenterUpdateWithoutReservasInput = {
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    calificaciones?: CalificacionUpdateManyWithoutRenterNestedInput
    vehiculos?: VehiculoUpdateManyWithoutRenterNestedInput
  }

  export type RenterUncheckedUpdateWithoutReservasInput = {
    idrenter?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    calificaciones?: CalificacionUncheckedUpdateManyWithoutRenterNestedInput
    vehiculos?: VehiculoUncheckedUpdateManyWithoutRenterNestedInput
  }

  export type VehiculoUpsertWithoutReservasInput = {
    update: XOR<VehiculoUpdateWithoutReservasInput, VehiculoUncheckedUpdateWithoutReservasInput>
    create: XOR<VehiculoCreateWithoutReservasInput, VehiculoUncheckedCreateWithoutReservasInput>
    where?: VehiculoWhereInput
  }

  export type VehiculoUpdateToOneWithWhereWithoutReservasInput = {
    where?: VehiculoWhereInput
    data: XOR<VehiculoUpdateWithoutReservasInput, VehiculoUncheckedUpdateWithoutReservasInput>
  }

  export type VehiculoUpdateWithoutReservasInput = {
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneWithoutVehiculosNestedInput
    ubicacion?: UbicacionUpdateOneRequiredWithoutVehiculosNestedInput
    calificaciones?: CalificacionUpdateManyWithoutVehiculoNestedInput
  }

  export type VehiculoUncheckedUpdateWithoutReservasInput = {
    idvehiculo?: IntFieldUpdateOperationsInput | number
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    host_idanfitrion?: IntFieldUpdateOperationsInput | number
    ubicacion_idubicacion?: IntFieldUpdateOperationsInput | number
    calificaciones?: CalificacionUncheckedUpdateManyWithoutVehiculoNestedInput
  }

  export type PagoUpsertWithWhereUniqueWithoutReservaInput = {
    where: PagoWhereUniqueInput
    update: XOR<PagoUpdateWithoutReservaInput, PagoUncheckedUpdateWithoutReservaInput>
    create: XOR<PagoCreateWithoutReservaInput, PagoUncheckedCreateWithoutReservaInput>
  }

  export type PagoUpdateWithWhereUniqueWithoutReservaInput = {
    where: PagoWhereUniqueInput
    data: XOR<PagoUpdateWithoutReservaInput, PagoUncheckedUpdateWithoutReservaInput>
  }

  export type PagoUpdateManyWithWhereWithoutReservaInput = {
    where: PagoScalarWhereInput
    data: XOR<PagoUpdateManyMutationInput, PagoUncheckedUpdateManyWithoutReservaInput>
  }

  export type PagoScalarWhereInput = {
    AND?: PagoScalarWhereInput | PagoScalarWhereInput[]
    OR?: PagoScalarWhereInput[]
    NOT?: PagoScalarWhereInput | PagoScalarWhereInput[]
    id?: IntFilter<"Pago"> | number
    reserva_idreserva?: IntFilter<"Pago"> | number
    monto?: DecimalFilter<"Pago"> | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeFilter<"Pago"> | Date | string
    metodo_pago?: EnumMetodoPagoFilter<"Pago"> | $Enums.MetodoPago
    referencia?: StringFilter<"Pago"> | string
  }

  export type RenterCreateWithoutCalificacionesInput = {
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
    reservas?: ReservaCreateNestedManyWithoutRenterInput
    vehiculos?: VehiculoCreateNestedManyWithoutRenterInput
  }

  export type RenterUncheckedCreateWithoutCalificacionesInput = {
    idrenter?: number
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
    reservas?: ReservaUncheckedCreateNestedManyWithoutRenterInput
    vehiculos?: VehiculoUncheckedCreateNestedManyWithoutRenterInput
  }

  export type RenterCreateOrConnectWithoutCalificacionesInput = {
    where: RenterWhereUniqueInput
    create: XOR<RenterCreateWithoutCalificacionesInput, RenterUncheckedCreateWithoutCalificacionesInput>
  }

  export type VehiculoCreateWithoutCalificacionesInput = {
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    renter?: RenterCreateNestedOneWithoutVehiculosInput
    ubicacion: UbicacionCreateNestedOneWithoutVehiculosInput
    reservas?: ReservaCreateNestedManyWithoutVehiculoInput
  }

  export type VehiculoUncheckedCreateWithoutCalificacionesInput = {
    idvehiculo?: number
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    host_idanfitrion: number
    ubicacion_idubicacion: number
    reservas?: ReservaUncheckedCreateNestedManyWithoutVehiculoInput
  }

  export type VehiculoCreateOrConnectWithoutCalificacionesInput = {
    where: VehiculoWhereUniqueInput
    create: XOR<VehiculoCreateWithoutCalificacionesInput, VehiculoUncheckedCreateWithoutCalificacionesInput>
  }

  export type RenterUpsertWithoutCalificacionesInput = {
    update: XOR<RenterUpdateWithoutCalificacionesInput, RenterUncheckedUpdateWithoutCalificacionesInput>
    create: XOR<RenterCreateWithoutCalificacionesInput, RenterUncheckedCreateWithoutCalificacionesInput>
    where?: RenterWhereInput
  }

  export type RenterUpdateToOneWithWhereWithoutCalificacionesInput = {
    where?: RenterWhereInput
    data: XOR<RenterUpdateWithoutCalificacionesInput, RenterUncheckedUpdateWithoutCalificacionesInput>
  }

  export type RenterUpdateWithoutCalificacionesInput = {
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    reservas?: ReservaUpdateManyWithoutRenterNestedInput
    vehiculos?: VehiculoUpdateManyWithoutRenterNestedInput
  }

  export type RenterUncheckedUpdateWithoutCalificacionesInput = {
    idrenter?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    reservas?: ReservaUncheckedUpdateManyWithoutRenterNestedInput
    vehiculos?: VehiculoUncheckedUpdateManyWithoutRenterNestedInput
  }

  export type VehiculoUpsertWithoutCalificacionesInput = {
    update: XOR<VehiculoUpdateWithoutCalificacionesInput, VehiculoUncheckedUpdateWithoutCalificacionesInput>
    create: XOR<VehiculoCreateWithoutCalificacionesInput, VehiculoUncheckedCreateWithoutCalificacionesInput>
    where?: VehiculoWhereInput
  }

  export type VehiculoUpdateToOneWithWhereWithoutCalificacionesInput = {
    where?: VehiculoWhereInput
    data: XOR<VehiculoUpdateWithoutCalificacionesInput, VehiculoUncheckedUpdateWithoutCalificacionesInput>
  }

  export type VehiculoUpdateWithoutCalificacionesInput = {
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneWithoutVehiculosNestedInput
    ubicacion?: UbicacionUpdateOneRequiredWithoutVehiculosNestedInput
    reservas?: ReservaUpdateManyWithoutVehiculoNestedInput
  }

  export type VehiculoUncheckedUpdateWithoutCalificacionesInput = {
    idvehiculo?: IntFieldUpdateOperationsInput | number
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    host_idanfitrion?: IntFieldUpdateOperationsInput | number
    ubicacion_idubicacion?: IntFieldUpdateOperationsInput | number
    reservas?: ReservaUncheckedUpdateManyWithoutVehiculoNestedInput
  }

  export type UsuarioCreateWithoutHistorialBusquedaInput = {
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
  }

  export type UsuarioUncheckedCreateWithoutHistorialBusquedaInput = {
    idusuario?: number
    nombre_completo: string
    correo: string
    contrasena: string
    telefono?: string | null
    genero?: string | null
    foto_perfil?: string | null
    estado?: string
    fecha_registro?: Date | string
    ultima_modificacion?: Date | string
  }

  export type UsuarioCreateOrConnectWithoutHistorialBusquedaInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutHistorialBusquedaInput, UsuarioUncheckedCreateWithoutHistorialBusquedaInput>
  }

  export type UsuarioUpsertWithoutHistorialBusquedaInput = {
    update: XOR<UsuarioUpdateWithoutHistorialBusquedaInput, UsuarioUncheckedUpdateWithoutHistorialBusquedaInput>
    create: XOR<UsuarioCreateWithoutHistorialBusquedaInput, UsuarioUncheckedCreateWithoutHistorialBusquedaInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutHistorialBusquedaInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutHistorialBusquedaInput, UsuarioUncheckedUpdateWithoutHistorialBusquedaInput>
  }

  export type UsuarioUpdateWithoutHistorialBusquedaInput = {
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioUncheckedUpdateWithoutHistorialBusquedaInput = {
    idusuario?: IntFieldUpdateOperationsInput | number
    nombre_completo?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    genero?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservaCreateWithoutPagosInput = {
    fecha_inicio: Date | string
    fecha_fin: Date | string
    pagado?: boolean
    estado?: string
    expiracion: Date | string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    renter: RenterCreateNestedOneWithoutReservasInput
    vehiculo: VehiculoCreateNestedOneWithoutReservasInput
  }

  export type ReservaUncheckedCreateWithoutPagosInput = {
    idreserva?: number
    fecha_inicio: Date | string
    fecha_fin: Date | string
    pagado?: boolean
    estado?: string
    expiracion: Date | string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    renter_idrenter: number
    vehiculo_idvehiculo: number
  }

  export type ReservaCreateOrConnectWithoutPagosInput = {
    where: ReservaWhereUniqueInput
    create: XOR<ReservaCreateWithoutPagosInput, ReservaUncheckedCreateWithoutPagosInput>
  }

  export type DetallePagoCreateWithoutPagoInput = {
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha_creacion?: Date | string
  }

  export type DetallePagoUncheckedCreateWithoutPagoInput = {
    iddetalle_pago?: number
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha_creacion?: Date | string
  }

  export type DetallePagoCreateOrConnectWithoutPagoInput = {
    where: DetallePagoWhereUniqueInput
    create: XOR<DetallePagoCreateWithoutPagoInput, DetallePagoUncheckedCreateWithoutPagoInput>
  }

  export type DetallePagoCreateManyPagoInputEnvelope = {
    data: DetallePagoCreateManyPagoInput | DetallePagoCreateManyPagoInput[]
    skipDuplicates?: boolean
  }

  export type ReservaUpsertWithoutPagosInput = {
    update: XOR<ReservaUpdateWithoutPagosInput, ReservaUncheckedUpdateWithoutPagosInput>
    create: XOR<ReservaCreateWithoutPagosInput, ReservaUncheckedCreateWithoutPagosInput>
    where?: ReservaWhereInput
  }

  export type ReservaUpdateToOneWithWhereWithoutPagosInput = {
    where?: ReservaWhereInput
    data: XOR<ReservaUpdateWithoutPagosInput, ReservaUncheckedUpdateWithoutPagosInput>
  }

  export type ReservaUpdateWithoutPagosInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    pagado?: BoolFieldUpdateOperationsInput | boolean
    estado?: StringFieldUpdateOperationsInput | string
    expiracion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReservasNestedInput
    vehiculo?: VehiculoUpdateOneRequiredWithoutReservasNestedInput
  }

  export type ReservaUncheckedUpdateWithoutPagosInput = {
    idreserva?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    pagado?: BoolFieldUpdateOperationsInput | boolean
    estado?: StringFieldUpdateOperationsInput | string
    expiracion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    renter_idrenter?: IntFieldUpdateOperationsInput | number
    vehiculo_idvehiculo?: IntFieldUpdateOperationsInput | number
  }

  export type DetallePagoUpsertWithWhereUniqueWithoutPagoInput = {
    where: DetallePagoWhereUniqueInput
    update: XOR<DetallePagoUpdateWithoutPagoInput, DetallePagoUncheckedUpdateWithoutPagoInput>
    create: XOR<DetallePagoCreateWithoutPagoInput, DetallePagoUncheckedCreateWithoutPagoInput>
  }

  export type DetallePagoUpdateWithWhereUniqueWithoutPagoInput = {
    where: DetallePagoWhereUniqueInput
    data: XOR<DetallePagoUpdateWithoutPagoInput, DetallePagoUncheckedUpdateWithoutPagoInput>
  }

  export type DetallePagoUpdateManyWithWhereWithoutPagoInput = {
    where: DetallePagoScalarWhereInput
    data: XOR<DetallePagoUpdateManyMutationInput, DetallePagoUncheckedUpdateManyWithoutPagoInput>
  }

  export type DetallePagoScalarWhereInput = {
    AND?: DetallePagoScalarWhereInput | DetallePagoScalarWhereInput[]
    OR?: DetallePagoScalarWhereInput[]
    NOT?: DetallePagoScalarWhereInput | DetallePagoScalarWhereInput[]
    iddetalle_pago?: IntFilter<"DetallePago"> | number
    idpago?: IntFilter<"DetallePago"> | number
    concepto?: StringFilter<"DetallePago"> | string
    monto?: DecimalFilter<"DetallePago"> | Decimal | DecimalJsLike | number | string
    fecha_creacion?: DateTimeFilter<"DetallePago"> | Date | string
  }

  export type PagoCreateWithoutDetallesInput = {
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string
    metodo_pago: $Enums.MetodoPago
    referencia: string
    reserva: ReservaCreateNestedOneWithoutPagosInput
  }

  export type PagoUncheckedCreateWithoutDetallesInput = {
    id?: number
    reserva_idreserva: number
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string
    metodo_pago: $Enums.MetodoPago
    referencia: string
  }

  export type PagoCreateOrConnectWithoutDetallesInput = {
    where: PagoWhereUniqueInput
    create: XOR<PagoCreateWithoutDetallesInput, PagoUncheckedCreateWithoutDetallesInput>
  }

  export type PagoUpsertWithoutDetallesInput = {
    update: XOR<PagoUpdateWithoutDetallesInput, PagoUncheckedUpdateWithoutDetallesInput>
    create: XOR<PagoCreateWithoutDetallesInput, PagoUncheckedCreateWithoutDetallesInput>
    where?: PagoWhereInput
  }

  export type PagoUpdateToOneWithWhereWithoutDetallesInput = {
    where?: PagoWhereInput
    data: XOR<PagoUpdateWithoutDetallesInput, PagoUncheckedUpdateWithoutDetallesInput>
  }

  export type PagoUpdateWithoutDetallesInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    referencia?: StringFieldUpdateOperationsInput | string
    reserva?: ReservaUpdateOneRequiredWithoutPagosNestedInput
  }

  export type PagoUncheckedUpdateWithoutDetallesInput = {
    id?: IntFieldUpdateOperationsInput | number
    reserva_idreserva?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    referencia?: StringFieldUpdateOperationsInput | string
  }

  export type HistorialBusquedaCreateManyUsuarioInput = {
    id?: number
    termino_busqueda: string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: Date | string
  }

  export type HistorialBusquedaUpdateWithoutUsuarioInput = {
    termino_busqueda?: StringFieldUpdateOperationsInput | string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialBusquedaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    termino_busqueda?: StringFieldUpdateOperationsInput | string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialBusquedaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    termino_busqueda?: StringFieldUpdateOperationsInput | string
    filtros?: NullableJsonNullValueInput | InputJsonValue
    creado_en?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservaCreateManyRenterInput = {
    idreserva?: number
    fecha_inicio: Date | string
    fecha_fin: Date | string
    pagado?: boolean
    estado?: string
    expiracion: Date | string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    vehiculo_idvehiculo: number
  }

  export type CalificacionCreateManyRenterInput = {
    idcalificacion?: number
    puntuacion: number
    comentario?: string | null
    fecha: Date | string
    vehiculo_idvehiculo: number
  }

  export type VehiculoCreateManyRenterInput = {
    idvehiculo?: number
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    ubicacion_idubicacion: number
  }

  export type ReservaUpdateWithoutRenterInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    pagado?: BoolFieldUpdateOperationsInput | boolean
    estado?: StringFieldUpdateOperationsInput | string
    expiracion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    vehiculo?: VehiculoUpdateOneRequiredWithoutReservasNestedInput
    pagos?: PagoUpdateManyWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutRenterInput = {
    idreserva?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    pagado?: BoolFieldUpdateOperationsInput | boolean
    estado?: StringFieldUpdateOperationsInput | string
    expiracion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    vehiculo_idvehiculo?: IntFieldUpdateOperationsInput | number
    pagos?: PagoUncheckedUpdateManyWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateManyWithoutRenterInput = {
    idreserva?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    pagado?: BoolFieldUpdateOperationsInput | boolean
    estado?: StringFieldUpdateOperationsInput | string
    expiracion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    vehiculo_idvehiculo?: IntFieldUpdateOperationsInput | number
  }

  export type CalificacionUpdateWithoutRenterInput = {
    puntuacion?: FloatFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    vehiculo?: VehiculoUpdateOneRequiredWithoutCalificacionesNestedInput
  }

  export type CalificacionUncheckedUpdateWithoutRenterInput = {
    idcalificacion?: IntFieldUpdateOperationsInput | number
    puntuacion?: FloatFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    vehiculo_idvehiculo?: IntFieldUpdateOperationsInput | number
  }

  export type CalificacionUncheckedUpdateManyWithoutRenterInput = {
    idcalificacion?: IntFieldUpdateOperationsInput | number
    puntuacion?: FloatFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    vehiculo_idvehiculo?: IntFieldUpdateOperationsInput | number
  }

  export type VehiculoUpdateWithoutRenterInput = {
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ubicacion?: UbicacionUpdateOneRequiredWithoutVehiculosNestedInput
    reservas?: ReservaUpdateManyWithoutVehiculoNestedInput
    calificaciones?: CalificacionUpdateManyWithoutVehiculoNestedInput
  }

  export type VehiculoUncheckedUpdateWithoutRenterInput = {
    idvehiculo?: IntFieldUpdateOperationsInput | number
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ubicacion_idubicacion?: IntFieldUpdateOperationsInput | number
    reservas?: ReservaUncheckedUpdateManyWithoutVehiculoNestedInput
    calificaciones?: CalificacionUncheckedUpdateManyWithoutVehiculoNestedInput
  }

  export type VehiculoUncheckedUpdateManyWithoutRenterInput = {
    idvehiculo?: IntFieldUpdateOperationsInput | number
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ubicacion_idubicacion?: IntFieldUpdateOperationsInput | number
  }

  export type VehiculoCreateManyUbicacionInput = {
    idvehiculo?: number
    imagen: string
    marca: string
    modelo: string
    tarifa: number
    transmision: string
    consumo: string
    tipo_auto: string
    color: string
    anio: number
    kilometraje: number
    placa: string
    descripcion?: string | null
    disponible?: string
    estado?: string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    host_idanfitrion: number
  }

  export type VehiculoUpdateWithoutUbicacionInput = {
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneWithoutVehiculosNestedInput
    reservas?: ReservaUpdateManyWithoutVehiculoNestedInput
    calificaciones?: CalificacionUpdateManyWithoutVehiculoNestedInput
  }

  export type VehiculoUncheckedUpdateWithoutUbicacionInput = {
    idvehiculo?: IntFieldUpdateOperationsInput | number
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    host_idanfitrion?: IntFieldUpdateOperationsInput | number
    reservas?: ReservaUncheckedUpdateManyWithoutVehiculoNestedInput
    calificaciones?: CalificacionUncheckedUpdateManyWithoutVehiculoNestedInput
  }

  export type VehiculoUncheckedUpdateManyWithoutUbicacionInput = {
    idvehiculo?: IntFieldUpdateOperationsInput | number
    imagen?: StringFieldUpdateOperationsInput | string
    marca?: StringFieldUpdateOperationsInput | string
    modelo?: StringFieldUpdateOperationsInput | string
    tarifa?: FloatFieldUpdateOperationsInput | number
    transmision?: StringFieldUpdateOperationsInput | string
    consumo?: StringFieldUpdateOperationsInput | string
    tipo_auto?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    kilometraje?: IntFieldUpdateOperationsInput | number
    placa?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    disponible?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    host_idanfitrion?: IntFieldUpdateOperationsInput | number
  }

  export type ReservaCreateManyVehiculoInput = {
    idreserva?: number
    fecha_inicio: Date | string
    fecha_fin: Date | string
    pagado?: boolean
    estado?: string
    expiracion: Date | string
    fecha_creacion?: Date | string
    ultima_modificacion?: Date | string
    renter_idrenter: number
  }

  export type CalificacionCreateManyVehiculoInput = {
    idcalificacion?: number
    puntuacion: number
    comentario?: string | null
    fecha: Date | string
    renter_idrenter: number
  }

  export type ReservaUpdateWithoutVehiculoInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    pagado?: BoolFieldUpdateOperationsInput | boolean
    estado?: StringFieldUpdateOperationsInput | string
    expiracion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutReservasNestedInput
    pagos?: PagoUpdateManyWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateWithoutVehiculoInput = {
    idreserva?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    pagado?: BoolFieldUpdateOperationsInput | boolean
    estado?: StringFieldUpdateOperationsInput | string
    expiracion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    renter_idrenter?: IntFieldUpdateOperationsInput | number
    pagos?: PagoUncheckedUpdateManyWithoutReservaNestedInput
  }

  export type ReservaUncheckedUpdateManyWithoutVehiculoInput = {
    idreserva?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    pagado?: BoolFieldUpdateOperationsInput | boolean
    estado?: StringFieldUpdateOperationsInput | string
    expiracion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
    ultima_modificacion?: DateTimeFieldUpdateOperationsInput | Date | string
    renter_idrenter?: IntFieldUpdateOperationsInput | number
  }

  export type CalificacionUpdateWithoutVehiculoInput = {
    puntuacion?: FloatFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    renter?: RenterUpdateOneRequiredWithoutCalificacionesNestedInput
  }

  export type CalificacionUncheckedUpdateWithoutVehiculoInput = {
    idcalificacion?: IntFieldUpdateOperationsInput | number
    puntuacion?: FloatFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    renter_idrenter?: IntFieldUpdateOperationsInput | number
  }

  export type CalificacionUncheckedUpdateManyWithoutVehiculoInput = {
    idcalificacion?: IntFieldUpdateOperationsInput | number
    puntuacion?: FloatFieldUpdateOperationsInput | number
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    renter_idrenter?: IntFieldUpdateOperationsInput | number
  }

  export type PagoCreateManyReservaInput = {
    id?: number
    monto: Decimal | DecimalJsLike | number | string
    fecha_pago?: Date | string
    metodo_pago: $Enums.MetodoPago
    referencia: string
  }

  export type PagoUpdateWithoutReservaInput = {
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    referencia?: StringFieldUpdateOperationsInput | string
    detalles?: DetallePagoUpdateManyWithoutPagoNestedInput
  }

  export type PagoUncheckedUpdateWithoutReservaInput = {
    id?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    referencia?: StringFieldUpdateOperationsInput | string
    detalles?: DetallePagoUncheckedUpdateManyWithoutPagoNestedInput
  }

  export type PagoUncheckedUpdateManyWithoutReservaInput = {
    id?: IntFieldUpdateOperationsInput | number
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    metodo_pago?: EnumMetodoPagoFieldUpdateOperationsInput | $Enums.MetodoPago
    referencia?: StringFieldUpdateOperationsInput | string
  }

  export type DetallePagoCreateManyPagoInput = {
    iddetalle_pago?: number
    concepto: string
    monto: Decimal | DecimalJsLike | number | string
    fecha_creacion?: Date | string
  }

  export type DetallePagoUpdateWithoutPagoInput = {
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetallePagoUncheckedUpdateWithoutPagoInput = {
    iddetalle_pago?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DetallePagoUncheckedUpdateManyWithoutPagoInput = {
    iddetalle_pago?: IntFieldUpdateOperationsInput | number
    concepto?: StringFieldUpdateOperationsInput | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_creacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}